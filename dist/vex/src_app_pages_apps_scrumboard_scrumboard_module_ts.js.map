{"version":3,"file":"src_app_pages_apps_scrumboard_scrumboard_module_ts.js","mappings":"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","sources":["./src/@vex/animations/fade-in-up.animation.ts","./src/@vex/animations/stagger.animation.ts","./src/@vex/components/breadcrumbs/breadcrumb/breadcrumb.component.ts","./src/@vex/components/breadcrumbs/breadcrumbs.component.ts","./src/@vex/components/breadcrumbs/breadcrumbs.module.ts","./src/@vex/components/secondary-toolbar/secondary-toolbar.component.ts","./src/@vex/components/secondary-toolbar/secondary-toolbar.module.ts","./src/@vex/pipes/date-tokens/date-tokens.module.ts","./src/@vex/pipes/date-tokens/date-tokens.pipe.ts","./src/app/pages/apps/scrumboard/components/scrumboard-dialog/scrumboard-dialog.component.ts","./src/app/pages/apps/scrumboard/components/scrumboard-dialog/scrumboard-dialog.component.html","./src/app/pages/apps/scrumboard/components/scrumboard-dialog/scrumboard-dialog.module.ts","./src/app/pages/apps/scrumboard/scrumboard-routing.module.ts","./src/app/pages/apps/scrumboard/scrumboard.component.ts","./src/app/pages/apps/scrumboard/scrumboard.component.html","./src/app/pages/apps/scrumboard/scrumboard.module.ts","./src/static-data/scrumboard.ts","./node_modules/@angular/cdk/fesm2022/drag-drop.mjs"],"sourcesContent":["import { animate, style, transition, trigger } from '@angular/animations';\r\n\r\nexport function fadeInUpAnimation(duration: number) {\r\n  return trigger('fadeInUp', [\r\n    transition(':enter', [\r\n      style({\r\n        transform: 'translateY(20px)',\r\n        opacity: 0\r\n      }),\r\n      animate(`${duration}ms cubic-bezier(0.35, 0, 0.25, 1)`, style({\r\n        transform: 'translateY(0)',\r\n        opacity: 1\r\n      }))\r\n    ])\r\n  ]);\r\n}\r\n\r\nexport const fadeInUp400ms = fadeInUpAnimation(400);\r\n","import { animateChild, query, stagger, transition, trigger } from '@angular/animations';\r\n\r\nexport function staggerAnimation(timing: number) {\r\n  return trigger('stagger', [\r\n    transition('* => *', [ // each time the binding value changes\r\n      query(':enter', stagger(timing, animateChild()), { optional: true }),\r\n    ])\r\n  ]);\r\n}\r\n\r\nexport const stagger80ms = staggerAnimation(80);\r\nexport const stagger60ms = staggerAnimation(60);\r\nexport const stagger40ms = staggerAnimation(40);\r\nexport const stagger20ms = staggerAnimation(20);\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'vex-breadcrumb',\r\n  template: `\r\n      <ng-content></ng-content>\r\n  `,\r\n  styles: [],\r\n  host: {\r\n    class: 'vex-breadcrumb body-2 text-hint leading-none hover:text-primary no-underline trans-ease-out ltr:mr-2 rtl:ml-2'\r\n  }\r\n})\r\nexport class BreadcrumbComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { trackByValue } from '../../utils/track-by';\r\n\r\n@Component({\r\n  selector: 'vex-breadcrumbs',\r\n  template: `\r\n    <div class=\"flex items-center\">\r\n      <vex-breadcrumb>\r\n        <a [routerLink]=\"['/']\">\r\n          <mat-icon svgIcon=\"mat:home\" class=\"icon-sm\"></mat-icon>\r\n        </a>\r\n      </vex-breadcrumb>\r\n      <ng-container *ngFor=\"let crumb of crumbs; trackBy: trackByValue\">\r\n        <div class=\"w-1 h-1 bg-gray rounded-full ltr:mr-2 rtl:ml-2\"></div>\r\n        <vex-breadcrumb>\r\n          <a [routerLink]=\"[]\">{{ crumb }}</a>\r\n        </vex-breadcrumb>\r\n      </ng-container>\r\n    </div>\r\n  `\r\n})\r\nexport class BreadcrumbsComponent implements OnInit {\r\n\r\n  @Input() crumbs: string[] = [];\r\n\r\n  trackByValue = trackByValue;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { BreadcrumbsComponent } from './breadcrumbs.component';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { BreadcrumbComponent } from './breadcrumb/breadcrumb.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    MatIconModule\r\n  ],\r\n  declarations: [BreadcrumbsComponent, BreadcrumbComponent],\r\n  exports: [BreadcrumbsComponent]\r\n})\r\nexport class BreadcrumbsModule {\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { ConfigService } from '../../config/config.service';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'vex-secondary-toolbar',\r\n  template: `\r\n    <div class=\"secondary-toolbar-placeholder\">&nbsp;</div>\r\n\r\n    <div [ngClass]=\"{ 'fixed': fixed$ | async, 'w-full': !(fixed$ | async) }\" class=\"secondary-toolbar shadow-b py-1 z-40 border-t flex\">\r\n      <div class=\"px-gutter flex items-center flex-auto\" [class.container]=\"isVerticalLayout$ | async\">\r\n        <h1 *ngIf=\"current\"\r\n            class=\"subheading-2 font-medium m-0 ltr:pr-3 rtl:pl-3 ltr:border-r rtl:border-l ltr:mr-3 rtl:ml-3 flex-none\">{{ current }}</h1>\r\n\r\n        <ng-content></ng-content>\r\n      </div>\r\n    </div>\r\n  `,\r\n  styleUrls: ['./secondary-toolbar.component.scss']\r\n})\r\nexport class SecondaryToolbarComponent {\r\n\r\n  @Input() current: string;\r\n  @Input() crumbs: string[];\r\n\r\n  fixed$ = this.configService.config$.pipe(\r\n    map(config => config.toolbar.fixed)\r\n  );\r\n\r\n  isVerticalLayout$: Observable<boolean> = this.configService.select(config => config.layout).pipe(\r\n    map(layout => layout === 'vertical')\r\n  );\r\n\r\n  constructor(private readonly configService: ConfigService) { }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SecondaryToolbarComponent } from './secondary-toolbar.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { BreadcrumbsModule } from '../breadcrumbs/breadcrumbs.module';\r\n\r\n@NgModule({\r\n  declarations: [SecondaryToolbarComponent],\r\n  imports: [\r\n    CommonModule,\r\n\r\n    RouterModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    BreadcrumbsModule\r\n  ],\r\n  exports: [SecondaryToolbarComponent]\r\n})\r\nexport class SecondaryToolbarModule {\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DateTokensPipe } from './date-tokens.pipe';\r\n\r\n\r\n@NgModule({\r\n  declarations: [DateTokensPipe],\r\n  exports: [\r\n    DateTokensPipe\r\n  ],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n})\r\nexport class DateTokensModule {\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DateTime } from 'luxon';\r\n\r\n@Pipe({\r\n  name: 'dateTokens'\r\n})\r\nexport class DateTokensPipe implements PipeTransform {\r\n\r\n  transform(value: DateTime | null, ...args: string[]): any {\r\n    if (!args[0]) {\r\n      throw new Error('[DateTokensPipe]: No args defined, please define your format.');\r\n    }\r\n\r\n    return value ? value.toFormat(args[0]) : '';\r\n  }\r\n\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { ScrumboardCard } from '../../interfaces/scrumboard-card.interface';\r\nimport { UntypedFormArray, UntypedFormBuilder, UntypedFormControl } from '@angular/forms';\r\nimport { scrumboardLabels, scrumboardUsers } from '../../../../../../static-data/scrumboard';\r\nimport { ScrumboardList } from '../../interfaces/scrumboard-list.interface';\r\nimport { Scrumboard } from '../../interfaces/scrumboard.interface';\r\nimport { ScrumboardAttachment } from '../../interfaces/scrumboard-attachment.interface';\r\nimport { DateTime } from 'luxon';\r\nimport { ScrumboardComment } from '../../interfaces/scrumboard-comment.interface';\r\n\r\n@Component({\r\n  selector: 'vex-scrumboard-dialog',\r\n  templateUrl: './scrumboard-dialog.component.html',\r\n  styleUrls: ['./scrumboard-dialog.component.scss']\r\n})\r\nexport class ScrumboardDialogComponent implements OnInit {\r\n\r\n  form = this.fb.group({\r\n    title: null,\r\n    description: null,\r\n    dueDate: null,\r\n    cover: null,\r\n    attachments: this.fb.array([]),\r\n    comments: this.fb.array([]),\r\n    users: [],\r\n    labels: []\r\n  });\r\n\r\n  commentCtrl = new UntypedFormControl();\r\n\r\n  users = scrumboardUsers;\r\n  labels = scrumboardLabels;\r\n\r\n  list: ScrumboardList;\r\n  board: Scrumboard;\r\n\r\n  constructor(private dialogRef: MatDialogRef<ScrumboardDialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) private data: {\r\n                card: ScrumboardCard;\r\n                list: ScrumboardList;\r\n                board: Scrumboard;\r\n              },\r\n              private fb: UntypedFormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.list = this.data.list;\r\n    this.board = this.data.board;\r\n\r\n    const card = this.data.card;\r\n\r\n    this.form.patchValue({\r\n      title: card.title,\r\n      description: card.description,\r\n      dueDate: card.dueDate || null,\r\n      cover: card.cover || null,\r\n      users: card.users || [],\r\n      labels: card.labels || []\r\n    });\r\n\r\n    this.form.setControl('attachments', this.fb.array(card.attachments || []));\r\n    this.form.setControl('comments', this.fb.array(card.comments || []));\r\n  }\r\n\r\n  save() {\r\n    this.dialogRef.close(this.form.value);\r\n  }\r\n\r\n  isImageExtension(extension: string) {\r\n    return extension === 'jpg' || extension === 'png';\r\n  }\r\n\r\n  makeCover(attachment: ScrumboardAttachment) {\r\n    this.form.get('cover').setValue(attachment);\r\n  }\r\n\r\n  isCover(attachment: ScrumboardAttachment) {\r\n    return this.form.get('cover').value === attachment;\r\n  }\r\n\r\n  remove(attachment: ScrumboardAttachment) {\r\n    if (this.form.get('cover').value && attachment.id === this.form.get('cover').value.id) {\r\n      this.form.get('cover').setValue(null);\r\n    }\r\n\r\n    this.form.setControl('attachments', this.fb.array(this.form.get('attachments').value.filter(a => a !== attachment)));\r\n  }\r\n\r\n  addComment() {\r\n    if (!this.commentCtrl.value) {\r\n      return;\r\n    }\r\n\r\n    const comments = this.form.get('comments') as UntypedFormArray;\r\n    comments.push(new UntypedFormControl({\r\n      from: {\r\n        name: 'David Smith',\r\n        imageSrc: 'assets/img/avatars/1.jpg'\r\n      },\r\n      message: this.commentCtrl.value,\r\n      date: DateTime.local().minus({ seconds: 1 })\r\n    } as ScrumboardComment));\r\n\r\n    this.commentCtrl.setValue(null);\r\n  }\r\n}\r\n","<form (ngSubmit)=\"save()\" [formGroup]=\"form\">\r\n  <div class=\"mb-0 body-1\" mat-dialog-title>\r\n    <h2 class=\"title m-0 flex items-center\">\r\n      <mat-icon class=\"ltr:mr-1 rtl:ml-1 text-secondary flex-none\" svgIcon=\"mat:assignment\"></mat-icon>\r\n      <input [class.empty]=\"!form.get('title').value\"\r\n             class=\"hidden-input title bg-foreground flex-auto\"\r\n             formControlName=\"title\">\r\n      <button cdkFocusInitial class=\"text-secondary\" mat-dialog-close mat-icon-button type=\"button\">\r\n        <mat-icon svgIcon=\"mat:close\"></mat-icon>\r\n      </button>\r\n    </h2>\r\n\r\n    <div class=\"body-2 text-secondary ltr:ml-10 rtl:mr-10 flex items-center\">\r\n      <span>{{ board?.label }}</span>\r\n      <div class=\"w-1 h-1 mx-2 bg-gray rounded-full\"></div>\r\n      <span>{{ list?.label }}</span>\r\n    </div>\r\n\r\n    <div class=\"mt-3 ltr:ml-10 rtl:mr-10 flex flex-wrap items-start justify-between\">\r\n      <div class=\"members flex-1 relative\">\r\n        <div class=\"body-2 text-secondary\">Members</div>\r\n        <div class=\"flex items-center\">\r\n          <img *ngFor=\"let user of form.get('users').value\"\r\n               [matTooltip]=\"user.name\"\r\n               [src]=\"user.imageSrc\"\r\n               class=\"avatar flex-none\">\r\n          <div (click)=\"memberSelect.open()\"\r\n               class=\"avatar text-secondary bg-app-bar cursor-pointer flex-none flex items-center justify-center\">\r\n            <mat-icon svgIcon=\"mat:add\"></mat-icon>\r\n          </div>\r\n        </div>\r\n        <mat-select #memberSelect=\"matSelect\"\r\n                    class=\"invisible absolute text-sm\"\r\n                    formControlName=\"users\"\r\n                    multiple>\r\n          <mat-option *ngFor=\"let user of users\" [value]=\"user\">\r\n            <img [src]=\"user.imageSrc\" class=\"avatar h-6 w-6 align-middle inline-block ltr:mr-2 rtl:ml-2\">\r\n            <span>{{ user.name }}</span>\r\n          </mat-option>\r\n        </mat-select>\r\n      </div>\r\n\r\n      <div class=\"labels flex-1 relative\">\r\n        <div class=\"flex justify-end\">\r\n          <div>\r\n            <div class=\"body-2 text-secondary\">Labels</div>\r\n            <div class=\"flex flex-wrap items-center gap-1\">\r\n              <div *ngFor=\"let label of form.get('labels').value\"\r\n                   [ngClass]=\"[label.bgClass, label.textClass]\"\r\n                   class=\"label flex-none\">\r\n                {{ label.label }}\r\n              </div>\r\n              <div (click)=\"labelSelect.open()\"\r\n                   class=\"label text-secondary bg-app-bar cursor-pointer mt-1 flex-none flex items-center justify-center\">\r\n                <mat-icon svgIcon=\"mat:add\"></mat-icon>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <mat-select #labelSelect=\"matSelect\"\r\n                    class=\"invisible absolute text-sm\"\r\n                    formControlName=\"labels\"\r\n                    multiple>\r\n          <mat-option *ngFor=\"let label of labels\" [value]=\"label\">\r\n            <div class=\"flex items-center\">\r\n              <div [ngClass]=\"label.bgClass\"\r\n                   class=\"h-6 w-6 align-middle ltr:mr-2 rtl:ml-2 rounded inline-block\"></div>\r\n              <span>{{ label.label }}</span>\r\n            </div>\r\n          </mat-option>\r\n        </mat-select>\r\n      </div>\r\n    </div>\r\n\r\n    <mat-divider class=\"-mx-6 mt-6\"></mat-divider>\r\n  </div>\r\n\r\n  <mat-dialog-content class=\"pb-6 content\">\r\n\r\n    <h2 class=\"body-2 font-medium m-0 mt-6 text-secondary flex items-center\">\r\n      <mat-icon class=\"ltr:mr-4 rtl:ml-4 flex-none\" svgIcon=\"mat:description\"></mat-icon>\r\n      <span>Description</span>\r\n    </h2>\r\n\r\n    <div class=\"ltr:ml-10 rtl:mr-10 mt-3 flex flex-col\">\r\n      <mat-form-field appearance=\"outline\" class=\"text-sm\">\r\n        <textarea cdkAutosizeMinRows=\"2\"\r\n                  matInput\r\n                  cdkTextareaAutosize\r\n                  formControlName=\"description\"\r\n                  placeholder=\"Add a description ...\"></textarea>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <h2 class=\"body-2 font-medium m-0 text-secondary mt-4 flex items-center\">\r\n      <mat-icon class=\"ltr:mr-4 rtl:ml-4 flex-none\" svgIcon=\"mat:attach_file\"></mat-icon>\r\n      <span class=\"flex-auto\">Attachments</span>\r\n      <button color=\"primary\" mat-button type=\"button\">\r\n        <mat-icon class=\"ltr:mr-1 rtl:ml-1 ltr:-ml-1 rtl:-mr-1 icon-sm\" svgIcon=\"mat:add\"></mat-icon>\r\n        <span>Add Attachment</span>\r\n      </button>\r\n    </h2>\r\n\r\n    <div *ngIf=\"form.get('attachments').value?.length > 0\"\r\n         class=\"ltr:ml-10 rtl:mr-10 mt-3 grid grid-cols-1 sm:grid-cols-2 gap-4\">\r\n      <div *ngFor=\"let attachment of form.get('attachments').value\"\r\n           class=\"border p-1 rounded flex items-center\">\r\n\r\n        <div *ngIf=\"isImageExtension(attachment.extension)\"\r\n             class=\"bg-app-bar rounded ltr:mr-3 rtl:ml-3 w-24 h-16 overflow-hidden relative\">\r\n          <img [src]=\"attachment.path\" class=\"object-cover w-full h-full\">\r\n        </div>\r\n\r\n        <div *ngIf=\"!isImageExtension(attachment.extension)\"\r\n             class=\"bg-app-bar p-1 rounded ltr:mr-3 rtl:ml-3 w-100 h-16 leading-none body-2\">{{ attachment.extension }}</div>\r\n\r\n        <div class=\"flex-auto\">\r\n          <h4 class=\"m-0 body-2 leading-snug text-secondary\">{{ attachment.name }}</h4>\r\n          <p class=\"m-0 caption leading-snug text-hint flex items-center\">\r\n            <mat-icon *ngIf=\"isCover(attachment)\" class=\"icon-xs\" svgIcon=\"mat:star\"></mat-icon>\r\n            <span>{{ attachment.size }}</span>\r\n          </p>\r\n        </div>\r\n\r\n        <button [matMenuTriggerData]=\"{ attachment: attachment }\"\r\n                [matMenuTriggerFor]=\"attachmentMenu\"\r\n                class=\"text-secondary ltr:ml-1 rtl:mr-1\"\r\n                mat-icon-button\r\n                type=\"button\">\r\n          <mat-icon svgIcon=\"mat:more_vert\"></mat-icon>\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <mat-divider class=\"-mx-6 mt-6\"></mat-divider>\r\n\r\n    <h2 class=\"body-2 m-0 pt-6 text-secondary flex items-center\">\r\n      <mat-icon class=\"ltr:mr-4 rtl:ml-4 flex-none\" svgIcon=\"mat:insert_comment\"></mat-icon>\r\n      <span class=\"flex-auto\">Comments</span>\r\n    </h2>\r\n\r\n    <div class=\"ltr:ml-10 rtl:mr-10 mt-2\">\r\n      <div *ngFor=\"let comment of form.get('comments').value\" class=\"mt-4\">\r\n        <div class=\"flex items-center\">\r\n          <img [src]=\"comment.from.imageSrc\" class=\"avatar h-8 w-8 ltr:mr-3 rtl:ml-3\">\r\n          <div>\r\n            <h4 class=\"body-2 m-0 leading-snug\">{{ comment.from.name }}</h4>\r\n            <h5 class=\"caption text-secondary m-0 leading-snug\">{{ comment.date | relativeDateTime }}</h5>\r\n          </div>\r\n        </div>\r\n\r\n        <p class=\"m-0 mt-2 caption text-secondary\">{{ comment.message }}</p>\r\n      </div>\r\n\r\n      <div class=\"mt-6 flex items-center\">\r\n        <img class=\"avatar w-8 h-8 ltr:mr-3 rtl:ml-3 flex-none\" src=\"assets/img/avatars/1.jpg\">\r\n        <mat-form-field appearance=\"outline\" class=\"flex-auto\" subscriptSizing=\"dynamic\">\r\n          <input [formControl]=\"commentCtrl\" matInput placeholder=\"Write a comment ...\">\r\n          <button (click)=\"addComment()\" color=\"primary\" mat-button matSuffix type=\"button\">Send</button>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n  </mat-dialog-content>\r\n</form>\r\n\r\n\r\n<mat-menu #attachmentMenu=\"matMenu\">\r\n  <ng-template let-attachment=\"attachment\" matMenuContent>\r\n    <button (click)=\"makeCover(attachment)\" mat-menu-item>\r\n      <mat-icon svgIcon=\"mat:image\"></mat-icon>\r\n      <span>Make Cover</span>\r\n    </button>\r\n\r\n    <button (click)=\"remove(attachment)\" mat-menu-item>\r\n      <mat-icon svgIcon=\"mat:delete\"></mat-icon>\r\n      <span>Remove</span>\r\n    </button>\r\n  </ng-template>\r\n</mat-menu>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ScrumboardDialogComponent } from './scrumboard-dialog.component';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { RelativeDateTimeModule } from '../../../../../../@vex/pipes/relative-date-time/relative-date-time.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ScrumboardDialogComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatDialogModule,\r\n    ReactiveFormsModule,\r\n\r\n    MatTooltipModule,\r\n    MatSelectModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatMenuModule,\r\n    MatDividerModule,\r\n    RelativeDateTimeModule\r\n  ],\r\n  exports: [ScrumboardDialogComponent]\r\n})\r\nexport class ScrumboardDialogModule {\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { QuicklinkModule } from 'ngx-quicklink';\r\nimport { ScrumboardComponent } from './scrumboard.component';\r\nimport { VexRoutes } from '../../../../@vex/interfaces/vex-route.interface';\r\n\r\n\r\nconst routes: VexRoutes = [\r\n  {\r\n    path: '',\r\n    redirectTo: '1',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: ':scrumboardId',\r\n    component: ScrumboardComponent,\r\n    data: {\r\n      scrollDisabled: true,\r\n      containerEnabled: true\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule, QuicklinkModule]\r\n})\r\nexport class ScrumboardRoutingModule {\r\n}\r\n","import { Component, OnInit, TemplateRef } from '@angular/core';\r\nimport { ScrumboardList } from './interfaces/scrumboard-list.interface';\r\nimport { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\r\nimport { ScrumboardCard } from './interfaces/scrumboard-card.interface';\r\nimport { trackById } from '../../../../@vex/utils/track-by';\r\nimport { scrumboards, scrumboardUsers } from '../../../../static-data/scrumboard';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ScrumboardDialogComponent } from './components/scrumboard-dialog/scrumboard-dialog.component';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Scrumboard } from './interfaces/scrumboard.interface';\r\nimport { PopoverService } from '../../../../@vex/components/popover/popover.service';\r\nimport { UntypedFormControl } from '@angular/forms';\r\nimport { stagger80ms } from '../../../../@vex/animations/stagger.animation';\r\nimport { fadeInUp400ms } from '../../../../@vex/animations/fade-in-up.animation';\r\nimport { ConfigService } from '../../../../@vex/config/config.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'vex-scrumboard',\r\n  templateUrl: './scrumboard.component.html',\r\n  styleUrls: ['./scrumboard.component.scss'],\r\n  animations: [\r\n    stagger80ms,\r\n    fadeInUp400ms\r\n  ]\r\n})\r\nexport class ScrumboardComponent implements OnInit {\r\n\r\n  static nextId = 100;\r\n\r\n  board$ = this.route.paramMap.pipe(\r\n    map(paramMap => +paramMap.get('scrumboardId')),\r\n    map(scrumboardId => scrumboards.find(board => board.id === scrumboardId))\r\n  );\r\n\r\n  addCardCtrl = new UntypedFormControl();\r\n  addListCtrl = new UntypedFormControl();\r\n\r\n  isVerticalLayout$: Observable<boolean> = this.configService.select(config => config.layout === 'vertical');\r\n\r\n  trackById = trackById;\r\n\r\n  scrumboardUsers = scrumboardUsers;\r\n\r\n  constructor(private dialog: MatDialog,\r\n              private route: ActivatedRoute,\r\n              private popover: PopoverService,\r\n              private readonly configService: ConfigService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  open(board: Scrumboard, list: ScrumboardList, card: ScrumboardCard) {\r\n    this.addCardCtrl.setValue(null);\r\n\r\n    this.dialog.open(ScrumboardDialogComponent, {\r\n      data: { card, list, board },\r\n      width: '700px',\r\n      maxWidth: '100%',\r\n      disableClose: false\r\n    }).beforeClosed().pipe(\r\n      filter<ScrumboardCard>(Boolean)\r\n    ).subscribe(value => {\r\n      const index = list.children.findIndex(child => child.id === card.id);\r\n      if (index > -1) {\r\n        list.children[index] = value;\r\n      }\r\n    });\r\n  }\r\n\r\n  drop(event: CdkDragDrop<ScrumboardCard[]>) {\r\n    if (event.previousContainer === event.container) {\r\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\r\n    } else {\r\n      transferArrayItem(event.previousContainer.data,\r\n        event.container.data,\r\n        event.previousIndex,\r\n        event.currentIndex);\r\n    }\r\n  }\r\n\r\n  dropList(event: CdkDragDrop<ScrumboardList[]>) {\r\n    if (event.previousContainer === event.container) {\r\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\r\n    } else {\r\n      transferArrayItem(event.previousContainer.data,\r\n        event.container.data,\r\n        event.previousIndex,\r\n        event.currentIndex);\r\n    }\r\n  }\r\n\r\n  getConnectedList(board: Scrumboard) {\r\n    return board.children.map(x => `${x.id}`);\r\n  }\r\n\r\n  openAddCard(list: ScrumboardList, content: TemplateRef<any>, origin: HTMLElement) {\r\n    this.popover.open({\r\n      content,\r\n      origin,\r\n      position: [\r\n        {\r\n          originX: 'center',\r\n          originY: 'bottom',\r\n          overlayX: 'center',\r\n          overlayY: 'bottom'\r\n        },\r\n        {\r\n          originX: 'center',\r\n          originY: 'bottom',\r\n          overlayX: 'center',\r\n          overlayY: 'top',\r\n        },\r\n      ]\r\n    });\r\n  }\r\n\r\n  openAddList(board: Scrumboard, content: TemplateRef<any>, origin: HTMLElement) {\r\n    this.popover.open({\r\n      content,\r\n      origin,\r\n      position: [\r\n        {\r\n          originX: 'center',\r\n          originY: 'bottom',\r\n          overlayX: 'center',\r\n          overlayY: 'top'\r\n        },\r\n        {\r\n          originX: 'center',\r\n          originY: 'bottom',\r\n          overlayX: 'center',\r\n          overlayY: 'top',\r\n        },\r\n      ]\r\n    });\r\n  }\r\n\r\n  createCard(list: ScrumboardList, close: () => void) {\r\n    if (!this.addCardCtrl.value) {\r\n      return;\r\n    }\r\n\r\n    list.children.push({\r\n      id: ScrumboardComponent.nextId++,\r\n      title: this.addCardCtrl.value\r\n    });\r\n\r\n    close();\r\n\r\n    this.addCardCtrl.setValue(null);\r\n  }\r\n\r\n  createList(board: Scrumboard, close: () => void) {\r\n    if (!this.addListCtrl.value) {\r\n      return;\r\n    }\r\n\r\n    board.children.push({\r\n      id: ScrumboardComponent.nextId++,\r\n      label: this.addListCtrl.value,\r\n      children: []\r\n    });\r\n\r\n    close();\r\n\r\n    this.addListCtrl.setValue(null);\r\n  }\r\n\r\n  toggleStar(board: Scrumboard) {\r\n    board.starred = !board.starred;\r\n  }\r\n}\r\n","<div *ngIf=\"board$ | async as board\" class=\"h-full w-full overflow-hidden flex flex-col\">\r\n\r\n  <vex-secondary-toolbar current=\"Tech Startup Board\">\r\n    <button (click)=\"toggleStar(board)\" class=\"-ml-2\" mat-icon-button type=\"button\">\r\n      <mat-icon *ngIf=\"board.starred\" class=\"text-amber\" svgIcon=\"mat:star\"></mat-icon>\r\n      <mat-icon *ngIf=\"!board.starred\" svgIcon=\"mat:star_border\"></mat-icon>\r\n    </button>\r\n\r\n    <div *ngIf=\"scrumboardUsers?.length > 0\" class=\"flex-auto flex items-center justify-end\">\r\n      <img *ngFor=\"let user of scrumboardUsers\"\r\n           [matTooltip]=\"user.name\"\r\n           [src]=\"user.imageSrc\"\r\n           class=\"avatar overlapping\"/>\r\n    </div>\r\n  </vex-secondary-toolbar>\r\n\r\n  <div (cdkDropListDropped)=\"dropList($event)\"\r\n       @stagger\r\n       [cdkDropListData]=\"board.children\"\r\n       cdkDropList\r\n       cdkDropListOrientation=\"horizontal\"\r\n       [class.container]=\"isVerticalLayout$ | async\"\r\n       class=\"p-gutter min-h-0 overflow-x-auto flex-auto flex items-start gap-6\">\r\n    <div *ngFor=\"let list of board.children; trackBy: trackById\"\r\n         @fadeInUp\r\n         [cdkDragData]=\"list\"\r\n         cdkDrag\r\n         cdkDropListGroup\r\n         class=\"rounded bg-app-bar overflow-hidden max-h-full w-full max-w-2xs flex-none flex flex-col\">\r\n      <div cdkDragHandle class=\"p-4 cursor-pointer flex-none\">\r\n        <h2 class=\"subheading-2 font-medium m-0 select-none flex-none\">{{ list.label }}</h2>\r\n      </div>\r\n\r\n      <vex-scrollbar class=\"flex-auto\">\r\n        <div (cdkDropListDropped)=\"drop($event)\"\r\n             [cdkDropListConnectedTo]=\"getConnectedList(board)\"\r\n             [cdkDropListData]=\"list.children\"\r\n             cdkDropList\r\n             class=\"px-4 pb-4\"\r\n             id=\"{{ list.id }}\">\r\n          <div (click)=\"open(board, list, card)\"\r\n               *ngFor=\"let card of list.children; trackBy: trackById\"\r\n               [cdkDragData]=\"card\"\r\n               cdkDrag\r\n               class=\"scrumboard-card card w-full cursor-pointer overflow-hidden select-none\">\r\n\r\n            <div *ngIf=\"card.cover\" class=\"w-full h-40 overflow-hidden\">\r\n              <img [src]=\"card.cover.path\" class=\"object-cover w-full h-full\"/>\r\n            </div>\r\n\r\n            <div class=\"p-4\">\r\n              <div *ngIf=\"card.labels?.length > 0\" class=\"mb-2 flex gap-2\">\r\n                <div *ngFor=\"let label of card.labels\"\r\n                     [ngClass]=\"label.bgClass\"\r\n                     class=\"label flex-1\"></div>\r\n              </div>\r\n\r\n              <h3 class=\"body-2 m-0 select-none\">{{ card.title }}</h3>\r\n\r\n              <div *ngIf=\"card.dueDate || card.comments?.length > 0 || card.attachments?.length > 0 || card.users?.length > 0\"\r\n                   class=\"mt-2 flex gap-2\">\r\n                <div *ngIf=\"card.dueDate\"\r\n                     [ngClass]=\"{ 'bg-green text-contrast-white': card.dueDate.done, 'bg-app-bar text-secondary': !card.dueDate.done }\"\r\n                     class=\"box rounded caption\">\r\n                  <mat-icon class=\"icon-xs\" svgIcon=\"mat:notifications\"></mat-icon>\r\n                  <span class=\"box-text\">{{ card.dueDate.date | dateTokens:'MMM, dd' }}</span>\r\n                </div>\r\n\r\n                <div *ngIf=\"card.comments?.length > 0\" class=\"box bg-app-bar text-secondary rounded caption\">\r\n                  <mat-icon class=\"ml-1 icon-xs\" svgIcon=\"mat:insert_comment\"></mat-icon>\r\n                  <span class=\"box-text\">{{ card.comments.length }}</span>\r\n                </div>\r\n\r\n                <div *ngIf=\"card.attachments?.length > 0\" class=\"box bg-app-bar text-secondary rounded caption\">\r\n                  <mat-icon class=\"icon-xs\" svgIcon=\"mat:attach_file\"></mat-icon>\r\n                  <span class=\"box-text\">{{ card.attachments.length }}</span>\r\n                </div>\r\n\r\n                <div *ngIf=\"card.users?.length > 0\" class=\"flex-1 flex items-center justify-end\">\r\n                  <img *ngFor=\"let user of card.users\"\r\n                       [matTooltip]=\"user.name\"\r\n                       [src]=\"user.imageSrc\"\r\n                       class=\"avatar overlapping\"/>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </vex-scrollbar>\r\n\r\n\r\n      <div #addCardOriginRef class=\"bg-hover flex-none\">\r\n        <ng-template #addCardTemplate let-close=\"close\">\r\n          <div class=\"card px-4 py-6\">\r\n            <mat-form-field subscriptSizing=\"dynamic\">\r\n              <mat-label>Card Title</mat-label>\r\n              <input [formControl]=\"addCardCtrl\" matInput placeholder=\"Enter your title...\">\r\n              <button (click)=\"createCard(list, close)\"\r\n                      class=\"-top-1\"\r\n                      color=\"primary\"\r\n                      mat-button\r\n                      matSuffix\r\n                      type=\"button\">CREATE\r\n              </button>\r\n            </mat-form-field>\r\n          </div>\r\n        </ng-template>\r\n\r\n        <button (click)=\"openAddCard(list, addCardTemplate, addCardOriginRef)\"\r\n                class=\"w-full\"\r\n                mat-button\r\n                type=\"button\">\r\n          <mat-icon class=\"mr-1 -ml-1\" svgIcon=\"mat:add\"></mat-icon>\r\n          <span>ADD CARD</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <div #addListOriginRef class=\"w-full max-w-2xs rounded bg-app-bar flex-none\">\r\n      <ng-template #addListTemplate let-close=\"close\">\r\n        <div class=\"card px-4 pt-3 pb-2\">\r\n          <mat-form-field subscriptSizing=\"dynamic\">\r\n            <mat-label>List Title</mat-label>\r\n            <input [formControl]=\"addListCtrl\" matInput placeholder=\"Enter your title...\">\r\n          </mat-form-field>\r\n\r\n          <div class=\"mt-3 flex items-center justify-between\">\r\n            <button (click)=\"close()\" class=\"text-secondary w-8 h-8 leading-none\" mat-icon-button type=\"button\">\r\n              <mat-icon class=\"icon-sm\" svgIcon=\"mat:close\"></mat-icon>\r\n            </button>\r\n            <button (click)=\"createList(board, close)\" color=\"primary\" mat-button type=\"button\">Create</button>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n\r\n      <button (click)=\"openAddList(board, addListTemplate, addListOriginRef)\"\r\n              class=\"w-full\"\r\n              mat-button\r\n              type=\"button\">\r\n        <mat-icon class=\"mr-1 -ml-1\" svgIcon=\"mat:add\"></mat-icon>\r\n        <span>ADD LIST</span>\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ScrumboardRoutingModule } from './scrumboard-routing.module';\r\nimport { ScrumboardComponent } from './scrumboard.component';\r\nimport { ScrollbarModule } from '../../../../@vex/components/scrollbar/scrollbar.module';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { DateTokensModule } from '../../../../@vex/pipes/date-tokens/date-tokens.module';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { ScrumboardDialogModule } from './components/scrumboard-dialog/scrumboard-dialog.module';\r\nimport { PopoverModule } from '../../../../@vex/components/popover/popover.module';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { SecondaryToolbarModule } from '../../../../@vex/components/secondary-toolbar/secondary-toolbar.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ScrumboardComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ScrumboardRoutingModule,\r\n    ScrollbarModule,\r\n    MatButtonModule,\r\n    DragDropModule,\r\n\r\n    DateTokensModule,\r\n    MatTooltipModule,\r\n    ScrumboardDialogModule,\r\n    PopoverModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    ReactiveFormsModule,\r\n    SecondaryToolbarModule\r\n  ]\r\n})\r\nexport class ScrumboardModule {\r\n}\r\n","import { ScrumboardUser } from '../app/pages/apps/scrumboard/interfaces/scrumboard-user.interface';\r\nimport { ScrumboardLabel } from '../app/pages/apps/scrumboard/interfaces/scrumboard-label.interface';\r\nimport { Scrumboard } from '../app/pages/apps/scrumboard/interfaces/scrumboard.interface';\r\nimport { DateTime } from 'luxon';\r\nimport { ScrumboardAttachment } from '../app/pages/apps/scrumboard/interfaces/scrumboard-attachment.interface';\r\nimport { ScrumboardComment } from '../app/pages/apps/scrumboard/interfaces/scrumboard-comment.interface';\r\n\r\nexport const scrumboardAttachments: ScrumboardAttachment[] = [\r\n  {\r\n    id: 1,\r\n    name: 'business-case.jpg',\r\n    extension: 'jpg',\r\n    path: 'assets/img/demo/1.jpg',\r\n    size: '55 KB'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'laptop.jpg',\r\n    extension: 'jpg',\r\n    path: 'assets/img/demo/2.jpg',\r\n    size: '62 KB'\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'how-to.jpg',\r\n    extension: 'jpg',\r\n    path: 'assets/img/demo/3.jpg',\r\n    size: '35 KB'\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'workplace.jpg',\r\n    extension: 'jpg',\r\n    path: 'assets/img/demo/4.jpg',\r\n    size: '51 KB'\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'issue-332.jpg',\r\n    extension: 'jpg',\r\n    path: 'assets/img/demo/5.jpg',\r\n    size: '10 KB'\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'notebook-26.jpg',\r\n    extension: 'jpg',\r\n    path: 'assets/img/demo/6.jpg',\r\n    size: '48 KB'\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'business-2.jpg',\r\n    extension: 'jpg',\r\n    path: 'assets/img/demo/7.jpg',\r\n    size: '58 KB'\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'example-67.jpg',\r\n    extension: 'jpg',\r\n    path: 'assets/img/demo/8.jpg',\r\n    size: '87 KB'\r\n  }\r\n];\r\n\r\nexport const scrumboardUsers: ScrumboardUser[] = [\r\n  {\r\n    name: 'David Smith',\r\n    imageSrc: 'assets/img/avatars/1.jpg'\r\n  },\r\n  {\r\n    name: 'Michael Bolta',\r\n    imageSrc: 'assets/img/avatars/2.jpg'\r\n  },\r\n  {\r\n    name: 'Jenny Zents',\r\n    imageSrc: 'assets/img/avatars/3.jpg'\r\n  },\r\n  {\r\n    name: 'Donald Orisan',\r\n    imageSrc: 'assets/img/avatars/4.jpg'\r\n  },\r\n  {\r\n    name: 'Frank Uhrzeen',\r\n    imageSrc: 'assets/img/avatars/5.jpg'\r\n  },\r\n  {\r\n    name: 'James Blound',\r\n    imageSrc: 'assets/img/avatars/6.jpg'\r\n  },\r\n  {\r\n    name: 'Peter Moffeen',\r\n    imageSrc: 'assets/img/avatars/7.jpg'\r\n  }\r\n];\r\n\r\nexport const scrumboardComments: ScrumboardComment[] = [\r\n  {\r\n    from: scrumboardUsers[0],\r\n    date: DateTime.local().minus({ days: 2, minutes: 43 }),\r\n    message: 'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. Separated they live in Bookmarksgrove right at the coast of the Semantics, a large language ocean.'\r\n  },\r\n  {\r\n    from: scrumboardUsers[1],\r\n    date: DateTime.local().minus({ days: 4, minutes: 43 }),\r\n    message: 'A small river named Duden flows by their place and supplies it with the necessary regelialia. It is a paradisematic country, in which roasted parts of sentences fly into your mouth.'\r\n  },\r\n  {\r\n    from: scrumboardUsers[2],\r\n    date: DateTime.local().minus({ days: 1, minutes: 43 }),\r\n    message: 'Even the all-powerful Pointing has no control about the blind texts it is an almost unorthographic life One day however a small line of blind text by the name of Lorem Ipsum decided to leave for the far World of Grammar.'\r\n  },\r\n  {\r\n    from: scrumboardUsers[3],\r\n    date: DateTime.local().minus({ days: 0, minutes: 27 }),\r\n    message: 'The Big Oxmox advised her not to do so, because there were thousands of bad Commas, wild Question Marks and devious Semikoli, but the Little Blind Text didn’t listen.'\r\n  },\r\n  {\r\n    from: scrumboardUsers[4],\r\n    date: DateTime.local().minus({ hour: 2, minutes: 4 }),\r\n    message: 'When she reached the first hills of the Italic Mountains, she had a last view back on the skyline of her hometown Bookmarksgrove, the headline of Alphabet Village and the subline of her own road, the Line Lane.'\r\n  }\r\n];\r\n\r\nexport const scrumboardLabels: ScrumboardLabel[] = [\r\n  {\r\n    label: 'High Priority',\r\n    bgClass: 'bg-amber',\r\n    textClass: 'text-amber-contrast',\r\n  },\r\n  {\r\n    label: 'Blocked',\r\n    bgClass: 'bg-red',\r\n    textClass: 'text-red-contrast',\r\n  },\r\n  {\r\n    label: 'Approved',\r\n    bgClass: 'bg-green',\r\n    textClass: 'text-green-contrast',\r\n  },\r\n  {\r\n    label: 'Ready',\r\n    bgClass: 'bg-cyan',\r\n    textClass: 'text-cyan-contrast',\r\n  },\r\n  {\r\n    label: 'Deployed',\r\n    bgClass: 'bg-purple',\r\n    textClass: 'text-purple-contrast',\r\n  }\r\n];\r\n\r\nexport const scrumboards: Scrumboard[] = [\r\n  {\r\n    id: 1,\r\n    label: 'Tech Startup Board',\r\n    children: [\r\n      {\r\n        id: 1,\r\n        label: 'Backlog',\r\n        children: [\r\n          {\r\n            id: 11,\r\n            title: 'Fix Issue #332',\r\n            description: 'Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. Separated they live in Bookmarksgrove right at the coast of the Semantics, a large language ocean.',\r\n            dueDate: {\r\n              date: DateTime.local().plus({ days: 5 }),\r\n              done: true\r\n            },\r\n            attachments: [\r\n              scrumboardAttachments[0],\r\n              scrumboardAttachments[1],\r\n              scrumboardAttachments[2],\r\n            ],\r\n            comments: [\r\n              scrumboardComments[0],\r\n              scrumboardComments[1],\r\n              scrumboardComments[2],\r\n            ],\r\n            users: [\r\n              scrumboardUsers[0],\r\n              scrumboardUsers[1],\r\n              scrumboardUsers[2],\r\n            ],\r\n            labels: [\r\n              scrumboardLabels[0],\r\n              scrumboardLabels[1],\r\n            ],\r\n            cover: scrumboardAttachments[0]\r\n          },\r\n          {\r\n            id: 12,\r\n            title: 'Create new User Profiles',\r\n            comments: [\r\n              scrumboardComments[4],\r\n              scrumboardComments[3]\r\n            ],\r\n            users: [\r\n              scrumboardUsers[1],\r\n            ]\r\n          },\r\n          {\r\n            id: 13,\r\n            title: 'Add Dashboard',\r\n            description: '',\r\n            attachments: [\r\n              scrumboardAttachments[2],\r\n              scrumboardAttachments[3]\r\n            ],\r\n            users: [\r\n              scrumboardUsers[2],\r\n              scrumboardUsers[3],\r\n            ],\r\n            labels: [\r\n              scrumboardLabels[3]\r\n            ],\r\n            comments: [\r\n              scrumboardComments[0]\r\n            ],\r\n            cover: scrumboardAttachments[2]\r\n          },\r\n          {\r\n            id: 14,\r\n            title: 'Improve User Onboarding',\r\n            labels: [\r\n              scrumboardLabels[0],\r\n              scrumboardLabels[2]\r\n            ]\r\n          },\r\n          {\r\n            id: 5,\r\n            title: 'Create new All-In-One Widget',\r\n            description: 'This widget has superpowers and can display all the great things you love and want in life.',\r\n            attachments: [\r\n              scrumboardAttachments[4],\r\n              scrumboardAttachments[1]\r\n            ],\r\n            users: [\r\n              scrumboardUsers[5],\r\n              scrumboardUsers[4],\r\n            ],\r\n            labels: [\r\n              scrumboardLabels[4],\r\n              scrumboardLabels[0],\r\n              scrumboardLabels[2]\r\n            ],\r\n            cover: scrumboardAttachments[1]\r\n          },\r\n        ]\r\n      },\r\n      {\r\n        id: 2,\r\n        label: 'Hot Backlog',\r\n        children: [\r\n          {\r\n            id: 21,\r\n            title: 'Create Support Center',\r\n            comments: [\r\n              scrumboardComments[4],\r\n              scrumboardComments[2],\r\n              scrumboardComments[1],\r\n              scrumboardComments[0]\r\n            ],\r\n            labels: [\r\n              scrumboardLabels[0],\r\n              scrumboardLabels[3]\r\n            ],\r\n            users: [\r\n              scrumboardUsers[1],\r\n              scrumboardUsers[0],\r\n              scrumboardUsers[2]\r\n            ]\r\n          },\r\n          {\r\n            id: 22,\r\n            title: 'Add Forgot Password functionality',\r\n            dueDate: {\r\n              date: DateTime.local().plus({ days: 2 }),\r\n              done: false\r\n            },\r\n            attachments: [\r\n              scrumboardAttachments[1],\r\n              scrumboardAttachments[3],\r\n            ],\r\n            users: [\r\n              scrumboardUsers[0],\r\n              scrumboardUsers[3]\r\n            ],\r\n            cover: scrumboardAttachments[3]\r\n          },\r\n          {\r\n            id: 23,\r\n            title: 'Make America Great Again',\r\n            labels: [\r\n              scrumboardLabels[1]\r\n            ]\r\n          },\r\n          {\r\n            id: 24,\r\n            title: 'Create new Design Prototypes',\r\n            dueDate: {\r\n              date: DateTime.local().plus({ days: 7 }),\r\n              done: true\r\n            },\r\n            labels: [\r\n              scrumboardLabels[0],\r\n              scrumboardLabels[3]\r\n            ],\r\n            users: [\r\n              scrumboardUsers[4],\r\n              scrumboardUsers[1]\r\n            ],\r\n            attachments: [\r\n              scrumboardAttachments[4],\r\n              scrumboardAttachments[0]\r\n            ],\r\n            cover: scrumboardAttachments[4]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: 3,\r\n        label: 'In Progress',\r\n        children: [\r\n          {\r\n            id: 31,\r\n            title: 'Add new Material Design 2 Icons',\r\n            attachments: [\r\n              scrumboardAttachments[1],\r\n              scrumboardAttachments[0],\r\n              scrumboardAttachments[6],\r\n              scrumboardAttachments[2]\r\n            ],\r\n            comments: [\r\n              scrumboardComments[0],\r\n            ],\r\n            cover: scrumboardAttachments[6]\r\n          },\r\n          {\r\n            id: 32,\r\n            title: 'Improve Dashboard Grid',\r\n            comments: [\r\n              scrumboardComments[4],\r\n            ],\r\n            users: [\r\n              scrumboardUsers[2],\r\n              scrumboardUsers[1],\r\n              scrumboardUsers[0]\r\n            ]\r\n          },\r\n          {\r\n            id: 33,\r\n            title: 'Use Google Fonts',\r\n            dueDate: {\r\n              date: DateTime.local().plus({ days: 2 }),\r\n              done: false\r\n            },\r\n            labels: [\r\n              scrumboardLabels[3]\r\n            ],\r\n            attachments: [\r\n              scrumboardAttachments[1],\r\n              scrumboardAttachments[5],\r\n              scrumboardAttachments[2]\r\n            ],\r\n            comments: [\r\n              scrumboardComments[0],\r\n              scrumboardComments[4],\r\n              scrumboardComments[2],\r\n            ],\r\n            users: [\r\n              scrumboardUsers[0],\r\n              scrumboardUsers[3],\r\n              scrumboardUsers[2]\r\n            ],\r\n            cover: scrumboardAttachments[5]\r\n          }\r\n        ]\r\n      },\r\n      {\r\n        id: 4,\r\n        label: 'Ready to Deploy',\r\n        children: [\r\n          {\r\n            id: 41,\r\n            title: 'Add Meta Description',\r\n            dueDate: {\r\n              date: DateTime.local().plus({ days: 2 }),\r\n              done: false\r\n            },\r\n            labels: [\r\n              scrumboardLabels[0],\r\n              scrumboardLabels[2]\r\n            ],\r\n            attachments: [\r\n              scrumboardAttachments[5],\r\n              scrumboardAttachments[6]\r\n            ],\r\n            users: [\r\n              scrumboardUsers[2],\r\n            ]\r\n          },\r\n          {\r\n            id: 42,\r\n            title: 'Redesign Homepage',\r\n            labels: [\r\n              scrumboardLabels[3]\r\n            ],\r\n            attachments: [\r\n              scrumboardAttachments[5]\r\n            ],\r\n            comments: [\r\n              scrumboardComments[4]\r\n            ],\r\n            users: [\r\n              scrumboardUsers[0],\r\n              scrumboardUsers[4]\r\n            ]\r\n          },\r\n          {\r\n            id: 43,\r\n            title: 'Work on SEO',\r\n            dueDate: {\r\n              date: DateTime.local().plus({ days: 1 }),\r\n              done: true\r\n            },\r\n            attachments: [\r\n              scrumboardAttachments[7]\r\n            ],\r\n            cover: scrumboardAttachments[7],\r\n            users: [\r\n              scrumboardUsers[4]\r\n            ],\r\n            comments: [\r\n              scrumboardComments[2]\r\n            ]\r\n          },\r\n          {\r\n            id: 44,\r\n            title: 'Create new Side-Navigation',\r\n            attachments: [\r\n              scrumboardAttachments[0],\r\n            ],\r\n            cover: scrumboardAttachments[0],\r\n            users: [\r\n              scrumboardUsers[3],\r\n              scrumboardUsers[2]\r\n            ]\r\n          },\r\n          {\r\n            id: 45,\r\n            title: 'Participate in Design Contest',\r\n            users: [\r\n              scrumboardUsers[1],\r\n              scrumboardUsers[0]\r\n            ],\r\n            comments: [\r\n              scrumboardComments[0]\r\n            ],\r\n            labels: [\r\n              scrumboardLabels[0]\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n];\r\n","import * as i0 from '@angular/core';\nimport { Injectable, Inject, InjectionToken, Directive, Input, EventEmitter, Optional, SkipSelf, Output, Self, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { _getEventTarget, normalizePassiveListenerOptions, _getShadowRoot } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceElement, coerceArray, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { isFakeTouchstartFromScreenReader, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { Subject, Subscription, interval, animationFrameScheduler, Observable, merge } from 'rxjs';\nimport { takeUntil, startWith, map, take, tap, switchMap } from 'rxjs/operators';\nimport * as i3 from '@angular/cdk/bidi';\n\n/**\n * Shallow-extends a stylesheet object with another stylesheet-like object.\n * Note that the keys in `source` have to be dash-cased.\n * @docs-private\n */\nfunction extendStyles(dest, source, importantProperties) {\n    for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n            const value = source[key];\n            if (value) {\n                dest.setProperty(key, value, importantProperties?.has(key) ? 'important' : '');\n            }\n            else {\n                dest.removeProperty(key);\n            }\n        }\n    }\n    return dest;\n}\n/**\n * Toggles whether the native drag interactions should be enabled for an element.\n * @param element Element on which to toggle the drag interactions.\n * @param enable Whether the drag interactions should be enabled.\n * @docs-private\n */\nfunction toggleNativeDragInteractions(element, enable) {\n    const userSelect = enable ? '' : 'none';\n    extendStyles(element.style, {\n        'touch-action': enable ? '' : 'none',\n        '-webkit-user-drag': enable ? '' : 'none',\n        '-webkit-tap-highlight-color': enable ? '' : 'transparent',\n        'user-select': userSelect,\n        '-ms-user-select': userSelect,\n        '-webkit-user-select': userSelect,\n        '-moz-user-select': userSelect,\n    });\n}\n/**\n * Toggles whether an element is visible while preserving its dimensions.\n * @param element Element whose visibility to toggle\n * @param enable Whether the element should be visible.\n * @param importantProperties Properties to be set as `!important`.\n * @docs-private\n */\nfunction toggleVisibility(element, enable, importantProperties) {\n    extendStyles(element.style, {\n        position: enable ? '' : 'fixed',\n        top: enable ? '' : '0',\n        opacity: enable ? '' : '0',\n        left: enable ? '' : '-999em',\n    }, importantProperties);\n}\n/**\n * Combines a transform string with an optional other transform\n * that exited before the base transform was applied.\n */\nfunction combineTransforms(transform, initialTransform) {\n    return initialTransform && initialTransform != 'none'\n        ? transform + ' ' + initialTransform\n        : transform;\n}\n\n/** Parses a CSS time value to milliseconds. */\nfunction parseCssTimeUnitsToMs(value) {\n    // Some browsers will return it in seconds, whereas others will return milliseconds.\n    const multiplier = value.toLowerCase().indexOf('ms') > -1 ? 1 : 1000;\n    return parseFloat(value) * multiplier;\n}\n/** Gets the transform transition duration, including the delay, of an element in milliseconds. */\nfunction getTransformTransitionDurationInMs(element) {\n    const computedStyle = getComputedStyle(element);\n    const transitionedProperties = parseCssPropertyValue(computedStyle, 'transition-property');\n    const property = transitionedProperties.find(prop => prop === 'transform' || prop === 'all');\n    // If there's no transition for `all` or `transform`, we shouldn't do anything.\n    if (!property) {\n        return 0;\n    }\n    // Get the index of the property that we're interested in and match\n    // it up to the same index in `transition-delay` and `transition-duration`.\n    const propertyIndex = transitionedProperties.indexOf(property);\n    const rawDurations = parseCssPropertyValue(computedStyle, 'transition-duration');\n    const rawDelays = parseCssPropertyValue(computedStyle, 'transition-delay');\n    return (parseCssTimeUnitsToMs(rawDurations[propertyIndex]) +\n        parseCssTimeUnitsToMs(rawDelays[propertyIndex]));\n}\n/** Parses out multiple values from a computed style into an array. */\nfunction parseCssPropertyValue(computedStyle, name) {\n    const value = computedStyle.getPropertyValue(name);\n    return value.split(',').map(part => part.trim());\n}\n\n/** Gets a mutable version of an element's bounding `ClientRect`. */\nfunction getMutableClientRect(element) {\n    const clientRect = element.getBoundingClientRect();\n    // We need to clone the `clientRect` here, because all the values on it are readonly\n    // and we need to be able to update them. Also we can't use a spread here, because\n    // the values on a `ClientRect` aren't own properties. See:\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect#Notes\n    return {\n        top: clientRect.top,\n        right: clientRect.right,\n        bottom: clientRect.bottom,\n        left: clientRect.left,\n        width: clientRect.width,\n        height: clientRect.height,\n        x: clientRect.x,\n        y: clientRect.y,\n    };\n}\n/**\n * Checks whether some coordinates are within a `ClientRect`.\n * @param clientRect ClientRect that is being checked.\n * @param x Coordinates along the X axis.\n * @param y Coordinates along the Y axis.\n */\nfunction isInsideClientRect(clientRect, x, y) {\n    const { top, bottom, left, right } = clientRect;\n    return y >= top && y <= bottom && x >= left && x <= right;\n}\n/**\n * Updates the top/left positions of a `ClientRect`, as well as their bottom/right counterparts.\n * @param clientRect `ClientRect` that should be updated.\n * @param top Amount to add to the `top` position.\n * @param left Amount to add to the `left` position.\n */\nfunction adjustClientRect(clientRect, top, left) {\n    clientRect.top += top;\n    clientRect.bottom = clientRect.top + clientRect.height;\n    clientRect.left += left;\n    clientRect.right = clientRect.left + clientRect.width;\n}\n/**\n * Checks whether the pointer coordinates are close to a ClientRect.\n * @param rect ClientRect to check against.\n * @param threshold Threshold around the ClientRect.\n * @param pointerX Coordinates along the X axis.\n * @param pointerY Coordinates along the Y axis.\n */\nfunction isPointerNearClientRect(rect, threshold, pointerX, pointerY) {\n    const { top, right, bottom, left, width, height } = rect;\n    const xThreshold = width * threshold;\n    const yThreshold = height * threshold;\n    return (pointerY > top - yThreshold &&\n        pointerY < bottom + yThreshold &&\n        pointerX > left - xThreshold &&\n        pointerX < right + xThreshold);\n}\n\n/** Keeps track of the scroll position and dimensions of the parents of an element. */\nclass ParentPositionTracker {\n    constructor(_document) {\n        this._document = _document;\n        /** Cached positions of the scrollable parent elements. */\n        this.positions = new Map();\n    }\n    /** Clears the cached positions. */\n    clear() {\n        this.positions.clear();\n    }\n    /** Caches the positions. Should be called at the beginning of a drag sequence. */\n    cache(elements) {\n        this.clear();\n        this.positions.set(this._document, {\n            scrollPosition: this.getViewportScrollPosition(),\n        });\n        elements.forEach(element => {\n            this.positions.set(element, {\n                scrollPosition: { top: element.scrollTop, left: element.scrollLeft },\n                clientRect: getMutableClientRect(element),\n            });\n        });\n    }\n    /** Handles scrolling while a drag is taking place. */\n    handleScroll(event) {\n        const target = _getEventTarget(event);\n        const cachedPosition = this.positions.get(target);\n        if (!cachedPosition) {\n            return null;\n        }\n        const scrollPosition = cachedPosition.scrollPosition;\n        let newTop;\n        let newLeft;\n        if (target === this._document) {\n            const viewportScrollPosition = this.getViewportScrollPosition();\n            newTop = viewportScrollPosition.top;\n            newLeft = viewportScrollPosition.left;\n        }\n        else {\n            newTop = target.scrollTop;\n            newLeft = target.scrollLeft;\n        }\n        const topDifference = scrollPosition.top - newTop;\n        const leftDifference = scrollPosition.left - newLeft;\n        // Go through and update the cached positions of the scroll\n        // parents that are inside the element that was scrolled.\n        this.positions.forEach((position, node) => {\n            if (position.clientRect && target !== node && target.contains(node)) {\n                adjustClientRect(position.clientRect, topDifference, leftDifference);\n            }\n        });\n        scrollPosition.top = newTop;\n        scrollPosition.left = newLeft;\n        return { top: topDifference, left: leftDifference };\n    }\n    /**\n     * Gets the scroll position of the viewport. Note that we use the scrollX and scrollY directly,\n     * instead of going through the `ViewportRuler`, because the first value the ruler looks at is\n     * the top/left offset of the `document.documentElement` which works for most cases, but breaks\n     * if the element is offset by something like the `BlockScrollStrategy`.\n     */\n    getViewportScrollPosition() {\n        return { top: window.scrollY, left: window.scrollX };\n    }\n}\n\n/** Creates a deep clone of an element. */\nfunction deepCloneNode(node) {\n    const clone = node.cloneNode(true);\n    const descendantsWithId = clone.querySelectorAll('[id]');\n    const nodeName = node.nodeName.toLowerCase();\n    // Remove the `id` to avoid having multiple elements with the same id on the page.\n    clone.removeAttribute('id');\n    for (let i = 0; i < descendantsWithId.length; i++) {\n        descendantsWithId[i].removeAttribute('id');\n    }\n    if (nodeName === 'canvas') {\n        transferCanvasData(node, clone);\n    }\n    else if (nodeName === 'input' || nodeName === 'select' || nodeName === 'textarea') {\n        transferInputData(node, clone);\n    }\n    transferData('canvas', node, clone, transferCanvasData);\n    transferData('input, textarea, select', node, clone, transferInputData);\n    return clone;\n}\n/** Matches elements between an element and its clone and allows for their data to be cloned. */\nfunction transferData(selector, node, clone, callback) {\n    const descendantElements = node.querySelectorAll(selector);\n    if (descendantElements.length) {\n        const cloneElements = clone.querySelectorAll(selector);\n        for (let i = 0; i < descendantElements.length; i++) {\n            callback(descendantElements[i], cloneElements[i]);\n        }\n    }\n}\n// Counter for unique cloned radio button names.\nlet cloneUniqueId = 0;\n/** Transfers the data of one input element to another. */\nfunction transferInputData(source, clone) {\n    // Browsers throw an error when assigning the value of a file input programmatically.\n    if (clone.type !== 'file') {\n        clone.value = source.value;\n    }\n    // Radio button `name` attributes must be unique for radio button groups\n    // otherwise original radio buttons can lose their checked state\n    // once the clone is inserted in the DOM.\n    if (clone.type === 'radio' && clone.name) {\n        clone.name = `mat-clone-${clone.name}-${cloneUniqueId++}`;\n    }\n}\n/** Transfers the data of one canvas element to another. */\nfunction transferCanvasData(source, clone) {\n    const context = clone.getContext('2d');\n    if (context) {\n        // In some cases `drawImage` can throw (e.g. if the canvas size is 0x0).\n        // We can't do much about it so just ignore the error.\n        try {\n            context.drawImage(source, 0, 0);\n        }\n        catch { }\n    }\n}\n\n/** Options that can be used to bind a passive event listener. */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/** Options that can be used to bind an active event listener. */\nconst activeEventListenerOptions = normalizePassiveListenerOptions({ passive: false });\n/**\n * Time in milliseconds for which to ignore mouse events, after\n * receiving a touch event. Used to avoid doing double work for\n * touch devices where the browser fires fake mouse events, in\n * addition to touch events.\n */\nconst MOUSE_EVENT_IGNORE_TIME = 800;\n/** Inline styles to be set as `!important` while dragging. */\nconst dragImportantProperties = new Set([\n    // Needs to be important, because some `mat-table` sets `position: sticky !important`. See #22781.\n    'position',\n]);\n/**\n * Reference to a draggable item. Used to manipulate or dispose of the item.\n */\nclass DragRef {\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || !!(this._dropContainer && this._dropContainer.disabled);\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._toggleNativeDragInteractions();\n            this._handles.forEach(handle => toggleNativeDragInteractions(handle, newValue));\n        }\n    }\n    constructor(element, _config, _document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._config = _config;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n        /**\n         * CSS `transform` applied to the element when it isn't being dragged. We need a\n         * passive transform in order for the dragged element to retain its new position\n         * after the user has stopped dragging and because we need to know the relative\n         * position in case they start dragging again. This corresponds to `element.style.transform`.\n         */\n        this._passiveTransform = { x: 0, y: 0 };\n        /** CSS `transform` that is applied to the element while it's being dragged. */\n        this._activeTransform = { x: 0, y: 0 };\n        /**\n         * Whether the dragging sequence has been started. Doesn't\n         * necessarily mean that the element has been moved.\n         */\n        this._hasStartedDragging = false;\n        /** Emits when the item is being moved. */\n        this._moveEvents = new Subject();\n        /** Subscription to pointer movement events. */\n        this._pointerMoveSubscription = Subscription.EMPTY;\n        /** Subscription to the event that is dispatched when the user lifts their pointer. */\n        this._pointerUpSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being scrolled. */\n        this._scrollSubscription = Subscription.EMPTY;\n        /** Subscription to the viewport being resized. */\n        this._resizeSubscription = Subscription.EMPTY;\n        /** Cached reference to the boundary element. */\n        this._boundaryElement = null;\n        /** Whether the native dragging interactions have been enabled on the root element. */\n        this._nativeInteractionsEnabled = true;\n        /** Elements that can be used to drag the draggable item. */\n        this._handles = [];\n        /** Registered handles that are currently disabled. */\n        this._disabledHandles = new Set();\n        /** Layout direction of the item. */\n        this._direction = 'ltr';\n        /**\n         * Amount of milliseconds to wait after the user has put their\n         * pointer down before starting to drag the element.\n         */\n        this.dragStartDelay = 0;\n        this._disabled = false;\n        /** Emits as the drag sequence is being prepared. */\n        this.beforeStarted = new Subject();\n        /** Emits when the user starts dragging the item. */\n        this.started = new Subject();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new Subject();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new Subject();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new Subject();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new Subject();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new Subject();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = this._moveEvents;\n        /** Handler for the `mousedown`/`touchstart` events. */\n        this._pointerDown = (event) => {\n            this.beforeStarted.next();\n            // Delegate the event based on whether it started from a handle or the element itself.\n            if (this._handles.length) {\n                const targetHandle = this._getTargetHandle(event);\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    this._initializeDragSequence(targetHandle, event);\n                }\n            }\n            else if (!this.disabled) {\n                this._initializeDragSequence(this._rootElement, event);\n            }\n        };\n        /** Handler that is invoked when the user moves their pointer after they've initiated a drag. */\n        this._pointerMove = (event) => {\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            if (!this._hasStartedDragging) {\n                const distanceX = Math.abs(pointerPosition.x - this._pickupPositionOnPage.x);\n                const distanceY = Math.abs(pointerPosition.y - this._pickupPositionOnPage.y);\n                const isOverThreshold = distanceX + distanceY >= this._config.dragStartThreshold;\n                // Only start dragging after the user has moved more than the minimum distance in either\n                // direction. Note that this is preferable over doing something like `skip(minimumDistance)`\n                // in the `pointerMove` subscription, because we're not guaranteed to have one move event\n                // per pixel of movement (e.g. if the user moves their pointer quickly).\n                if (isOverThreshold) {\n                    const isDelayElapsed = Date.now() >= this._dragStartTime + this._getDragStartDelay(event);\n                    const container = this._dropContainer;\n                    if (!isDelayElapsed) {\n                        this._endDragSequence(event);\n                        return;\n                    }\n                    // Prevent other drag sequences from starting while something in the container is still\n                    // being dragged. This can happen while we're waiting for the drop animation to finish\n                    // and can cause errors, because some elements might still be moving around.\n                    if (!container || (!container.isDragging() && !container.isReceiving())) {\n                        // Prevent the default action as soon as the dragging sequence is considered as\n                        // \"started\" since waiting for the next event can allow the device to begin scrolling.\n                        event.preventDefault();\n                        this._hasStartedDragging = true;\n                        this._ngZone.run(() => this._startDragSequence(event));\n                    }\n                }\n                return;\n            }\n            // We prevent the default action down here so that we know that dragging has started. This is\n            // important for touch devices where doing this too early can unnecessarily block scrolling,\n            // if there's a dragging delay.\n            event.preventDefault();\n            const constrainedPointerPosition = this._getConstrainedPointerPosition(pointerPosition);\n            this._hasMoved = true;\n            this._lastKnownPointerPosition = pointerPosition;\n            this._updatePointerDirectionDelta(constrainedPointerPosition);\n            if (this._dropContainer) {\n                this._updateActiveDropContainer(constrainedPointerPosition, pointerPosition);\n            }\n            else {\n                // If there's a position constraint function, we want the element's top/left to be at the\n                // specific position on the page. Use the initial position as a reference if that's the case.\n                const offset = this.constrainPosition ? this._initialClientRect : this._pickupPositionOnPage;\n                const activeTransform = this._activeTransform;\n                activeTransform.x = constrainedPointerPosition.x - offset.x + this._passiveTransform.x;\n                activeTransform.y = constrainedPointerPosition.y - offset.y + this._passiveTransform.y;\n                this._applyRootElementTransform(activeTransform.x, activeTransform.y);\n            }\n            // Since this event gets fired for every pixel while dragging, we only\n            // want to fire it if the consumer opted into it. Also we have to\n            // re-enter the zone because we run all of the events on the outside.\n            if (this._moveEvents.observers.length) {\n                this._ngZone.run(() => {\n                    this._moveEvents.next({\n                        source: this,\n                        pointerPosition: constrainedPointerPosition,\n                        event,\n                        distance: this._getDragDistance(constrainedPointerPosition),\n                        delta: this._pointerDirectionDelta,\n                    });\n                });\n            }\n        };\n        /** Handler that is invoked when the user lifts their pointer up, after initiating a drag. */\n        this._pointerUp = (event) => {\n            this._endDragSequence(event);\n        };\n        /** Handles a native `dragstart` event. */\n        this._nativeDragStart = (event) => {\n            if (this._handles.length) {\n                const targetHandle = this._getTargetHandle(event);\n                if (targetHandle && !this._disabledHandles.has(targetHandle) && !this.disabled) {\n                    event.preventDefault();\n                }\n            }\n            else if (!this.disabled) {\n                // Usually this isn't necessary since the we prevent the default action in `pointerDown`,\n                // but some cases like dragging of links can slip through (see #24403).\n                event.preventDefault();\n            }\n        };\n        this.withRootElement(element).withParent(_config.parentDragRef || null);\n        this._parentPositions = new ParentPositionTracker(_document);\n        _dragDropRegistry.registerDragItem(this);\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._placeholder;\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._rootElement;\n    }\n    /**\n     * Gets the currently-visible element that represents the drag item.\n     * While dragging this is the placeholder, otherwise it's the root element.\n     */\n    getVisibleElement() {\n        return this.isDragging() ? this.getPlaceholderElement() : this.getRootElement();\n    }\n    /** Registers the handles that can be used to drag the element. */\n    withHandles(handles) {\n        this._handles = handles.map(handle => coerceElement(handle));\n        this._handles.forEach(handle => toggleNativeDragInteractions(handle, this.disabled));\n        this._toggleNativeDragInteractions();\n        // Delete any lingering disabled handles that may have been destroyed. Note that we re-create\n        // the set, rather than iterate over it and filter out the destroyed handles, because while\n        // the ES spec allows for sets to be modified while they're being iterated over, some polyfills\n        // use an array internally which may throw an error.\n        const disabledHandles = new Set();\n        this._disabledHandles.forEach(handle => {\n            if (this._handles.indexOf(handle) > -1) {\n                disabledHandles.add(handle);\n            }\n        });\n        this._disabledHandles = disabledHandles;\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag preview.\n     * @param template Template that from which to stamp out the preview.\n     */\n    withPreviewTemplate(template) {\n        this._previewTemplate = template;\n        return this;\n    }\n    /**\n     * Registers the template that should be used for the drag placeholder.\n     * @param template Template that from which to stamp out the placeholder.\n     */\n    withPlaceholderTemplate(template) {\n        this._placeholderTemplate = template;\n        return this;\n    }\n    /**\n     * Sets an alternate drag root element. The root element is the element that will be moved as\n     * the user is dragging. Passing an alternate root element is useful when trying to enable\n     * dragging on an element that you might not have access to.\n     */\n    withRootElement(rootElement) {\n        const element = coerceElement(rootElement);\n        if (element !== this._rootElement) {\n            if (this._rootElement) {\n                this._removeRootElementListeners(this._rootElement);\n            }\n            this._ngZone.runOutsideAngular(() => {\n                element.addEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n                element.addEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n                element.addEventListener('dragstart', this._nativeDragStart, activeEventListenerOptions);\n            });\n            this._initialTransform = undefined;\n            this._rootElement = element;\n        }\n        if (typeof SVGElement !== 'undefined' && this._rootElement instanceof SVGElement) {\n            this._ownerSVGElement = this._rootElement.ownerSVGElement;\n        }\n        return this;\n    }\n    /**\n     * Element to which the draggable's position will be constrained.\n     */\n    withBoundaryElement(boundaryElement) {\n        this._boundaryElement = boundaryElement ? coerceElement(boundaryElement) : null;\n        this._resizeSubscription.unsubscribe();\n        if (boundaryElement) {\n            this._resizeSubscription = this._viewportRuler\n                .change(10)\n                .subscribe(() => this._containInsideBoundaryOnResize());\n        }\n        return this;\n    }\n    /** Sets the parent ref that the ref is nested in.  */\n    withParent(parent) {\n        this._parentDragRef = parent;\n        return this;\n    }\n    /** Removes the dragging functionality from the DOM element. */\n    dispose() {\n        this._removeRootElementListeners(this._rootElement);\n        // Do this check before removing from the registry since it'll\n        // stop being considered as dragged once it is removed.\n        if (this.isDragging()) {\n            // Since we move out the element to the end of the body while it's being\n            // dragged, we have to make sure that it's removed if it gets destroyed.\n            this._rootElement?.remove();\n        }\n        this._anchor?.remove();\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._dragDropRegistry.removeDragItem(this);\n        this._removeSubscriptions();\n        this.beforeStarted.complete();\n        this.started.complete();\n        this.released.complete();\n        this.ended.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this._moveEvents.complete();\n        this._handles = [];\n        this._disabledHandles.clear();\n        this._dropContainer = undefined;\n        this._resizeSubscription.unsubscribe();\n        this._parentPositions.clear();\n        this._boundaryElement =\n            this._rootElement =\n                this._ownerSVGElement =\n                    this._placeholderTemplate =\n                        this._previewTemplate =\n                            this._anchor =\n                                this._parentDragRef =\n                                    null;\n    }\n    /** Checks whether the element is currently being dragged. */\n    isDragging() {\n        return this._hasStartedDragging && this._dragDropRegistry.isDragging(this);\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._rootElement.style.transform = this._initialTransform || '';\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform = { x: 0, y: 0 };\n    }\n    /**\n     * Sets a handle as disabled. While a handle is disabled, it'll capture and interrupt dragging.\n     * @param handle Handle element that should be disabled.\n     */\n    disableHandle(handle) {\n        if (!this._disabledHandles.has(handle) && this._handles.indexOf(handle) > -1) {\n            this._disabledHandles.add(handle);\n            toggleNativeDragInteractions(handle, true);\n        }\n    }\n    /**\n     * Enables a handle, if it has been disabled.\n     * @param handle Handle element to be enabled.\n     */\n    enableHandle(handle) {\n        if (this._disabledHandles.has(handle)) {\n            this._disabledHandles.delete(handle);\n            toggleNativeDragInteractions(handle, this.disabled);\n        }\n    }\n    /** Sets the layout direction of the draggable item. */\n    withDirection(direction) {\n        this._direction = direction;\n        return this;\n    }\n    /** Sets the container that the item is part of. */\n    _withDropContainer(container) {\n        this._dropContainer = container;\n    }\n    /**\n     * Gets the current position in pixels the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        const position = this.isDragging() ? this._activeTransform : this._passiveTransform;\n        return { x: position.x, y: position.y };\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @param value New position to be set.\n     */\n    setFreeDragPosition(value) {\n        this._activeTransform = { x: 0, y: 0 };\n        this._passiveTransform.x = value.x;\n        this._passiveTransform.y = value.y;\n        if (!this._dropContainer) {\n            this._applyRootElementTransform(value.x, value.y);\n        }\n        return this;\n    }\n    /**\n     * Sets the container into which to insert the preview element.\n     * @param value Container into which to insert the preview.\n     */\n    withPreviewContainer(value) {\n        this._previewContainer = value;\n        return this;\n    }\n    /** Updates the item's sort order based on the last-known pointer position. */\n    _sortFromLastPointerPosition() {\n        const position = this._lastKnownPointerPosition;\n        if (position && this._dropContainer) {\n            this._updateActiveDropContainer(this._getConstrainedPointerPosition(position), position);\n        }\n    }\n    /** Unsubscribes from the global subscriptions. */\n    _removeSubscriptions() {\n        this._pointerMoveSubscription.unsubscribe();\n        this._pointerUpSubscription.unsubscribe();\n        this._scrollSubscription.unsubscribe();\n    }\n    /** Destroys the preview element and its ViewRef. */\n    _destroyPreview() {\n        this._preview?.remove();\n        this._previewRef?.destroy();\n        this._preview = this._previewRef = null;\n    }\n    /** Destroys the placeholder element and its ViewRef. */\n    _destroyPlaceholder() {\n        this._placeholder?.remove();\n        this._placeholderRef?.destroy();\n        this._placeholder = this._placeholderRef = null;\n    }\n    /**\n     * Clears subscriptions and stops the dragging sequence.\n     * @param event Browser event object that ended the sequence.\n     */\n    _endDragSequence(event) {\n        // Note that here we use `isDragging` from the service, rather than from `this`.\n        // The difference is that the one from the service reflects whether a dragging sequence\n        // has been initiated, whereas the one on `this` includes whether the user has passed\n        // the minimum dragging threshold.\n        if (!this._dragDropRegistry.isDragging(this)) {\n            return;\n        }\n        this._removeSubscriptions();\n        this._dragDropRegistry.stopDragging(this);\n        this._toggleNativeDragInteractions();\n        if (this._handles) {\n            this._rootElement.style.webkitTapHighlightColor =\n                this._rootElementTapHighlight;\n        }\n        if (!this._hasStartedDragging) {\n            return;\n        }\n        this.released.next({ source: this, event });\n        if (this._dropContainer) {\n            // Stop scrolling immediately, instead of waiting for the animation to finish.\n            this._dropContainer._stopScrolling();\n            this._animatePreviewToPlaceholder().then(() => {\n                this._cleanupDragArtifacts(event);\n                this._cleanupCachedDimensions();\n                this._dragDropRegistry.stopDragging(this);\n            });\n        }\n        else {\n            // Convert the active transform into a passive one. This means that next time\n            // the user starts dragging the item, its position will be calculated relatively\n            // to the new passive transform.\n            this._passiveTransform.x = this._activeTransform.x;\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            this._passiveTransform.y = this._activeTransform.y;\n            this._ngZone.run(() => {\n                this.ended.next({\n                    source: this,\n                    distance: this._getDragDistance(pointerPosition),\n                    dropPoint: pointerPosition,\n                    event,\n                });\n            });\n            this._cleanupCachedDimensions();\n            this._dragDropRegistry.stopDragging(this);\n        }\n    }\n    /** Starts the dragging sequence. */\n    _startDragSequence(event) {\n        if (isTouchEvent(event)) {\n            this._lastTouchEventTime = Date.now();\n        }\n        this._toggleNativeDragInteractions();\n        const dropContainer = this._dropContainer;\n        if (dropContainer) {\n            const element = this._rootElement;\n            const parent = element.parentNode;\n            const placeholder = (this._placeholder = this._createPlaceholderElement());\n            const anchor = (this._anchor = this._anchor || this._document.createComment(''));\n            // Needs to happen before the root element is moved.\n            const shadowRoot = this._getShadowRoot();\n            // Insert an anchor node so that we can restore the element's position in the DOM.\n            parent.insertBefore(anchor, element);\n            // There's no risk of transforms stacking when inside a drop container so\n            // we can keep the initial transform up to date any time dragging starts.\n            this._initialTransform = element.style.transform || '';\n            // Create the preview after the initial transform has\n            // been cached, because it can be affected by the transform.\n            this._preview = this._createPreviewElement();\n            // We move the element out at the end of the body and we make it hidden, because keeping it in\n            // place will throw off the consumer's `:last-child` selectors. We can't remove the element\n            // from the DOM completely, because iOS will stop firing all subsequent events in the chain.\n            toggleVisibility(element, false, dragImportantProperties);\n            this._document.body.appendChild(parent.replaceChild(placeholder, element));\n            this._getPreviewInsertionPoint(parent, shadowRoot).appendChild(this._preview);\n            this.started.next({ source: this, event }); // Emit before notifying the container.\n            dropContainer.start();\n            this._initialContainer = dropContainer;\n            this._initialIndex = dropContainer.getItemIndex(this);\n        }\n        else {\n            this.started.next({ source: this, event });\n            this._initialContainer = this._initialIndex = undefined;\n        }\n        // Important to run after we've called `start` on the parent container\n        // so that it has had time to resolve its scrollable parents.\n        this._parentPositions.cache(dropContainer ? dropContainer.getScrollableParents() : []);\n    }\n    /**\n     * Sets up the different variables and subscriptions\n     * that will be necessary for the dragging sequence.\n     * @param referenceElement Element that started the drag sequence.\n     * @param event Browser event object that started the sequence.\n     */\n    _initializeDragSequence(referenceElement, event) {\n        // Stop propagation if the item is inside another\n        // draggable so we don't start multiple drag sequences.\n        if (this._parentDragRef) {\n            event.stopPropagation();\n        }\n        const isDragging = this.isDragging();\n        const isTouchSequence = isTouchEvent(event);\n        const isAuxiliaryMouseButton = !isTouchSequence && event.button !== 0;\n        const rootElement = this._rootElement;\n        const target = _getEventTarget(event);\n        const isSyntheticEvent = !isTouchSequence &&\n            this._lastTouchEventTime &&\n            this._lastTouchEventTime + MOUSE_EVENT_IGNORE_TIME > Date.now();\n        const isFakeEvent = isTouchSequence\n            ? isFakeTouchstartFromScreenReader(event)\n            : isFakeMousedownFromScreenReader(event);\n        // If the event started from an element with the native HTML drag&drop, it'll interfere\n        // with our own dragging (e.g. `img` tags do it by default). Prevent the default action\n        // to stop it from happening. Note that preventing on `dragstart` also seems to work, but\n        // it's flaky and it fails if the user drags it away quickly. Also note that we only want\n        // to do this for `mousedown` since doing the same for `touchstart` will stop any `click`\n        // events from firing on touch devices.\n        if (target && target.draggable && event.type === 'mousedown') {\n            event.preventDefault();\n        }\n        // Abort if the user is already dragging or is using a mouse button other than the primary one.\n        if (isDragging || isAuxiliaryMouseButton || isSyntheticEvent || isFakeEvent) {\n            return;\n        }\n        // If we've got handles, we need to disable the tap highlight on the entire root element,\n        // otherwise iOS will still add it, even though all the drag interactions on the handle\n        // are disabled.\n        if (this._handles.length) {\n            const rootStyles = rootElement.style;\n            this._rootElementTapHighlight = rootStyles.webkitTapHighlightColor || '';\n            rootStyles.webkitTapHighlightColor = 'transparent';\n        }\n        this._hasStartedDragging = this._hasMoved = false;\n        // Avoid multiple subscriptions and memory leaks when multi touch\n        // (isDragging check above isn't enough because of possible temporal and/or dimensional delays)\n        this._removeSubscriptions();\n        this._initialClientRect = this._rootElement.getBoundingClientRect();\n        this._pointerMoveSubscription = this._dragDropRegistry.pointerMove.subscribe(this._pointerMove);\n        this._pointerUpSubscription = this._dragDropRegistry.pointerUp.subscribe(this._pointerUp);\n        this._scrollSubscription = this._dragDropRegistry\n            .scrolled(this._getShadowRoot())\n            .subscribe(scrollEvent => this._updateOnScroll(scrollEvent));\n        if (this._boundaryElement) {\n            this._boundaryRect = getMutableClientRect(this._boundaryElement);\n        }\n        // If we have a custom preview we can't know ahead of time how large it'll be so we position\n        // it next to the cursor. The exception is when the consumer has opted into making the preview\n        // the same size as the root element, in which case we do know the size.\n        const previewTemplate = this._previewTemplate;\n        this._pickupPositionInElement =\n            previewTemplate && previewTemplate.template && !previewTemplate.matchSize\n                ? { x: 0, y: 0 }\n                : this._getPointerPositionInElement(this._initialClientRect, referenceElement, event);\n        const pointerPosition = (this._pickupPositionOnPage =\n            this._lastKnownPointerPosition =\n                this._getPointerPositionOnPage(event));\n        this._pointerDirectionDelta = { x: 0, y: 0 };\n        this._pointerPositionAtLastDirectionChange = { x: pointerPosition.x, y: pointerPosition.y };\n        this._dragStartTime = Date.now();\n        this._dragDropRegistry.startDragging(this, event);\n    }\n    /** Cleans up the DOM artifacts that were added to facilitate the element being dragged. */\n    _cleanupDragArtifacts(event) {\n        // Restore the element's visibility and insert it at its old position in the DOM.\n        // It's important that we maintain the position, because moving the element around in the DOM\n        // can throw off `NgFor` which does smart diffing and re-creates elements only when necessary,\n        // while moving the existing elements in all other cases.\n        toggleVisibility(this._rootElement, true, dragImportantProperties);\n        this._anchor.parentNode.replaceChild(this._rootElement, this._anchor);\n        this._destroyPreview();\n        this._destroyPlaceholder();\n        this._initialClientRect =\n            this._boundaryRect =\n                this._previewRect =\n                    this._initialTransform =\n                        undefined;\n        // Re-enter the NgZone since we bound `document` events on the outside.\n        this._ngZone.run(() => {\n            const container = this._dropContainer;\n            const currentIndex = container.getItemIndex(this);\n            const pointerPosition = this._getPointerPositionOnPage(event);\n            const distance = this._getDragDistance(pointerPosition);\n            const isPointerOverContainer = container._isOverContainer(pointerPosition.x, pointerPosition.y);\n            this.ended.next({ source: this, distance, dropPoint: pointerPosition, event });\n            this.dropped.next({\n                item: this,\n                currentIndex,\n                previousIndex: this._initialIndex,\n                container: container,\n                previousContainer: this._initialContainer,\n                isPointerOverContainer,\n                distance,\n                dropPoint: pointerPosition,\n                event,\n            });\n            container.drop(this, currentIndex, this._initialIndex, this._initialContainer, isPointerOverContainer, distance, pointerPosition, event);\n            this._dropContainer = this._initialContainer;\n        });\n    }\n    /**\n     * Updates the item's position in its drop container, or moves it\n     * into a new one, depending on its current drag position.\n     */\n    _updateActiveDropContainer({ x, y }, { x: rawX, y: rawY }) {\n        // Drop container that draggable has been moved into.\n        let newContainer = this._initialContainer._getSiblingContainerFromPosition(this, x, y);\n        // If we couldn't find a new container to move the item into, and the item has left its\n        // initial container, check whether the it's over the initial container. This handles the\n        // case where two containers are connected one way and the user tries to undo dragging an\n        // item into a new container.\n        if (!newContainer &&\n            this._dropContainer !== this._initialContainer &&\n            this._initialContainer._isOverContainer(x, y)) {\n            newContainer = this._initialContainer;\n        }\n        if (newContainer && newContainer !== this._dropContainer) {\n            this._ngZone.run(() => {\n                // Notify the old container that the item has left.\n                this.exited.next({ item: this, container: this._dropContainer });\n                this._dropContainer.exit(this);\n                // Notify the new container that the item has entered.\n                this._dropContainer = newContainer;\n                this._dropContainer.enter(this, x, y, newContainer === this._initialContainer &&\n                    // If we're re-entering the initial container and sorting is disabled,\n                    // put item the into its starting index to begin with.\n                    newContainer.sortingDisabled\n                    ? this._initialIndex\n                    : undefined);\n                this.entered.next({\n                    item: this,\n                    container: newContainer,\n                    currentIndex: newContainer.getItemIndex(this),\n                });\n            });\n        }\n        // Dragging may have been interrupted as a result of the events above.\n        if (this.isDragging()) {\n            this._dropContainer._startScrollingIfNecessary(rawX, rawY);\n            this._dropContainer._sortItem(this, x, y, this._pointerDirectionDelta);\n            if (this.constrainPosition) {\n                this._applyPreviewTransform(x, y);\n            }\n            else {\n                this._applyPreviewTransform(x - this._pickupPositionInElement.x, y - this._pickupPositionInElement.y);\n            }\n        }\n    }\n    /**\n     * Creates the element that will be rendered next to the user's pointer\n     * and will be used as a preview of the element that is being dragged.\n     */\n    _createPreviewElement() {\n        const previewConfig = this._previewTemplate;\n        const previewClass = this.previewClass;\n        const previewTemplate = previewConfig ? previewConfig.template : null;\n        let preview;\n        if (previewTemplate && previewConfig) {\n            // Measure the element before we've inserted the preview\n            // since the insertion could throw off the measurement.\n            const rootRect = previewConfig.matchSize ? this._initialClientRect : null;\n            const viewRef = previewConfig.viewContainer.createEmbeddedView(previewTemplate, previewConfig.context);\n            viewRef.detectChanges();\n            preview = getRootNode(viewRef, this._document);\n            this._previewRef = viewRef;\n            if (previewConfig.matchSize) {\n                matchElementSize(preview, rootRect);\n            }\n            else {\n                preview.style.transform = getTransform(this._pickupPositionOnPage.x, this._pickupPositionOnPage.y);\n            }\n        }\n        else {\n            preview = deepCloneNode(this._rootElement);\n            matchElementSize(preview, this._initialClientRect);\n            if (this._initialTransform) {\n                preview.style.transform = this._initialTransform;\n            }\n        }\n        extendStyles(preview.style, {\n            // It's important that we disable the pointer events on the preview, because\n            // it can throw off the `document.elementFromPoint` calls in the `CdkDropList`.\n            'pointer-events': 'none',\n            // We have to reset the margin, because it can throw off positioning relative to the viewport.\n            'margin': '0',\n            'position': 'fixed',\n            'top': '0',\n            'left': '0',\n            'z-index': `${this._config.zIndex || 1000}`,\n        }, dragImportantProperties);\n        toggleNativeDragInteractions(preview, false);\n        preview.classList.add('cdk-drag-preview');\n        preview.setAttribute('dir', this._direction);\n        if (previewClass) {\n            if (Array.isArray(previewClass)) {\n                previewClass.forEach(className => preview.classList.add(className));\n            }\n            else {\n                preview.classList.add(previewClass);\n            }\n        }\n        return preview;\n    }\n    /**\n     * Animates the preview element from its current position to the location of the drop placeholder.\n     * @returns Promise that resolves when the animation completes.\n     */\n    _animatePreviewToPlaceholder() {\n        // If the user hasn't moved yet, the transitionend event won't fire.\n        if (!this._hasMoved) {\n            return Promise.resolve();\n        }\n        const placeholderRect = this._placeholder.getBoundingClientRect();\n        // Apply the class that adds a transition to the preview.\n        this._preview.classList.add('cdk-drag-animating');\n        // Move the preview to the placeholder position.\n        this._applyPreviewTransform(placeholderRect.left, placeholderRect.top);\n        // If the element doesn't have a `transition`, the `transitionend` event won't fire. Since\n        // we need to trigger a style recalculation in order for the `cdk-drag-animating` class to\n        // apply its style, we take advantage of the available info to figure out whether we need to\n        // bind the event in the first place.\n        const duration = getTransformTransitionDurationInMs(this._preview);\n        if (duration === 0) {\n            return Promise.resolve();\n        }\n        return this._ngZone.runOutsideAngular(() => {\n            return new Promise(resolve => {\n                const handler = ((event) => {\n                    if (!event ||\n                        (_getEventTarget(event) === this._preview && event.propertyName === 'transform')) {\n                        this._preview?.removeEventListener('transitionend', handler);\n                        resolve();\n                        clearTimeout(timeout);\n                    }\n                });\n                // If a transition is short enough, the browser might not fire the `transitionend` event.\n                // Since we know how long it's supposed to take, add a timeout with a 50% buffer that'll\n                // fire if the transition hasn't completed when it was supposed to.\n                const timeout = setTimeout(handler, duration * 1.5);\n                this._preview.addEventListener('transitionend', handler);\n            });\n        });\n    }\n    /** Creates an element that will be shown instead of the current element while dragging. */\n    _createPlaceholderElement() {\n        const placeholderConfig = this._placeholderTemplate;\n        const placeholderTemplate = placeholderConfig ? placeholderConfig.template : null;\n        let placeholder;\n        if (placeholderTemplate) {\n            this._placeholderRef = placeholderConfig.viewContainer.createEmbeddedView(placeholderTemplate, placeholderConfig.context);\n            this._placeholderRef.detectChanges();\n            placeholder = getRootNode(this._placeholderRef, this._document);\n        }\n        else {\n            placeholder = deepCloneNode(this._rootElement);\n        }\n        // Stop pointer events on the preview so the user can't\n        // interact with it while the preview is animating.\n        placeholder.style.pointerEvents = 'none';\n        placeholder.classList.add('cdk-drag-placeholder');\n        return placeholder;\n    }\n    /**\n     * Figures out the coordinates at which an element was picked up.\n     * @param referenceElement Element that initiated the dragging.\n     * @param event Event that initiated the dragging.\n     */\n    _getPointerPositionInElement(elementRect, referenceElement, event) {\n        const handleElement = referenceElement === this._rootElement ? null : referenceElement;\n        const referenceRect = handleElement ? handleElement.getBoundingClientRect() : elementRect;\n        const point = isTouchEvent(event) ? event.targetTouches[0] : event;\n        const scrollPosition = this._getViewportScrollPosition();\n        const x = point.pageX - referenceRect.left - scrollPosition.left;\n        const y = point.pageY - referenceRect.top - scrollPosition.top;\n        return {\n            x: referenceRect.left - elementRect.left + x,\n            y: referenceRect.top - elementRect.top + y,\n        };\n    }\n    /** Determines the point of the page that was touched by the user. */\n    _getPointerPositionOnPage(event) {\n        const scrollPosition = this._getViewportScrollPosition();\n        const point = isTouchEvent(event)\n            ? // `touches` will be empty for start/end events so we have to fall back to `changedTouches`.\n                // Also note that on real devices we're guaranteed for either `touches` or `changedTouches`\n                // to have a value, but Firefox in device emulation mode has a bug where both can be empty\n                // for `touchstart` and `touchend` so we fall back to a dummy object in order to avoid\n                // throwing an error. The value returned here will be incorrect, but since this only\n                // breaks inside a developer tool and the value is only used for secondary information,\n                // we can get away with it. See https://bugzilla.mozilla.org/show_bug.cgi?id=1615824.\n                event.touches[0] || event.changedTouches[0] || { pageX: 0, pageY: 0 }\n            : event;\n        const x = point.pageX - scrollPosition.left;\n        const y = point.pageY - scrollPosition.top;\n        // if dragging SVG element, try to convert from the screen coordinate system to the SVG\n        // coordinate system\n        if (this._ownerSVGElement) {\n            const svgMatrix = this._ownerSVGElement.getScreenCTM();\n            if (svgMatrix) {\n                const svgPoint = this._ownerSVGElement.createSVGPoint();\n                svgPoint.x = x;\n                svgPoint.y = y;\n                return svgPoint.matrixTransform(svgMatrix.inverse());\n            }\n        }\n        return { x, y };\n    }\n    /** Gets the pointer position on the page, accounting for any position constraints. */\n    _getConstrainedPointerPosition(point) {\n        const dropContainerLock = this._dropContainer ? this._dropContainer.lockAxis : null;\n        let { x, y } = this.constrainPosition\n            ? this.constrainPosition(point, this, this._initialClientRect, this._pickupPositionInElement)\n            : point;\n        if (this.lockAxis === 'x' || dropContainerLock === 'x') {\n            y = this._pickupPositionOnPage.y;\n        }\n        else if (this.lockAxis === 'y' || dropContainerLock === 'y') {\n            x = this._pickupPositionOnPage.x;\n        }\n        if (this._boundaryRect) {\n            const { x: pickupX, y: pickupY } = this._pickupPositionInElement;\n            const boundaryRect = this._boundaryRect;\n            const { width: previewWidth, height: previewHeight } = this._getPreviewRect();\n            const minY = boundaryRect.top + pickupY;\n            const maxY = boundaryRect.bottom - (previewHeight - pickupY);\n            const minX = boundaryRect.left + pickupX;\n            const maxX = boundaryRect.right - (previewWidth - pickupX);\n            x = clamp$1(x, minX, maxX);\n            y = clamp$1(y, minY, maxY);\n        }\n        return { x, y };\n    }\n    /** Updates the current drag delta, based on the user's current pointer position on the page. */\n    _updatePointerDirectionDelta(pointerPositionOnPage) {\n        const { x, y } = pointerPositionOnPage;\n        const delta = this._pointerDirectionDelta;\n        const positionSinceLastChange = this._pointerPositionAtLastDirectionChange;\n        // Amount of pixels the user has dragged since the last time the direction changed.\n        const changeX = Math.abs(x - positionSinceLastChange.x);\n        const changeY = Math.abs(y - positionSinceLastChange.y);\n        // Because we handle pointer events on a per-pixel basis, we don't want the delta\n        // to change for every pixel, otherwise anything that depends on it can look erratic.\n        // To make the delta more consistent, we track how much the user has moved since the last\n        // delta change and we only update it after it has reached a certain threshold.\n        if (changeX > this._config.pointerDirectionChangeThreshold) {\n            delta.x = x > positionSinceLastChange.x ? 1 : -1;\n            positionSinceLastChange.x = x;\n        }\n        if (changeY > this._config.pointerDirectionChangeThreshold) {\n            delta.y = y > positionSinceLastChange.y ? 1 : -1;\n            positionSinceLastChange.y = y;\n        }\n        return delta;\n    }\n    /** Toggles the native drag interactions, based on how many handles are registered. */\n    _toggleNativeDragInteractions() {\n        if (!this._rootElement || !this._handles) {\n            return;\n        }\n        const shouldEnable = this._handles.length > 0 || !this.isDragging();\n        if (shouldEnable !== this._nativeInteractionsEnabled) {\n            this._nativeInteractionsEnabled = shouldEnable;\n            toggleNativeDragInteractions(this._rootElement, shouldEnable);\n        }\n    }\n    /** Removes the manually-added event listeners from the root element. */\n    _removeRootElementListeners(element) {\n        element.removeEventListener('mousedown', this._pointerDown, activeEventListenerOptions);\n        element.removeEventListener('touchstart', this._pointerDown, passiveEventListenerOptions);\n        element.removeEventListener('dragstart', this._nativeDragStart, activeEventListenerOptions);\n    }\n    /**\n     * Applies a `transform` to the root element, taking into account any existing transforms on it.\n     * @param x New transform value along the X axis.\n     * @param y New transform value along the Y axis.\n     */\n    _applyRootElementTransform(x, y) {\n        const transform = getTransform(x, y);\n        const styles = this._rootElement.style;\n        // Cache the previous transform amount only after the first drag sequence, because\n        // we don't want our own transforms to stack on top of each other.\n        // Should be excluded none because none + translate3d(x, y, x) is invalid css\n        if (this._initialTransform == null) {\n            this._initialTransform =\n                styles.transform && styles.transform != 'none' ? styles.transform : '';\n        }\n        // Preserve the previous `transform` value, if there was one. Note that we apply our own\n        // transform before the user's, because things like rotation can affect which direction\n        // the element will be translated towards.\n        styles.transform = combineTransforms(transform, this._initialTransform);\n    }\n    /**\n     * Applies a `transform` to the preview, taking into account any existing transforms on it.\n     * @param x New transform value along the X axis.\n     * @param y New transform value along the Y axis.\n     */\n    _applyPreviewTransform(x, y) {\n        // Only apply the initial transform if the preview is a clone of the original element, otherwise\n        // it could be completely different and the transform might not make sense anymore.\n        const initialTransform = this._previewTemplate?.template ? undefined : this._initialTransform;\n        const transform = getTransform(x, y);\n        this._preview.style.transform = combineTransforms(transform, initialTransform);\n    }\n    /**\n     * Gets the distance that the user has dragged during the current drag sequence.\n     * @param currentPosition Current position of the user's pointer.\n     */\n    _getDragDistance(currentPosition) {\n        const pickupPosition = this._pickupPositionOnPage;\n        if (pickupPosition) {\n            return { x: currentPosition.x - pickupPosition.x, y: currentPosition.y - pickupPosition.y };\n        }\n        return { x: 0, y: 0 };\n    }\n    /** Cleans up any cached element dimensions that we don't need after dragging has stopped. */\n    _cleanupCachedDimensions() {\n        this._boundaryRect = this._previewRect = undefined;\n        this._parentPositions.clear();\n    }\n    /**\n     * Checks whether the element is still inside its boundary after the viewport has been resized.\n     * If not, the position is adjusted so that the element fits again.\n     */\n    _containInsideBoundaryOnResize() {\n        let { x, y } = this._passiveTransform;\n        if ((x === 0 && y === 0) || this.isDragging() || !this._boundaryElement) {\n            return;\n        }\n        // Note: don't use `_clientRectAtStart` here, because we want the latest position.\n        const elementRect = this._rootElement.getBoundingClientRect();\n        const boundaryRect = this._boundaryElement.getBoundingClientRect();\n        // It's possible that the element got hidden away after dragging (e.g. by switching to a\n        // different tab). Don't do anything in this case so we don't clear the user's position.\n        if ((boundaryRect.width === 0 && boundaryRect.height === 0) ||\n            (elementRect.width === 0 && elementRect.height === 0)) {\n            return;\n        }\n        const leftOverflow = boundaryRect.left - elementRect.left;\n        const rightOverflow = elementRect.right - boundaryRect.right;\n        const topOverflow = boundaryRect.top - elementRect.top;\n        const bottomOverflow = elementRect.bottom - boundaryRect.bottom;\n        // If the element has become wider than the boundary, we can't\n        // do much to make it fit so we just anchor it to the left.\n        if (boundaryRect.width > elementRect.width) {\n            if (leftOverflow > 0) {\n                x += leftOverflow;\n            }\n            if (rightOverflow > 0) {\n                x -= rightOverflow;\n            }\n        }\n        else {\n            x = 0;\n        }\n        // If the element has become taller than the boundary, we can't\n        // do much to make it fit so we just anchor it to the top.\n        if (boundaryRect.height > elementRect.height) {\n            if (topOverflow > 0) {\n                y += topOverflow;\n            }\n            if (bottomOverflow > 0) {\n                y -= bottomOverflow;\n            }\n        }\n        else {\n            y = 0;\n        }\n        if (x !== this._passiveTransform.x || y !== this._passiveTransform.y) {\n            this.setFreeDragPosition({ y, x });\n        }\n    }\n    /** Gets the drag start delay, based on the event type. */\n    _getDragStartDelay(event) {\n        const value = this.dragStartDelay;\n        if (typeof value === 'number') {\n            return value;\n        }\n        else if (isTouchEvent(event)) {\n            return value.touch;\n        }\n        return value ? value.mouse : 0;\n    }\n    /** Updates the internal state of the draggable element when scrolling has occurred. */\n    _updateOnScroll(event) {\n        const scrollDifference = this._parentPositions.handleScroll(event);\n        if (scrollDifference) {\n            const target = _getEventTarget(event);\n            // ClientRect dimensions are based on the scroll position of the page and its parent\n            // node so we have to update the cached boundary ClientRect if the user has scrolled.\n            if (this._boundaryRect &&\n                target !== this._boundaryElement &&\n                target.contains(this._boundaryElement)) {\n                adjustClientRect(this._boundaryRect, scrollDifference.top, scrollDifference.left);\n            }\n            this._pickupPositionOnPage.x += scrollDifference.left;\n            this._pickupPositionOnPage.y += scrollDifference.top;\n            // If we're in free drag mode, we have to update the active transform, because\n            // it isn't relative to the viewport like the preview inside a drop list.\n            if (!this._dropContainer) {\n                this._activeTransform.x -= scrollDifference.left;\n                this._activeTransform.y -= scrollDifference.top;\n                this._applyRootElementTransform(this._activeTransform.x, this._activeTransform.y);\n            }\n        }\n    }\n    /** Gets the scroll position of the viewport. */\n    _getViewportScrollPosition() {\n        return (this._parentPositions.positions.get(this._document)?.scrollPosition ||\n            this._parentPositions.getViewportScrollPosition());\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     */\n    _getShadowRoot() {\n        if (this._cachedShadowRoot === undefined) {\n            this._cachedShadowRoot = _getShadowRoot(this._rootElement);\n        }\n        return this._cachedShadowRoot;\n    }\n    /** Gets the element into which the drag preview should be inserted. */\n    _getPreviewInsertionPoint(initialParent, shadowRoot) {\n        const previewContainer = this._previewContainer || 'global';\n        if (previewContainer === 'parent') {\n            return initialParent;\n        }\n        if (previewContainer === 'global') {\n            const documentRef = this._document;\n            // We can't use the body if the user is in fullscreen mode,\n            // because the preview will render under the fullscreen element.\n            // TODO(crisbeto): dedupe this with the `FullscreenOverlayContainer` eventually.\n            return (shadowRoot ||\n                documentRef.fullscreenElement ||\n                documentRef.webkitFullscreenElement ||\n                documentRef.mozFullScreenElement ||\n                documentRef.msFullscreenElement ||\n                documentRef.body);\n        }\n        return coerceElement(previewContainer);\n    }\n    /** Lazily resolves and returns the dimensions of the preview. */\n    _getPreviewRect() {\n        // Cache the preview element rect if we haven't cached it already or if\n        // we cached it too early before the element dimensions were computed.\n        if (!this._previewRect || (!this._previewRect.width && !this._previewRect.height)) {\n            this._previewRect = this._preview\n                ? this._preview.getBoundingClientRect()\n                : this._initialClientRect;\n        }\n        return this._previewRect;\n    }\n    /** Gets a handle that is the target of an event. */\n    _getTargetHandle(event) {\n        return this._handles.find(handle => {\n            return event.target && (event.target === handle || handle.contains(event.target));\n        });\n    }\n}\n/**\n * Gets a 3d `transform` that can be applied to an element.\n * @param x Desired position of the element along the X axis.\n * @param y Desired position of the element along the Y axis.\n */\nfunction getTransform(x, y) {\n    // Round the transforms since some browsers will\n    // blur the elements for sub-pixel transforms.\n    return `translate3d(${Math.round(x)}px, ${Math.round(y)}px, 0)`;\n}\n/** Clamps a value between a minimum and a maximum. */\nfunction clamp$1(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/** Determines whether an event is a touch event. */\nfunction isTouchEvent(event) {\n    // This function is called for every pixel that the user has dragged so we need it to be\n    // as fast as possible. Since we only bind mouse events and touch events, we can assume\n    // that if the event's name starts with `t`, it's a touch event.\n    return event.type[0] === 't';\n}\n/**\n * Gets the root HTML element of an embedded view.\n * If the root is not an HTML element it gets wrapped in one.\n */\nfunction getRootNode(viewRef, _document) {\n    const rootNodes = viewRef.rootNodes;\n    if (rootNodes.length === 1 && rootNodes[0].nodeType === _document.ELEMENT_NODE) {\n        return rootNodes[0];\n    }\n    const wrapper = _document.createElement('div');\n    rootNodes.forEach(node => wrapper.appendChild(node));\n    return wrapper;\n}\n/**\n * Matches the target element's size to the source's size.\n * @param target Element that needs to be resized.\n * @param sourceRect Dimensions of the source element.\n */\nfunction matchElementSize(target, sourceRect) {\n    target.style.width = `${sourceRect.width}px`;\n    target.style.height = `${sourceRect.height}px`;\n    target.style.transform = getTransform(sourceRect.left, sourceRect.top);\n}\n\n/**\n * Moves an item one index in an array to another.\n * @param array Array in which to move the item.\n * @param fromIndex Starting index of the item.\n * @param toIndex Index to which the item should be moved.\n */\nfunction moveItemInArray(array, fromIndex, toIndex) {\n    const from = clamp(fromIndex, array.length - 1);\n    const to = clamp(toIndex, array.length - 1);\n    if (from === to) {\n        return;\n    }\n    const target = array[from];\n    const delta = to < from ? -1 : 1;\n    for (let i = from; i !== to; i += delta) {\n        array[i] = array[i + delta];\n    }\n    array[to] = target;\n}\n/**\n * Moves an item from one array to another.\n * @param currentArray Array from which to transfer the item.\n * @param targetArray Array into which to put the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n */\nfunction transferArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const from = clamp(currentIndex, currentArray.length - 1);\n    const to = clamp(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray.splice(from, 1)[0]);\n    }\n}\n/**\n * Copies an item from one array to another, leaving it in its\n * original position in current array.\n * @param currentArray Array from which to copy the item.\n * @param targetArray Array into which is copy the item.\n * @param currentIndex Index of the item in its current array.\n * @param targetIndex Index at which to insert the item.\n *\n */\nfunction copyArrayItem(currentArray, targetArray, currentIndex, targetIndex) {\n    const to = clamp(targetIndex, targetArray.length);\n    if (currentArray.length) {\n        targetArray.splice(to, 0, currentArray[currentIndex]);\n    }\n}\n/** Clamps a number between zero and a maximum. */\nfunction clamp(value, max) {\n    return Math.max(0, Math.min(max, value));\n}\n\n/**\n * Strategy that only supports sorting along a single axis.\n * Items are reordered using CSS transforms which allows for sorting to be animated.\n * @docs-private\n */\nclass SingleAxisSortStrategy {\n    constructor(_element, _dragDropRegistry) {\n        this._element = _element;\n        this._dragDropRegistry = _dragDropRegistry;\n        /** Cache of the dimensions of all the items inside the container. */\n        this._itemPositions = [];\n        /** Direction in which the list is oriented. */\n        this.orientation = 'vertical';\n        /**\n         * Keeps track of the item that was last swapped with the dragged item, as well as what direction\n         * the pointer was moving in when the swap occurred and whether the user's pointer continued to\n         * overlap with the swapped item after the swapping occurred.\n         */\n        this._previousSwap = {\n            drag: null,\n            delta: 0,\n            overlaps: false,\n        };\n    }\n    /**\n     * To be called when the drag sequence starts.\n     * @param items Items that are currently in the list.\n     */\n    start(items) {\n        this.withItems(items);\n    }\n    /**\n     * To be called when an item is being sorted.\n     * @param item Item to be sorted.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param pointerDelta Direction in which the pointer is moving along each axis.\n     */\n    sort(item, pointerX, pointerY, pointerDelta) {\n        const siblings = this._itemPositions;\n        const newIndex = this._getItemIndexFromPointerPosition(item, pointerX, pointerY, pointerDelta);\n        if (newIndex === -1 && siblings.length > 0) {\n            return null;\n        }\n        const isHorizontal = this.orientation === 'horizontal';\n        const currentIndex = siblings.findIndex(currentItem => currentItem.drag === item);\n        const siblingAtNewPosition = siblings[newIndex];\n        const currentPosition = siblings[currentIndex].clientRect;\n        const newPosition = siblingAtNewPosition.clientRect;\n        const delta = currentIndex > newIndex ? 1 : -1;\n        // How many pixels the item's placeholder should be offset.\n        const itemOffset = this._getItemOffsetPx(currentPosition, newPosition, delta);\n        // How many pixels all the other items should be offset.\n        const siblingOffset = this._getSiblingOffsetPx(currentIndex, siblings, delta);\n        // Save the previous order of the items before moving the item to its new index.\n        // We use this to check whether an item has been moved as a result of the sorting.\n        const oldOrder = siblings.slice();\n        // Shuffle the array in place.\n        moveItemInArray(siblings, currentIndex, newIndex);\n        siblings.forEach((sibling, index) => {\n            // Don't do anything if the position hasn't changed.\n            if (oldOrder[index] === sibling) {\n                return;\n            }\n            const isDraggedItem = sibling.drag === item;\n            const offset = isDraggedItem ? itemOffset : siblingOffset;\n            const elementToOffset = isDraggedItem\n                ? item.getPlaceholderElement()\n                : sibling.drag.getRootElement();\n            // Update the offset to reflect the new position.\n            sibling.offset += offset;\n            // Since we're moving the items with a `transform`, we need to adjust their cached\n            // client rects to reflect their new position, as well as swap their positions in the cache.\n            // Note that we shouldn't use `getBoundingClientRect` here to update the cache, because the\n            // elements may be mid-animation which will give us a wrong result.\n            if (isHorizontal) {\n                // Round the transforms since some browsers will\n                // blur the elements, for sub-pixel transforms.\n                elementToOffset.style.transform = combineTransforms(`translate3d(${Math.round(sibling.offset)}px, 0, 0)`, sibling.initialTransform);\n                adjustClientRect(sibling.clientRect, 0, offset);\n            }\n            else {\n                elementToOffset.style.transform = combineTransforms(`translate3d(0, ${Math.round(sibling.offset)}px, 0)`, sibling.initialTransform);\n                adjustClientRect(sibling.clientRect, offset, 0);\n            }\n        });\n        // Note that it's important that we do this after the client rects have been adjusted.\n        this._previousSwap.overlaps = isInsideClientRect(newPosition, pointerX, pointerY);\n        this._previousSwap.drag = siblingAtNewPosition.drag;\n        this._previousSwap.delta = isHorizontal ? pointerDelta.x : pointerDelta.y;\n        return { previousIndex: currentIndex, currentIndex: newIndex };\n    }\n    /**\n     * Called when an item is being moved into the container.\n     * @param item Item that was moved into the container.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param index Index at which the item entered. If omitted, the container will try to figure it\n     *   out automatically.\n     */\n    enter(item, pointerX, pointerY, index) {\n        const newIndex = index == null || index < 0\n            ? // We use the coordinates of where the item entered the drop\n                // zone to figure out at which index it should be inserted.\n                this._getItemIndexFromPointerPosition(item, pointerX, pointerY)\n            : index;\n        const activeDraggables = this._activeDraggables;\n        const currentIndex = activeDraggables.indexOf(item);\n        const placeholder = item.getPlaceholderElement();\n        let newPositionReference = activeDraggables[newIndex];\n        // If the item at the new position is the same as the item that is being dragged,\n        // it means that we're trying to restore the item to its initial position. In this\n        // case we should use the next item from the list as the reference.\n        if (newPositionReference === item) {\n            newPositionReference = activeDraggables[newIndex + 1];\n        }\n        // If we didn't find a new position reference, it means that either the item didn't start off\n        // in this container, or that the item requested to be inserted at the end of the list.\n        if (!newPositionReference &&\n            (newIndex == null || newIndex === -1 || newIndex < activeDraggables.length - 1) &&\n            this._shouldEnterAsFirstChild(pointerX, pointerY)) {\n            newPositionReference = activeDraggables[0];\n        }\n        // Since the item may be in the `activeDraggables` already (e.g. if the user dragged it\n        // into another container and back again), we have to ensure that it isn't duplicated.\n        if (currentIndex > -1) {\n            activeDraggables.splice(currentIndex, 1);\n        }\n        // Don't use items that are being dragged as a reference, because\n        // their element has been moved down to the bottom of the body.\n        if (newPositionReference && !this._dragDropRegistry.isDragging(newPositionReference)) {\n            const element = newPositionReference.getRootElement();\n            element.parentElement.insertBefore(placeholder, element);\n            activeDraggables.splice(newIndex, 0, item);\n        }\n        else {\n            coerceElement(this._element).appendChild(placeholder);\n            activeDraggables.push(item);\n        }\n        // The transform needs to be cleared so it doesn't throw off the measurements.\n        placeholder.style.transform = '';\n        // Note that usually `start` is called together with `enter` when an item goes into a new\n        // container. This will cache item positions, but we need to refresh them since the amount\n        // of items has changed.\n        this._cacheItemPositions();\n    }\n    /** Sets the items that are currently part of the list. */\n    withItems(items) {\n        this._activeDraggables = items.slice();\n        this._cacheItemPositions();\n    }\n    /** Assigns a sort predicate to the strategy. */\n    withSortPredicate(predicate) {\n        this._sortPredicate = predicate;\n    }\n    /** Resets the strategy to its initial state before dragging was started. */\n    reset() {\n        // TODO(crisbeto): may have to wait for the animations to finish.\n        this._activeDraggables.forEach(item => {\n            const rootElement = item.getRootElement();\n            if (rootElement) {\n                const initialTransform = this._itemPositions.find(p => p.drag === item)?.initialTransform;\n                rootElement.style.transform = initialTransform || '';\n            }\n        });\n        this._itemPositions = [];\n        this._activeDraggables = [];\n        this._previousSwap.drag = null;\n        this._previousSwap.delta = 0;\n        this._previousSwap.overlaps = false;\n    }\n    /**\n     * Gets a snapshot of items currently in the list.\n     * Can include items that we dragged in from another list.\n     */\n    getActiveItemsSnapshot() {\n        return this._activeDraggables;\n    }\n    /** Gets the index of a specific item. */\n    getItemIndex(item) {\n        // Items are sorted always by top/left in the cache, however they flow differently in RTL.\n        // The rest of the logic still stands no matter what orientation we're in, however\n        // we need to invert the array when determining the index.\n        const items = this.orientation === 'horizontal' && this.direction === 'rtl'\n            ? this._itemPositions.slice().reverse()\n            : this._itemPositions;\n        return items.findIndex(currentItem => currentItem.drag === item);\n    }\n    /** Used to notify the strategy that the scroll position has changed. */\n    updateOnScroll(topDifference, leftDifference) {\n        // Since we know the amount that the user has scrolled we can shift all of the\n        // client rectangles ourselves. This is cheaper than re-measuring everything and\n        // we can avoid inconsistent behavior where we might be measuring the element before\n        // its position has changed.\n        this._itemPositions.forEach(({ clientRect }) => {\n            adjustClientRect(clientRect, topDifference, leftDifference);\n        });\n        // We need two loops for this, because we want all of the cached\n        // positions to be up-to-date before we re-sort the item.\n        this._itemPositions.forEach(({ drag }) => {\n            if (this._dragDropRegistry.isDragging(drag)) {\n                // We need to re-sort the item manually, because the pointer move\n                // events won't be dispatched while the user is scrolling.\n                drag._sortFromLastPointerPosition();\n            }\n        });\n    }\n    /** Refreshes the position cache of the items and sibling containers. */\n    _cacheItemPositions() {\n        const isHorizontal = this.orientation === 'horizontal';\n        this._itemPositions = this._activeDraggables\n            .map(drag => {\n            const elementToMeasure = drag.getVisibleElement();\n            return {\n                drag,\n                offset: 0,\n                initialTransform: elementToMeasure.style.transform || '',\n                clientRect: getMutableClientRect(elementToMeasure),\n            };\n        })\n            .sort((a, b) => {\n            return isHorizontal\n                ? a.clientRect.left - b.clientRect.left\n                : a.clientRect.top - b.clientRect.top;\n        });\n    }\n    /**\n     * Gets the offset in pixels by which the item that is being dragged should be moved.\n     * @param currentPosition Current position of the item.\n     * @param newPosition Position of the item where the current item should be moved.\n     * @param delta Direction in which the user is moving.\n     */\n    _getItemOffsetPx(currentPosition, newPosition, delta) {\n        const isHorizontal = this.orientation === 'horizontal';\n        let itemOffset = isHorizontal\n            ? newPosition.left - currentPosition.left\n            : newPosition.top - currentPosition.top;\n        // Account for differences in the item width/height.\n        if (delta === -1) {\n            itemOffset += isHorizontal\n                ? newPosition.width - currentPosition.width\n                : newPosition.height - currentPosition.height;\n        }\n        return itemOffset;\n    }\n    /**\n     * Gets the offset in pixels by which the items that aren't being dragged should be moved.\n     * @param currentIndex Index of the item currently being dragged.\n     * @param siblings All of the items in the list.\n     * @param delta Direction in which the user is moving.\n     */\n    _getSiblingOffsetPx(currentIndex, siblings, delta) {\n        const isHorizontal = this.orientation === 'horizontal';\n        const currentPosition = siblings[currentIndex].clientRect;\n        const immediateSibling = siblings[currentIndex + delta * -1];\n        let siblingOffset = currentPosition[isHorizontal ? 'width' : 'height'] * delta;\n        if (immediateSibling) {\n            const start = isHorizontal ? 'left' : 'top';\n            const end = isHorizontal ? 'right' : 'bottom';\n            // Get the spacing between the start of the current item and the end of the one immediately\n            // after it in the direction in which the user is dragging, or vice versa. We add it to the\n            // offset in order to push the element to where it will be when it's inline and is influenced\n            // by the `margin` of its siblings.\n            if (delta === -1) {\n                siblingOffset -= immediateSibling.clientRect[start] - currentPosition[end];\n            }\n            else {\n                siblingOffset += currentPosition[start] - immediateSibling.clientRect[end];\n            }\n        }\n        return siblingOffset;\n    }\n    /**\n     * Checks if pointer is entering in the first position\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     */\n    _shouldEnterAsFirstChild(pointerX, pointerY) {\n        if (!this._activeDraggables.length) {\n            return false;\n        }\n        const itemPositions = this._itemPositions;\n        const isHorizontal = this.orientation === 'horizontal';\n        // `itemPositions` are sorted by position while `activeDraggables` are sorted by child index\n        // check if container is using some sort of \"reverse\" ordering (eg: flex-direction: row-reverse)\n        const reversed = itemPositions[0].drag !== this._activeDraggables[0];\n        if (reversed) {\n            const lastItemRect = itemPositions[itemPositions.length - 1].clientRect;\n            return isHorizontal ? pointerX >= lastItemRect.right : pointerY >= lastItemRect.bottom;\n        }\n        else {\n            const firstItemRect = itemPositions[0].clientRect;\n            return isHorizontal ? pointerX <= firstItemRect.left : pointerY <= firstItemRect.top;\n        }\n    }\n    /**\n     * Gets the index of an item in the drop container, based on the position of the user's pointer.\n     * @param item Item that is being sorted.\n     * @param pointerX Position of the user's pointer along the X axis.\n     * @param pointerY Position of the user's pointer along the Y axis.\n     * @param delta Direction in which the user is moving their pointer.\n     */\n    _getItemIndexFromPointerPosition(item, pointerX, pointerY, delta) {\n        const isHorizontal = this.orientation === 'horizontal';\n        const index = this._itemPositions.findIndex(({ drag, clientRect }) => {\n            // Skip the item itself.\n            if (drag === item) {\n                return false;\n            }\n            if (delta) {\n                const direction = isHorizontal ? delta.x : delta.y;\n                // If the user is still hovering over the same item as last time, their cursor hasn't left\n                // the item after we made the swap, and they didn't change the direction in which they're\n                // dragging, we don't consider it a direction swap.\n                if (drag === this._previousSwap.drag &&\n                    this._previousSwap.overlaps &&\n                    direction === this._previousSwap.delta) {\n                    return false;\n                }\n            }\n            return isHorizontal\n                ? // Round these down since most browsers report client rects with\n                    // sub-pixel precision, whereas the pointer coordinates are rounded to pixels.\n                    pointerX >= Math.floor(clientRect.left) && pointerX < Math.floor(clientRect.right)\n                : pointerY >= Math.floor(clientRect.top) && pointerY < Math.floor(clientRect.bottom);\n        });\n        return index === -1 || !this._sortPredicate(index, item) ? -1 : index;\n    }\n}\n\n/**\n * Proximity, as a ratio to width/height, at which a\n * dragged item will affect the drop container.\n */\nconst DROP_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Proximity, as a ratio to width/height at which to start auto-scrolling the drop list or the\n * viewport. The value comes from trying it out manually until it feels right.\n */\nconst SCROLL_PROXIMITY_THRESHOLD = 0.05;\n/**\n * Reference to a drop list. Used to manipulate or dispose of the container.\n */\nclass DropListRef {\n    constructor(element, _dragDropRegistry, _document, _ngZone, _viewportRuler) {\n        this._dragDropRegistry = _dragDropRegistry;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        /** Whether starting a dragging sequence from this container is disabled. */\n        this.disabled = false;\n        /** Whether sorting items within the list is disabled. */\n        this.sortingDisabled = false;\n        /**\n         * Whether auto-scrolling the view when the user\n         * moves their pointer close to the edges is disabled.\n         */\n        this.autoScrollDisabled = false;\n        /** Number of pixels to scroll for each frame when auto-scrolling an element. */\n        this.autoScrollStep = 2;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Function that is used to determine whether an item can be sorted into a particular index. */\n        this.sortPredicate = () => true;\n        /** Emits right before dragging has started. */\n        this.beforeStarted = new Subject();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new Subject();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new Subject();\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new Subject();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new Subject();\n        /** Emits when a dragging sequence is started in a list connected to the current one. */\n        this.receivingStarted = new Subject();\n        /** Emits when a dragging sequence is stopped from a list connected to the current one. */\n        this.receivingStopped = new Subject();\n        /** Whether an item in the list is being dragged. */\n        this._isDragging = false;\n        /** Draggable items in the container. */\n        this._draggables = [];\n        /** Drop lists that are connected to the current one. */\n        this._siblings = [];\n        /** Connected siblings that currently have a dragged item. */\n        this._activeSiblings = new Set();\n        /** Subscription to the window being scrolled. */\n        this._viewportScrollSubscription = Subscription.EMPTY;\n        /** Vertical direction in which the list is currently scrolling. */\n        this._verticalScrollDirection = 0 /* AutoScrollVerticalDirection.NONE */;\n        /** Horizontal direction in which the list is currently scrolling. */\n        this._horizontalScrollDirection = 0 /* AutoScrollHorizontalDirection.NONE */;\n        /** Used to signal to the current auto-scroll sequence when to stop. */\n        this._stopScrollTimers = new Subject();\n        /** Shadow root of the current element. Necessary for `elementFromPoint` to resolve correctly. */\n        this._cachedShadowRoot = null;\n        /** Starts the interval that'll auto-scroll the element. */\n        this._startScrollInterval = () => {\n            this._stopScrolling();\n            interval(0, animationFrameScheduler)\n                .pipe(takeUntil(this._stopScrollTimers))\n                .subscribe(() => {\n                const node = this._scrollNode;\n                const scrollStep = this.autoScrollStep;\n                if (this._verticalScrollDirection === 1 /* AutoScrollVerticalDirection.UP */) {\n                    node.scrollBy(0, -scrollStep);\n                }\n                else if (this._verticalScrollDirection === 2 /* AutoScrollVerticalDirection.DOWN */) {\n                    node.scrollBy(0, scrollStep);\n                }\n                if (this._horizontalScrollDirection === 1 /* AutoScrollHorizontalDirection.LEFT */) {\n                    node.scrollBy(-scrollStep, 0);\n                }\n                else if (this._horizontalScrollDirection === 2 /* AutoScrollHorizontalDirection.RIGHT */) {\n                    node.scrollBy(scrollStep, 0);\n                }\n            });\n        };\n        this.element = coerceElement(element);\n        this._document = _document;\n        this.withScrollableParents([this.element]);\n        _dragDropRegistry.registerDropContainer(this);\n        this._parentPositions = new ParentPositionTracker(_document);\n        this._sortStrategy = new SingleAxisSortStrategy(this.element, _dragDropRegistry);\n        this._sortStrategy.withSortPredicate((index, item) => this.sortPredicate(index, item, this));\n    }\n    /** Removes the drop list functionality from the DOM element. */\n    dispose() {\n        this._stopScrolling();\n        this._stopScrollTimers.complete();\n        this._viewportScrollSubscription.unsubscribe();\n        this.beforeStarted.complete();\n        this.entered.complete();\n        this.exited.complete();\n        this.dropped.complete();\n        this.sorted.complete();\n        this.receivingStarted.complete();\n        this.receivingStopped.complete();\n        this._activeSiblings.clear();\n        this._scrollNode = null;\n        this._parentPositions.clear();\n        this._dragDropRegistry.removeDropContainer(this);\n    }\n    /** Whether an item from this list is currently being dragged. */\n    isDragging() {\n        return this._isDragging;\n    }\n    /** Starts dragging an item. */\n    start() {\n        this._draggingStarted();\n        this._notifyReceivingSiblings();\n    }\n    /**\n     * Attempts to move an item into the container.\n     * @param item Item that was moved into the container.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param index Index at which the item entered. If omitted, the container will try to figure it\n     *   out automatically.\n     */\n    enter(item, pointerX, pointerY, index) {\n        this._draggingStarted();\n        // If sorting is disabled, we want the item to return to its starting\n        // position if the user is returning it to its initial container.\n        if (index == null && this.sortingDisabled) {\n            index = this._draggables.indexOf(item);\n        }\n        this._sortStrategy.enter(item, pointerX, pointerY, index);\n        // Note that this usually happens inside `_draggingStarted` as well, but the dimensions\n        // can change when the sort strategy moves the item around inside `enter`.\n        this._cacheParentPositions();\n        // Notify siblings at the end so that the item has been inserted into the `activeDraggables`.\n        this._notifyReceivingSiblings();\n        this.entered.next({ item, container: this, currentIndex: this.getItemIndex(item) });\n    }\n    /**\n     * Removes an item from the container after it was dragged into another container by the user.\n     * @param item Item that was dragged out.\n     */\n    exit(item) {\n        this._reset();\n        this.exited.next({ item, container: this });\n    }\n    /**\n     * Drops an item into this container.\n     * @param item Item being dropped into the container.\n     * @param currentIndex Index at which the item should be inserted.\n     * @param previousIndex Index of the item when dragging started.\n     * @param previousContainer Container from which the item got dragged in.\n     * @param isPointerOverContainer Whether the user's pointer was over the\n     *    container when the item was dropped.\n     * @param distance Distance the user has dragged since the start of the dragging sequence.\n     * @param event Event that triggered the dropping sequence.\n     *\n     * @breaking-change 15.0.0 `previousIndex` and `event` parameters to become required.\n     */\n    drop(item, currentIndex, previousIndex, previousContainer, isPointerOverContainer, distance, dropPoint, event = {}) {\n        this._reset();\n        this.dropped.next({\n            item,\n            currentIndex,\n            previousIndex,\n            container: this,\n            previousContainer,\n            isPointerOverContainer,\n            distance,\n            dropPoint,\n            event,\n        });\n    }\n    /**\n     * Sets the draggable items that are a part of this list.\n     * @param items Items that are a part of this list.\n     */\n    withItems(items) {\n        const previousItems = this._draggables;\n        this._draggables = items;\n        items.forEach(item => item._withDropContainer(this));\n        if (this.isDragging()) {\n            const draggedItems = previousItems.filter(item => item.isDragging());\n            // If all of the items being dragged were removed\n            // from the list, abort the current drag sequence.\n            if (draggedItems.every(item => items.indexOf(item) === -1)) {\n                this._reset();\n            }\n            else {\n                this._sortStrategy.withItems(this._draggables);\n            }\n        }\n        return this;\n    }\n    /** Sets the layout direction of the drop list. */\n    withDirection(direction) {\n        this._sortStrategy.direction = direction;\n        return this;\n    }\n    /**\n     * Sets the containers that are connected to this one. When two or more containers are\n     * connected, the user will be allowed to transfer items between them.\n     * @param connectedTo Other containers that the current containers should be connected to.\n     */\n    connectedTo(connectedTo) {\n        this._siblings = connectedTo.slice();\n        return this;\n    }\n    /**\n     * Sets the orientation of the container.\n     * @param orientation New orientation for the container.\n     */\n    withOrientation(orientation) {\n        // TODO(crisbeto): eventually we should be constructing the new sort strategy here based on\n        // the new orientation. For now we can assume that it'll always be `SingleAxisSortStrategy`.\n        this._sortStrategy.orientation = orientation;\n        return this;\n    }\n    /**\n     * Sets which parent elements are can be scrolled while the user is dragging.\n     * @param elements Elements that can be scrolled.\n     */\n    withScrollableParents(elements) {\n        const element = coerceElement(this.element);\n        // We always allow the current element to be scrollable\n        // so we need to ensure that it's in the array.\n        this._scrollableElements =\n            elements.indexOf(element) === -1 ? [element, ...elements] : elements.slice();\n        return this;\n    }\n    /** Gets the scrollable parents that are registered with this drop container. */\n    getScrollableParents() {\n        return this._scrollableElements;\n    }\n    /**\n     * Figures out the index of an item in the container.\n     * @param item Item whose index should be determined.\n     */\n    getItemIndex(item) {\n        return this._isDragging\n            ? this._sortStrategy.getItemIndex(item)\n            : this._draggables.indexOf(item);\n    }\n    /**\n     * Whether the list is able to receive the item that\n     * is currently being dragged inside a connected drop list.\n     */\n    isReceiving() {\n        return this._activeSiblings.size > 0;\n    }\n    /**\n     * Sorts an item inside the container based on its position.\n     * @param item Item to be sorted.\n     * @param pointerX Position of the item along the X axis.\n     * @param pointerY Position of the item along the Y axis.\n     * @param pointerDelta Direction in which the pointer is moving along each axis.\n     */\n    _sortItem(item, pointerX, pointerY, pointerDelta) {\n        // Don't sort the item if sorting is disabled or it's out of range.\n        if (this.sortingDisabled ||\n            !this._clientRect ||\n            !isPointerNearClientRect(this._clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n            return;\n        }\n        const result = this._sortStrategy.sort(item, pointerX, pointerY, pointerDelta);\n        if (result) {\n            this.sorted.next({\n                previousIndex: result.previousIndex,\n                currentIndex: result.currentIndex,\n                container: this,\n                item,\n            });\n        }\n    }\n    /**\n     * Checks whether the user's pointer is close to the edges of either the\n     * viewport or the drop list and starts the auto-scroll sequence.\n     * @param pointerX User's pointer position along the x axis.\n     * @param pointerY User's pointer position along the y axis.\n     */\n    _startScrollingIfNecessary(pointerX, pointerY) {\n        if (this.autoScrollDisabled) {\n            return;\n        }\n        let scrollNode;\n        let verticalScrollDirection = 0 /* AutoScrollVerticalDirection.NONE */;\n        let horizontalScrollDirection = 0 /* AutoScrollHorizontalDirection.NONE */;\n        // Check whether we should start scrolling any of the parent containers.\n        this._parentPositions.positions.forEach((position, element) => {\n            // We have special handling for the `document` below. Also this would be\n            // nicer with a  for...of loop, but it requires changing a compiler flag.\n            if (element === this._document || !position.clientRect || scrollNode) {\n                return;\n            }\n            if (isPointerNearClientRect(position.clientRect, DROP_PROXIMITY_THRESHOLD, pointerX, pointerY)) {\n                [verticalScrollDirection, horizontalScrollDirection] = getElementScrollDirections(element, position.clientRect, pointerX, pointerY);\n                if (verticalScrollDirection || horizontalScrollDirection) {\n                    scrollNode = element;\n                }\n            }\n        });\n        // Otherwise check if we can start scrolling the viewport.\n        if (!verticalScrollDirection && !horizontalScrollDirection) {\n            const { width, height } = this._viewportRuler.getViewportSize();\n            const clientRect = {\n                width,\n                height,\n                top: 0,\n                right: width,\n                bottom: height,\n                left: 0,\n            };\n            verticalScrollDirection = getVerticalScrollDirection(clientRect, pointerY);\n            horizontalScrollDirection = getHorizontalScrollDirection(clientRect, pointerX);\n            scrollNode = window;\n        }\n        if (scrollNode &&\n            (verticalScrollDirection !== this._verticalScrollDirection ||\n                horizontalScrollDirection !== this._horizontalScrollDirection ||\n                scrollNode !== this._scrollNode)) {\n            this._verticalScrollDirection = verticalScrollDirection;\n            this._horizontalScrollDirection = horizontalScrollDirection;\n            this._scrollNode = scrollNode;\n            if ((verticalScrollDirection || horizontalScrollDirection) && scrollNode) {\n                this._ngZone.runOutsideAngular(this._startScrollInterval);\n            }\n            else {\n                this._stopScrolling();\n            }\n        }\n    }\n    /** Stops any currently-running auto-scroll sequences. */\n    _stopScrolling() {\n        this._stopScrollTimers.next();\n    }\n    /** Starts the dragging sequence within the list. */\n    _draggingStarted() {\n        const styles = coerceElement(this.element).style;\n        this.beforeStarted.next();\n        this._isDragging = true;\n        // We need to disable scroll snapping while the user is dragging, because it breaks automatic\n        // scrolling. The browser seems to round the value based on the snapping points which means\n        // that we can't increment/decrement the scroll position.\n        this._initialScrollSnap = styles.msScrollSnapType || styles.scrollSnapType || '';\n        styles.scrollSnapType = styles.msScrollSnapType = 'none';\n        this._sortStrategy.start(this._draggables);\n        this._cacheParentPositions();\n        this._viewportScrollSubscription.unsubscribe();\n        this._listenToScrollEvents();\n    }\n    /** Caches the positions of the configured scrollable parents. */\n    _cacheParentPositions() {\n        const element = coerceElement(this.element);\n        this._parentPositions.cache(this._scrollableElements);\n        // The list element is always in the `scrollableElements`\n        // so we can take advantage of the cached `ClientRect`.\n        this._clientRect = this._parentPositions.positions.get(element).clientRect;\n    }\n    /** Resets the container to its initial state. */\n    _reset() {\n        this._isDragging = false;\n        const styles = coerceElement(this.element).style;\n        styles.scrollSnapType = styles.msScrollSnapType = this._initialScrollSnap;\n        this._siblings.forEach(sibling => sibling._stopReceiving(this));\n        this._sortStrategy.reset();\n        this._stopScrolling();\n        this._viewportScrollSubscription.unsubscribe();\n        this._parentPositions.clear();\n    }\n    /**\n     * Checks whether the user's pointer is positioned over the container.\n     * @param x Pointer position along the X axis.\n     * @param y Pointer position along the Y axis.\n     */\n    _isOverContainer(x, y) {\n        return this._clientRect != null && isInsideClientRect(this._clientRect, x, y);\n    }\n    /**\n     * Figures out whether an item should be moved into a sibling\n     * drop container, based on its current position.\n     * @param item Drag item that is being moved.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _getSiblingContainerFromPosition(item, x, y) {\n        return this._siblings.find(sibling => sibling._canReceive(item, x, y));\n    }\n    /**\n     * Checks whether the drop list can receive the passed-in item.\n     * @param item Item that is being dragged into the list.\n     * @param x Position of the item along the X axis.\n     * @param y Position of the item along the Y axis.\n     */\n    _canReceive(item, x, y) {\n        if (!this._clientRect ||\n            !isInsideClientRect(this._clientRect, x, y) ||\n            !this.enterPredicate(item, this)) {\n            return false;\n        }\n        const elementFromPoint = this._getShadowRoot().elementFromPoint(x, y);\n        // If there's no element at the pointer position, then\n        // the client rect is probably scrolled out of the view.\n        if (!elementFromPoint) {\n            return false;\n        }\n        const nativeElement = coerceElement(this.element);\n        // The `ClientRect`, that we're using to find the container over which the user is\n        // hovering, doesn't give us any information on whether the element has been scrolled\n        // out of the view or whether it's overlapping with other containers. This means that\n        // we could end up transferring the item into a container that's invisible or is positioned\n        // below another one. We use the result from `elementFromPoint` to get the top-most element\n        // at the pointer position and to find whether it's one of the intersecting drop containers.\n        return elementFromPoint === nativeElement || nativeElement.contains(elementFromPoint);\n    }\n    /**\n     * Called by one of the connected drop lists when a dragging sequence has started.\n     * @param sibling Sibling in which dragging has started.\n     */\n    _startReceiving(sibling, items) {\n        const activeSiblings = this._activeSiblings;\n        if (!activeSiblings.has(sibling) &&\n            items.every(item => {\n                // Note that we have to add an exception to the `enterPredicate` for items that started off\n                // in this drop list. The drag ref has logic that allows an item to return to its initial\n                // container, if it has left the initial container and none of the connected containers\n                // allow it to enter. See `DragRef._updateActiveDropContainer` for more context.\n                return this.enterPredicate(item, this) || this._draggables.indexOf(item) > -1;\n            })) {\n            activeSiblings.add(sibling);\n            this._cacheParentPositions();\n            this._listenToScrollEvents();\n            this.receivingStarted.next({\n                initiator: sibling,\n                receiver: this,\n                items,\n            });\n        }\n    }\n    /**\n     * Called by a connected drop list when dragging has stopped.\n     * @param sibling Sibling whose dragging has stopped.\n     */\n    _stopReceiving(sibling) {\n        this._activeSiblings.delete(sibling);\n        this._viewportScrollSubscription.unsubscribe();\n        this.receivingStopped.next({ initiator: sibling, receiver: this });\n    }\n    /**\n     * Starts listening to scroll events on the viewport.\n     * Used for updating the internal state of the list.\n     */\n    _listenToScrollEvents() {\n        this._viewportScrollSubscription = this._dragDropRegistry\n            .scrolled(this._getShadowRoot())\n            .subscribe(event => {\n            if (this.isDragging()) {\n                const scrollDifference = this._parentPositions.handleScroll(event);\n                if (scrollDifference) {\n                    this._sortStrategy.updateOnScroll(scrollDifference.top, scrollDifference.left);\n                }\n            }\n            else if (this.isReceiving()) {\n                this._cacheParentPositions();\n            }\n        });\n    }\n    /**\n     * Lazily resolves and returns the shadow root of the element. We do this in a function, rather\n     * than saving it in property directly on init, because we want to resolve it as late as possible\n     * in order to ensure that the element has been moved into the shadow DOM. Doing it inside the\n     * constructor might be too early if the element is inside of something like `ngFor` or `ngIf`.\n     */\n    _getShadowRoot() {\n        if (!this._cachedShadowRoot) {\n            const shadowRoot = _getShadowRoot(coerceElement(this.element));\n            this._cachedShadowRoot = (shadowRoot || this._document);\n        }\n        return this._cachedShadowRoot;\n    }\n    /** Notifies any siblings that may potentially receive the item. */\n    _notifyReceivingSiblings() {\n        const draggedItems = this._sortStrategy\n            .getActiveItemsSnapshot()\n            .filter(item => item.isDragging());\n        this._siblings.forEach(sibling => sibling._startReceiving(this, draggedItems));\n    }\n}\n/**\n * Gets whether the vertical auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getVerticalScrollDirection(clientRect, pointerY) {\n    const { top, bottom, height } = clientRect;\n    const yThreshold = height * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerY >= top - yThreshold && pointerY <= top + yThreshold) {\n        return 1 /* AutoScrollVerticalDirection.UP */;\n    }\n    else if (pointerY >= bottom - yThreshold && pointerY <= bottom + yThreshold) {\n        return 2 /* AutoScrollVerticalDirection.DOWN */;\n    }\n    return 0 /* AutoScrollVerticalDirection.NONE */;\n}\n/**\n * Gets whether the horizontal auto-scroll direction of a node.\n * @param clientRect Dimensions of the node.\n * @param pointerX Position of the user's pointer along the x axis.\n */\nfunction getHorizontalScrollDirection(clientRect, pointerX) {\n    const { left, right, width } = clientRect;\n    const xThreshold = width * SCROLL_PROXIMITY_THRESHOLD;\n    if (pointerX >= left - xThreshold && pointerX <= left + xThreshold) {\n        return 1 /* AutoScrollHorizontalDirection.LEFT */;\n    }\n    else if (pointerX >= right - xThreshold && pointerX <= right + xThreshold) {\n        return 2 /* AutoScrollHorizontalDirection.RIGHT */;\n    }\n    return 0 /* AutoScrollHorizontalDirection.NONE */;\n}\n/**\n * Gets the directions in which an element node should be scrolled,\n * assuming that the user's pointer is already within it scrollable region.\n * @param element Element for which we should calculate the scroll direction.\n * @param clientRect Bounding client rectangle of the element.\n * @param pointerX Position of the user's pointer along the x axis.\n * @param pointerY Position of the user's pointer along the y axis.\n */\nfunction getElementScrollDirections(element, clientRect, pointerX, pointerY) {\n    const computedVertical = getVerticalScrollDirection(clientRect, pointerY);\n    const computedHorizontal = getHorizontalScrollDirection(clientRect, pointerX);\n    let verticalScrollDirection = 0 /* AutoScrollVerticalDirection.NONE */;\n    let horizontalScrollDirection = 0 /* AutoScrollHorizontalDirection.NONE */;\n    // Note that we here we do some extra checks for whether the element is actually scrollable in\n    // a certain direction and we only assign the scroll direction if it is. We do this so that we\n    // can allow other elements to be scrolled, if the current element can't be scrolled anymore.\n    // This allows us to handle cases where the scroll regions of two scrollable elements overlap.\n    if (computedVertical) {\n        const scrollTop = element.scrollTop;\n        if (computedVertical === 1 /* AutoScrollVerticalDirection.UP */) {\n            if (scrollTop > 0) {\n                verticalScrollDirection = 1 /* AutoScrollVerticalDirection.UP */;\n            }\n        }\n        else if (element.scrollHeight - scrollTop > element.clientHeight) {\n            verticalScrollDirection = 2 /* AutoScrollVerticalDirection.DOWN */;\n        }\n    }\n    if (computedHorizontal) {\n        const scrollLeft = element.scrollLeft;\n        if (computedHorizontal === 1 /* AutoScrollHorizontalDirection.LEFT */) {\n            if (scrollLeft > 0) {\n                horizontalScrollDirection = 1 /* AutoScrollHorizontalDirection.LEFT */;\n            }\n        }\n        else if (element.scrollWidth - scrollLeft > element.clientWidth) {\n            horizontalScrollDirection = 2 /* AutoScrollHorizontalDirection.RIGHT */;\n        }\n    }\n    return [verticalScrollDirection, horizontalScrollDirection];\n}\n\n/** Event options that can be used to bind an active, capturing event. */\nconst activeCapturingEventOptions = normalizePassiveListenerOptions({\n    passive: false,\n    capture: true,\n});\n/**\n * Service that keeps track of all the drag item and drop container\n * instances, and manages global event listeners on the `document`.\n * @docs-private\n */\n// Note: this class is generic, rather than referencing CdkDrag and CdkDropList directly, in order\n// to avoid circular imports. If we were to reference them here, importing the registry into the\n// classes that are registering themselves will introduce a circular import.\nclass DragDropRegistry {\n    constructor(_ngZone, _document) {\n        this._ngZone = _ngZone;\n        /** Registered drop container instances. */\n        this._dropInstances = new Set();\n        /** Registered drag item instances. */\n        this._dragInstances = new Set();\n        /** Drag item instances that are currently being dragged. */\n        this._activeDragInstances = [];\n        /** Keeps track of the event listeners that we've bound to the `document`. */\n        this._globalListeners = new Map();\n        /**\n         * Predicate function to check if an item is being dragged.  Moved out into a property,\n         * because it'll be called a lot and we don't want to create a new function every time.\n         */\n        this._draggingPredicate = (item) => item.isDragging();\n        /**\n         * Emits the `touchmove` or `mousemove` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerMove = new Subject();\n        /**\n         * Emits the `touchend` or `mouseup` events that are dispatched\n         * while the user is dragging a drag item instance.\n         */\n        this.pointerUp = new Subject();\n        /**\n         * Emits when the viewport has been scrolled while the user is dragging an item.\n         * @deprecated To be turned into a private member. Use the `scrolled` method instead.\n         * @breaking-change 13.0.0\n         */\n        this.scroll = new Subject();\n        /**\n         * Event listener that will prevent the default browser action while the user is dragging.\n         * @param event Event whose default action should be prevented.\n         */\n        this._preventDefaultWhileDragging = (event) => {\n            if (this._activeDragInstances.length > 0) {\n                event.preventDefault();\n            }\n        };\n        /** Event listener for `touchmove` that is bound even if no dragging is happening. */\n        this._persistentTouchmoveListener = (event) => {\n            if (this._activeDragInstances.length > 0) {\n                // Note that we only want to prevent the default action after dragging has actually started.\n                // Usually this is the same time at which the item is added to the `_activeDragInstances`,\n                // but it could be pushed back if the user has set up a drag delay or threshold.\n                if (this._activeDragInstances.some(this._draggingPredicate)) {\n                    event.preventDefault();\n                }\n                this.pointerMove.next(event);\n            }\n        };\n        this._document = _document;\n    }\n    /** Adds a drop container to the registry. */\n    registerDropContainer(drop) {\n        if (!this._dropInstances.has(drop)) {\n            this._dropInstances.add(drop);\n        }\n    }\n    /** Adds a drag item instance to the registry. */\n    registerDragItem(drag) {\n        this._dragInstances.add(drag);\n        // The `touchmove` event gets bound once, ahead of time, because WebKit\n        // won't preventDefault on a dynamically-added `touchmove` listener.\n        // See https://bugs.webkit.org/show_bug.cgi?id=184250.\n        if (this._dragInstances.size === 1) {\n            this._ngZone.runOutsideAngular(() => {\n                // The event handler has to be explicitly active,\n                // because newer browsers make it passive by default.\n                this._document.addEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n            });\n        }\n    }\n    /** Removes a drop container from the registry. */\n    removeDropContainer(drop) {\n        this._dropInstances.delete(drop);\n    }\n    /** Removes a drag item instance from the registry. */\n    removeDragItem(drag) {\n        this._dragInstances.delete(drag);\n        this.stopDragging(drag);\n        if (this._dragInstances.size === 0) {\n            this._document.removeEventListener('touchmove', this._persistentTouchmoveListener, activeCapturingEventOptions);\n        }\n    }\n    /**\n     * Starts the dragging sequence for a drag instance.\n     * @param drag Drag instance which is being dragged.\n     * @param event Event that initiated the dragging.\n     */\n    startDragging(drag, event) {\n        // Do not process the same drag twice to avoid memory leaks and redundant listeners\n        if (this._activeDragInstances.indexOf(drag) > -1) {\n            return;\n        }\n        this._activeDragInstances.push(drag);\n        if (this._activeDragInstances.length === 1) {\n            const isTouchEvent = event.type.startsWith('touch');\n            // We explicitly bind __active__ listeners here, because newer browsers will default to\n            // passive ones for `mousemove` and `touchmove`. The events need to be active, because we\n            // use `preventDefault` to prevent the page from scrolling while the user is dragging.\n            this._globalListeners\n                .set(isTouchEvent ? 'touchend' : 'mouseup', {\n                handler: (e) => this.pointerUp.next(e),\n                options: true,\n            })\n                .set('scroll', {\n                handler: (e) => this.scroll.next(e),\n                // Use capturing so that we pick up scroll changes in any scrollable nodes that aren't\n                // the document. See https://github.com/angular/components/issues/17144.\n                options: true,\n            })\n                // Preventing the default action on `mousemove` isn't enough to disable text selection\n                // on Safari so we need to prevent the selection event as well. Alternatively this can\n                // be done by setting `user-select: none` on the `body`, however it has causes a style\n                // recalculation which can be expensive on pages with a lot of elements.\n                .set('selectstart', {\n                handler: this._preventDefaultWhileDragging,\n                options: activeCapturingEventOptions,\n            });\n            // We don't have to bind a move event for touch drag sequences, because\n            // we already have a persistent global one bound from `registerDragItem`.\n            if (!isTouchEvent) {\n                this._globalListeners.set('mousemove', {\n                    handler: (e) => this.pointerMove.next(e),\n                    options: activeCapturingEventOptions,\n                });\n            }\n            this._ngZone.runOutsideAngular(() => {\n                this._globalListeners.forEach((config, name) => {\n                    this._document.addEventListener(name, config.handler, config.options);\n                });\n            });\n        }\n    }\n    /** Stops dragging a drag item instance. */\n    stopDragging(drag) {\n        const index = this._activeDragInstances.indexOf(drag);\n        if (index > -1) {\n            this._activeDragInstances.splice(index, 1);\n            if (this._activeDragInstances.length === 0) {\n                this._clearGlobalListeners();\n            }\n        }\n    }\n    /** Gets whether a drag item instance is currently being dragged. */\n    isDragging(drag) {\n        return this._activeDragInstances.indexOf(drag) > -1;\n    }\n    /**\n     * Gets a stream that will emit when any element on the page is scrolled while an item is being\n     * dragged.\n     * @param shadowRoot Optional shadow root that the current dragging sequence started from.\n     *   Top-level listeners won't pick up events coming from the shadow DOM so this parameter can\n     *   be used to include an additional top-level listener at the shadow root level.\n     */\n    scrolled(shadowRoot) {\n        const streams = [this.scroll];\n        if (shadowRoot && shadowRoot !== this._document) {\n            // Note that this is basically the same as `fromEvent` from rxjs, but we do it ourselves,\n            // because we want to guarantee that the event is bound outside of the `NgZone`. With\n            // `fromEvent` it'll only happen if the subscription is outside the `NgZone`.\n            streams.push(new Observable((observer) => {\n                return this._ngZone.runOutsideAngular(() => {\n                    const eventOptions = true;\n                    const callback = (event) => {\n                        if (this._activeDragInstances.length) {\n                            observer.next(event);\n                        }\n                    };\n                    shadowRoot.addEventListener('scroll', callback, eventOptions);\n                    return () => {\n                        shadowRoot.removeEventListener('scroll', callback, eventOptions);\n                    };\n                });\n            }));\n        }\n        return merge(...streams);\n    }\n    ngOnDestroy() {\n        this._dragInstances.forEach(instance => this.removeDragItem(instance));\n        this._dropInstances.forEach(instance => this.removeDropContainer(instance));\n        this._clearGlobalListeners();\n        this.pointerMove.complete();\n        this.pointerUp.complete();\n    }\n    /** Clears out the global event listeners from the `document`. */\n    _clearGlobalListeners() {\n        this._globalListeners.forEach((config, name) => {\n            this._document.removeEventListener(name, config.handler, config.options);\n        });\n        this._globalListeners.clear();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: DragDropRegistry, deps: [{ token: i0.NgZone }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: DragDropRegistry, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: DragDropRegistry, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }]; } });\n\n/** Default configuration to be used when creating a `DragRef`. */\nconst DEFAULT_CONFIG = {\n    dragStartThreshold: 5,\n    pointerDirectionChangeThreshold: 5,\n};\n/**\n * Service that allows for drag-and-drop functionality to be attached to DOM elements.\n */\nclass DragDrop {\n    constructor(_document, _ngZone, _viewportRuler, _dragDropRegistry) {\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._viewportRuler = _viewportRuler;\n        this._dragDropRegistry = _dragDropRegistry;\n    }\n    /**\n     * Turns an element into a draggable item.\n     * @param element Element to which to attach the dragging functionality.\n     * @param config Object used to configure the dragging behavior.\n     */\n    createDrag(element, config = DEFAULT_CONFIG) {\n        return new DragRef(element, config, this._document, this._ngZone, this._viewportRuler, this._dragDropRegistry);\n    }\n    /**\n     * Turns an element into a drop list.\n     * @param element Element to which to attach the drop list functionality.\n     */\n    createDropList(element) {\n        return new DropListRef(element, this._dragDropRegistry, this._document, this._ngZone, this._viewportRuler);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: DragDrop, deps: [{ token: DOCUMENT }, { token: i0.NgZone }, { token: i1.ViewportRuler }, { token: DragDropRegistry }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: DragDrop, providedIn: 'root' }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: DragDrop, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.NgZone }, { type: i1.ViewportRuler }, { type: DragDropRegistry }]; } });\n\n/**\n * Injection token that can be used for a `CdkDrag` to provide itself as a parent to the\n * drag-specific child directive (`CdkDragHandle`, `CdkDragPreview` etc.). Used primarily\n * to avoid circular imports.\n * @docs-private\n */\nconst CDK_DRAG_PARENT = new InjectionToken('CDK_DRAG_PARENT');\n\n/**\n * Injection token that can be used to reference instances of `CdkDropListGroup`. It serves as\n * alternative token to the actual `CdkDropListGroup` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST_GROUP = new InjectionToken('CdkDropListGroup');\n/**\n * Declaratively connects sibling `cdkDropList` instances together. All of the `cdkDropList`\n * elements that are placed inside a `cdkDropListGroup` will be connected to each other\n * automatically. Can be used as an alternative to the `cdkDropListConnectedTo` input\n * from `cdkDropList`.\n */\nclass CdkDropListGroup {\n    constructor() {\n        /** Drop lists registered inside the group. */\n        this._items = new Set();\n        this._disabled = false;\n    }\n    /** Whether starting a dragging sequence from inside this group is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    ngOnDestroy() {\n        this._items.clear();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkDropListGroup, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkDropListGroup, isStandalone: true, selector: \"[cdkDropListGroup]\", inputs: { disabled: [\"cdkDropListGroupDisabled\", \"disabled\"] }, providers: [{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }], exportAs: [\"cdkDropListGroup\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkDropListGroup, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDropListGroup]',\n                    exportAs: 'cdkDropListGroup',\n                    standalone: true,\n                    providers: [{ provide: CDK_DROP_LIST_GROUP, useExisting: CdkDropListGroup }],\n                }]\n        }], propDecorators: { disabled: [{\n                type: Input,\n                args: ['cdkDropListGroupDisabled']\n            }] } });\n\n/**\n * Injection token that can be used to configure the\n * behavior of the drag&drop-related components.\n */\nconst CDK_DRAG_CONFIG = new InjectionToken('CDK_DRAG_CONFIG');\n\n/**\n * Asserts that a particular node is an element.\n * @param node Node to be checked.\n * @param name Name to attach to the error message.\n */\nfunction assertElementNode(node, name) {\n    if (node.nodeType !== 1) {\n        throw Error(`${name} must be attached to an element node. ` + `Currently attached to \"${node.nodeName}\".`);\n    }\n}\n\n/** Counter used to generate unique ids for drop zones. */\nlet _uniqueIdCounter = 0;\n/**\n * Injection token that can be used to reference instances of `CdkDropList`. It serves as\n * alternative token to the actual `CdkDropList` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DROP_LIST = new InjectionToken('CdkDropList');\n/** Container that wraps a set of draggable items. */\nclass CdkDropList {\n    /** Keeps track of the drop lists that are currently on the page. */\n    static { this._dropLists = []; }\n    /** Whether starting a dragging sequence from this container is disabled. */\n    get disabled() {\n        return this._disabled || (!!this._group && this._group.disabled);\n    }\n    set disabled(value) {\n        // Usually we sync the directive and ref state right before dragging starts, in order to have\n        // a single point of failure and to avoid having to use setters for everything. `disabled` is\n        // a special case, because it can prevent the `beforeStarted` event from firing, which can lock\n        // the user in a disabled state, so we also need to sync it as it's being set.\n        this._dropListRef.disabled = this._disabled = coerceBooleanProperty(value);\n    }\n    constructor(\n    /** Element that the drop list is attached to. */\n    element, dragDrop, _changeDetectorRef, _scrollDispatcher, _dir, _group, config) {\n        this.element = element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._dir = _dir;\n        this._group = _group;\n        /** Emits when the list has been destroyed. */\n        this._destroyed = new Subject();\n        /**\n         * Other draggable containers that this container is connected to and into which the\n         * container's items can be transferred. Can either be references to other drop containers,\n         * or their unique IDs.\n         */\n        this.connectedTo = [];\n        /**\n         * Unique ID for the drop zone. Can be used as a reference\n         * in the `connectedTo` of another `CdkDropList`.\n         */\n        this.id = `cdk-drop-list-${_uniqueIdCounter++}`;\n        /**\n         * Function that is used to determine whether an item\n         * is allowed to be moved into a drop container.\n         */\n        this.enterPredicate = () => true;\n        /** Functions that is used to determine whether an item can be sorted into a particular index. */\n        this.sortPredicate = () => true;\n        /** Emits when the user drops an item inside the container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits when the user has moved a new drag item into this container.\n         */\n        this.entered = new EventEmitter();\n        /**\n         * Emits when the user removes an item from the container\n         * by dragging it into another container.\n         */\n        this.exited = new EventEmitter();\n        /** Emits as the user is swapping items while actively dragging. */\n        this.sorted = new EventEmitter();\n        /**\n         * Keeps track of the items that are registered with this container. Historically we used to\n         * do this with a `ContentChildren` query, however queries don't handle transplanted views very\n         * well which means that we can't handle cases like dragging the headers of a `mat-table`\n         * correctly. What we do instead is to have the items register themselves with the container\n         * and then we sort them based on their position in the DOM.\n         */\n        this._unsortedItems = new Set();\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            assertElementNode(element.nativeElement, 'cdkDropList');\n        }\n        this._dropListRef = dragDrop.createDropList(element);\n        this._dropListRef.data = this;\n        if (config) {\n            this._assignDefaults(config);\n        }\n        this._dropListRef.enterPredicate = (drag, drop) => {\n            return this.enterPredicate(drag.data, drop.data);\n        };\n        this._dropListRef.sortPredicate = (index, drag, drop) => {\n            return this.sortPredicate(index, drag.data, drop.data);\n        };\n        this._setupInputSyncSubscription(this._dropListRef);\n        this._handleEvents(this._dropListRef);\n        CdkDropList._dropLists.push(this);\n        if (_group) {\n            _group._items.add(this);\n        }\n    }\n    /** Registers an items with the drop list. */\n    addItem(item) {\n        this._unsortedItems.add(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Removes an item from the drop list. */\n    removeItem(item) {\n        this._unsortedItems.delete(item);\n        if (this._dropListRef.isDragging()) {\n            this._syncItemsWithRef();\n        }\n    }\n    /** Gets the registered items in the list, sorted by their position in the DOM. */\n    getSortedItems() {\n        return Array.from(this._unsortedItems).sort((a, b) => {\n            const documentPosition = a._dragRef\n                .getVisibleElement()\n                .compareDocumentPosition(b._dragRef.getVisibleElement());\n            // `compareDocumentPosition` returns a bitmask so we have to use a bitwise operator.\n            // https://developer.mozilla.org/en-US/docs/Web/API/Node/compareDocumentPosition\n            // tslint:disable-next-line:no-bitwise\n            return documentPosition & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : 1;\n        });\n    }\n    ngOnDestroy() {\n        const index = CdkDropList._dropLists.indexOf(this);\n        if (index > -1) {\n            CdkDropList._dropLists.splice(index, 1);\n        }\n        if (this._group) {\n            this._group._items.delete(this);\n        }\n        this._unsortedItems.clear();\n        this._dropListRef.dispose();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Syncs the inputs of the CdkDropList with the options of the underlying DropListRef. */\n    _setupInputSyncSubscription(ref) {\n        if (this._dir) {\n            this._dir.change\n                .pipe(startWith(this._dir.value), takeUntil(this._destroyed))\n                .subscribe(value => ref.withDirection(value));\n        }\n        ref.beforeStarted.subscribe(() => {\n            const siblings = coerceArray(this.connectedTo).map(drop => {\n                if (typeof drop === 'string') {\n                    const correspondingDropList = CdkDropList._dropLists.find(list => list.id === drop);\n                    if (!correspondingDropList && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                        console.warn(`CdkDropList could not find connected drop list with id \"${drop}\"`);\n                    }\n                    return correspondingDropList;\n                }\n                return drop;\n            });\n            if (this._group) {\n                this._group._items.forEach(drop => {\n                    if (siblings.indexOf(drop) === -1) {\n                        siblings.push(drop);\n                    }\n                });\n            }\n            // Note that we resolve the scrollable parents here so that we delay the resolution\n            // as long as possible, ensuring that the element is in its final place in the DOM.\n            if (!this._scrollableParentsResolved) {\n                const scrollableParents = this._scrollDispatcher\n                    .getAncestorScrollContainers(this.element)\n                    .map(scrollable => scrollable.getElementRef().nativeElement);\n                this._dropListRef.withScrollableParents(scrollableParents);\n                // Only do this once since it involves traversing the DOM and the parents\n                // shouldn't be able to change without the drop list being destroyed.\n                this._scrollableParentsResolved = true;\n            }\n            ref.disabled = this.disabled;\n            ref.lockAxis = this.lockAxis;\n            ref.sortingDisabled = coerceBooleanProperty(this.sortingDisabled);\n            ref.autoScrollDisabled = coerceBooleanProperty(this.autoScrollDisabled);\n            ref.autoScrollStep = coerceNumberProperty(this.autoScrollStep, 2);\n            ref\n                .connectedTo(siblings.filter(drop => drop && drop !== this).map(list => list._dropListRef))\n                .withOrientation(this.orientation);\n        });\n    }\n    /** Handles events from the underlying DropListRef. */\n    _handleEvents(ref) {\n        ref.beforeStarted.subscribe(() => {\n            this._syncItemsWithRef();\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(event => {\n            this.entered.emit({\n                container: this,\n                item: event.item.data,\n                currentIndex: event.currentIndex,\n            });\n        });\n        ref.exited.subscribe(event => {\n            this.exited.emit({\n                container: this,\n                item: event.item.data,\n            });\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.sorted.subscribe(event => {\n            this.sorted.emit({\n                previousIndex: event.previousIndex,\n                currentIndex: event.currentIndex,\n                container: this,\n                item: event.item.data,\n            });\n        });\n        ref.dropped.subscribe(dropEvent => {\n            this.dropped.emit({\n                previousIndex: dropEvent.previousIndex,\n                currentIndex: dropEvent.currentIndex,\n                previousContainer: dropEvent.previousContainer.data,\n                container: dropEvent.container.data,\n                item: dropEvent.item.data,\n                isPointerOverContainer: dropEvent.isPointerOverContainer,\n                distance: dropEvent.distance,\n                dropPoint: dropEvent.dropPoint,\n                event: dropEvent.event,\n            });\n            // Mark for check since all of these events run outside of change\n            // detection and we're not guaranteed for something else to have triggered it.\n            this._changeDetectorRef.markForCheck();\n        });\n        merge(ref.receivingStarted, ref.receivingStopped).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, draggingDisabled, sortingDisabled, listAutoScrollDisabled, listOrientation } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.sortingDisabled = sortingDisabled == null ? false : sortingDisabled;\n        this.autoScrollDisabled = listAutoScrollDisabled == null ? false : listAutoScrollDisabled;\n        this.orientation = listOrientation || 'vertical';\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n    }\n    /** Syncs up the registered drag items with underlying drop list ref. */\n    _syncItemsWithRef() {\n        this._dropListRef.withItems(this.getSortedItems().map(item => item._dragRef));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkDropList, deps: [{ token: i0.ElementRef }, { token: DragDrop }, { token: i0.ChangeDetectorRef }, { token: i1.ScrollDispatcher }, { token: i3.Directionality, optional: true }, { token: CDK_DROP_LIST_GROUP, optional: true, skipSelf: true }, { token: CDK_DRAG_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkDropList, isStandalone: true, selector: \"[cdkDropList], cdk-drop-list\", inputs: { connectedTo: [\"cdkDropListConnectedTo\", \"connectedTo\"], data: [\"cdkDropListData\", \"data\"], orientation: [\"cdkDropListOrientation\", \"orientation\"], id: \"id\", lockAxis: [\"cdkDropListLockAxis\", \"lockAxis\"], disabled: [\"cdkDropListDisabled\", \"disabled\"], sortingDisabled: [\"cdkDropListSortingDisabled\", \"sortingDisabled\"], enterPredicate: [\"cdkDropListEnterPredicate\", \"enterPredicate\"], sortPredicate: [\"cdkDropListSortPredicate\", \"sortPredicate\"], autoScrollDisabled: [\"cdkDropListAutoScrollDisabled\", \"autoScrollDisabled\"], autoScrollStep: [\"cdkDropListAutoScrollStep\", \"autoScrollStep\"] }, outputs: { dropped: \"cdkDropListDropped\", entered: \"cdkDropListEntered\", exited: \"cdkDropListExited\", sorted: \"cdkDropListSorted\" }, host: { properties: { \"attr.id\": \"id\", \"class.cdk-drop-list-disabled\": \"disabled\", \"class.cdk-drop-list-dragging\": \"_dropListRef.isDragging()\", \"class.cdk-drop-list-receiving\": \"_dropListRef.isReceiving()\" }, classAttribute: \"cdk-drop-list\" }, providers: [\n            // Prevent child drop lists from picking up the same group as their parent.\n            { provide: CDK_DROP_LIST_GROUP, useValue: undefined },\n            { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n        ], exportAs: [\"cdkDropList\"], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkDropList, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDropList], cdk-drop-list',\n                    exportAs: 'cdkDropList',\n                    standalone: true,\n                    providers: [\n                        // Prevent child drop lists from picking up the same group as their parent.\n                        { provide: CDK_DROP_LIST_GROUP, useValue: undefined },\n                        { provide: CDK_DROP_LIST, useExisting: CdkDropList },\n                    ],\n                    host: {\n                        'class': 'cdk-drop-list',\n                        '[attr.id]': 'id',\n                        '[class.cdk-drop-list-disabled]': 'disabled',\n                        '[class.cdk-drop-list-dragging]': '_dropListRef.isDragging()',\n                        '[class.cdk-drop-list-receiving]': '_dropListRef.isReceiving()',\n                    },\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: DragDrop }, { type: i0.ChangeDetectorRef }, { type: i1.ScrollDispatcher }, { type: i3.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: CdkDropListGroup, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CDK_DROP_LIST_GROUP]\n                }, {\n                    type: SkipSelf\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CDK_DRAG_CONFIG]\n                }] }]; }, propDecorators: { connectedTo: [{\n                type: Input,\n                args: ['cdkDropListConnectedTo']\n            }], data: [{\n                type: Input,\n                args: ['cdkDropListData']\n            }], orientation: [{\n                type: Input,\n                args: ['cdkDropListOrientation']\n            }], id: [{\n                type: Input\n            }], lockAxis: [{\n                type: Input,\n                args: ['cdkDropListLockAxis']\n            }], disabled: [{\n                type: Input,\n                args: ['cdkDropListDisabled']\n            }], sortingDisabled: [{\n                type: Input,\n                args: ['cdkDropListSortingDisabled']\n            }], enterPredicate: [{\n                type: Input,\n                args: ['cdkDropListEnterPredicate']\n            }], sortPredicate: [{\n                type: Input,\n                args: ['cdkDropListSortPredicate']\n            }], autoScrollDisabled: [{\n                type: Input,\n                args: ['cdkDropListAutoScrollDisabled']\n            }], autoScrollStep: [{\n                type: Input,\n                args: ['cdkDropListAutoScrollStep']\n            }], dropped: [{\n                type: Output,\n                args: ['cdkDropListDropped']\n            }], entered: [{\n                type: Output,\n                args: ['cdkDropListEntered']\n            }], exited: [{\n                type: Output,\n                args: ['cdkDropListExited']\n            }], sorted: [{\n                type: Output,\n                args: ['cdkDropListSorted']\n            }] } });\n\n/**\n * Injection token that can be used to reference instances of `CdkDragHandle`. It serves as\n * alternative token to the actual `CdkDragHandle` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_HANDLE = new InjectionToken('CdkDragHandle');\n/** Handle that can be used to drag a CdkDrag instance. */\nclass CdkDragHandle {\n    /** Whether starting to drag through this handle is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._stateChanges.next(this);\n    }\n    constructor(element, parentDrag) {\n        this.element = element;\n        /** Emits when the state of the handle has changed. */\n        this._stateChanges = new Subject();\n        this._disabled = false;\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            assertElementNode(element.nativeElement, 'cdkDragHandle');\n        }\n        this._parentDrag = parentDrag;\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkDragHandle, deps: [{ token: i0.ElementRef }, { token: CDK_DRAG_PARENT, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkDragHandle, isStandalone: true, selector: \"[cdkDragHandle]\", inputs: { disabled: [\"cdkDragHandleDisabled\", \"disabled\"] }, host: { classAttribute: \"cdk-drag-handle\" }, providers: [{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkDragHandle, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDragHandle]',\n                    standalone: true,\n                    host: {\n                        'class': 'cdk-drag-handle',\n                    },\n                    providers: [{ provide: CDK_DRAG_HANDLE, useExisting: CdkDragHandle }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_DRAG_PARENT]\n                }, {\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }]; }, propDecorators: { disabled: [{\n                type: Input,\n                args: ['cdkDragHandleDisabled']\n            }] } });\n\n/**\n * Injection token that can be used to reference instances of `CdkDragPlaceholder`. It serves as\n * alternative token to the actual `CdkDragPlaceholder` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PLACEHOLDER = new InjectionToken('CdkDragPlaceholder');\n/**\n * Element that will be used as a template for the placeholder of a CdkDrag when\n * it is being dragged. The placeholder is displayed in place of the element being dragged.\n */\nclass CdkDragPlaceholder {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkDragPlaceholder, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkDragPlaceholder, isStandalone: true, selector: \"ng-template[cdkDragPlaceholder]\", inputs: { data: \"data\" }, providers: [{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkDragPlaceholder, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[cdkDragPlaceholder]',\n                    standalone: true,\n                    providers: [{ provide: CDK_DRAG_PLACEHOLDER, useExisting: CdkDragPlaceholder }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; }, propDecorators: { data: [{\n                type: Input\n            }] } });\n\n/**\n * Injection token that can be used to reference instances of `CdkDragPreview`. It serves as\n * alternative token to the actual `CdkDragPreview` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst CDK_DRAG_PREVIEW = new InjectionToken('CdkDragPreview');\n/**\n * Element that will be used as a template for the preview\n * of a CdkDrag when it is being dragged.\n */\nclass CdkDragPreview {\n    /** Whether the preview should preserve the same size as the item that is being dragged. */\n    get matchSize() {\n        return this._matchSize;\n    }\n    set matchSize(value) {\n        this._matchSize = coerceBooleanProperty(value);\n    }\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._matchSize = false;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkDragPreview, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkDragPreview, isStandalone: true, selector: \"ng-template[cdkDragPreview]\", inputs: { data: \"data\", matchSize: \"matchSize\" }, providers: [{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkDragPreview, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[cdkDragPreview]',\n                    standalone: true,\n                    providers: [{ provide: CDK_DRAG_PREVIEW, useExisting: CdkDragPreview }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; }, propDecorators: { data: [{\n                type: Input\n            }], matchSize: [{\n                type: Input\n            }] } });\n\nconst DRAG_HOST_CLASS = 'cdk-drag';\n/** Element that can be moved inside a CdkDropList container. */\nclass CdkDrag {\n    static { this._dragInstances = []; }\n    /** Whether starting to drag this element is disabled. */\n    get disabled() {\n        return this._disabled || (this.dropContainer && this.dropContainer.disabled);\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._dragRef.disabled = this._disabled;\n    }\n    constructor(\n    /** Element that the draggable is attached to. */\n    element, \n    /** Droppable container that the draggable is a part of. */\n    dropContainer, \n    /**\n     * @deprecated `_document` parameter no longer being used and will be removed.\n     * @breaking-change 12.0.0\n     */\n    _document, _ngZone, _viewContainerRef, config, _dir, dragDrop, _changeDetectorRef, _selfHandle, _parentDrag) {\n        this.element = element;\n        this.dropContainer = dropContainer;\n        this._ngZone = _ngZone;\n        this._viewContainerRef = _viewContainerRef;\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._selfHandle = _selfHandle;\n        this._parentDrag = _parentDrag;\n        this._destroyed = new Subject();\n        /** Emits when the user starts dragging the item. */\n        this.started = new EventEmitter();\n        /** Emits when the user has released a drag item, before any animations have started. */\n        this.released = new EventEmitter();\n        /** Emits when the user stops dragging an item in the container. */\n        this.ended = new EventEmitter();\n        /** Emits when the user has moved the item into a new container. */\n        this.entered = new EventEmitter();\n        /** Emits when the user removes the item its container by dragging it into another container. */\n        this.exited = new EventEmitter();\n        /** Emits when the user drops the item inside a container. */\n        this.dropped = new EventEmitter();\n        /**\n         * Emits as the user is dragging the item. Use with caution,\n         * because this event will fire for every pixel that the user has dragged.\n         */\n        this.moved = new Observable((observer) => {\n            const subscription = this._dragRef.moved\n                .pipe(map(movedEvent => ({\n                source: this,\n                pointerPosition: movedEvent.pointerPosition,\n                event: movedEvent.event,\n                delta: movedEvent.delta,\n                distance: movedEvent.distance,\n            })))\n                .subscribe(observer);\n            return () => {\n                subscription.unsubscribe();\n            };\n        });\n        this._dragRef = dragDrop.createDrag(element, {\n            dragStartThreshold: config && config.dragStartThreshold != null ? config.dragStartThreshold : 5,\n            pointerDirectionChangeThreshold: config && config.pointerDirectionChangeThreshold != null\n                ? config.pointerDirectionChangeThreshold\n                : 5,\n            zIndex: config?.zIndex,\n        });\n        this._dragRef.data = this;\n        // We have to keep track of the drag instances in order to be able to match an element to\n        // a drag instance. We can't go through the global registry of `DragRef`, because the root\n        // element could be different.\n        CdkDrag._dragInstances.push(this);\n        if (config) {\n            this._assignDefaults(config);\n        }\n        // Note that usually the container is assigned when the drop list is picks up the item, but in\n        // some cases (mainly transplanted views with OnPush, see #18341) we may end up in a situation\n        // where there are no items on the first change detection pass, but the items get picked up as\n        // soon as the user triggers another pass by dragging. This is a problem, because the item would\n        // have to switch from standalone mode to drag mode in the middle of the dragging sequence which\n        // is too late since the two modes save different kinds of information. We work around it by\n        // assigning the drop container both from here and the list.\n        if (dropContainer) {\n            this._dragRef._withDropContainer(dropContainer._dropListRef);\n            dropContainer.addItem(this);\n        }\n        this._syncInputs(this._dragRef);\n        this._handleEvents(this._dragRef);\n    }\n    /**\n     * Returns the element that is being used as a placeholder\n     * while the current element is being dragged.\n     */\n    getPlaceholderElement() {\n        return this._dragRef.getPlaceholderElement();\n    }\n    /** Returns the root draggable element. */\n    getRootElement() {\n        return this._dragRef.getRootElement();\n    }\n    /** Resets a standalone drag item to its initial position. */\n    reset() {\n        this._dragRef.reset();\n    }\n    /**\n     * Gets the pixel coordinates of the draggable outside of a drop container.\n     */\n    getFreeDragPosition() {\n        return this._dragRef.getFreeDragPosition();\n    }\n    /**\n     * Sets the current position in pixels the draggable outside of a drop container.\n     * @param value New position to be set.\n     */\n    setFreeDragPosition(value) {\n        this._dragRef.setFreeDragPosition(value);\n    }\n    ngAfterViewInit() {\n        // Normally this isn't in the zone, but it can cause major performance regressions for apps\n        // using `zone-patch-rxjs` because it'll trigger a change detection when it unsubscribes.\n        this._ngZone.runOutsideAngular(() => {\n            // We need to wait for the zone to stabilize, in order for the reference\n            // element to be in the proper place in the DOM. This is mostly relevant\n            // for draggable elements inside portals since they get stamped out in\n            // their original DOM position and then they get transferred to the portal.\n            this._ngZone.onStable.pipe(take(1), takeUntil(this._destroyed)).subscribe(() => {\n                this._updateRootElement();\n                this._setupHandlesListener();\n                if (this.freeDragPosition) {\n                    this._dragRef.setFreeDragPosition(this.freeDragPosition);\n                }\n            });\n        });\n    }\n    ngOnChanges(changes) {\n        const rootSelectorChange = changes['rootElementSelector'];\n        const positionChange = changes['freeDragPosition'];\n        // We don't have to react to the first change since it's being\n        // handled in `ngAfterViewInit` where it needs to be deferred.\n        if (rootSelectorChange && !rootSelectorChange.firstChange) {\n            this._updateRootElement();\n        }\n        // Skip the first change since it's being handled in `ngAfterViewInit`.\n        if (positionChange && !positionChange.firstChange && this.freeDragPosition) {\n            this._dragRef.setFreeDragPosition(this.freeDragPosition);\n        }\n    }\n    ngOnDestroy() {\n        if (this.dropContainer) {\n            this.dropContainer.removeItem(this);\n        }\n        const index = CdkDrag._dragInstances.indexOf(this);\n        if (index > -1) {\n            CdkDrag._dragInstances.splice(index, 1);\n        }\n        // Unnecessary in most cases, but used to avoid extra change detections with `zone-paths-rxjs`.\n        this._ngZone.runOutsideAngular(() => {\n            this._destroyed.next();\n            this._destroyed.complete();\n            this._dragRef.dispose();\n        });\n    }\n    /** Syncs the root element with the `DragRef`. */\n    _updateRootElement() {\n        const element = this.element.nativeElement;\n        let rootElement = element;\n        if (this.rootElementSelector) {\n            rootElement =\n                element.closest !== undefined\n                    ? element.closest(this.rootElementSelector)\n                    : // Comment tag doesn't have closest method, so use parent's one.\n                        element.parentElement?.closest(this.rootElementSelector);\n        }\n        if (rootElement && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            assertElementNode(rootElement, 'cdkDrag');\n        }\n        this._dragRef.withRootElement(rootElement || element);\n    }\n    /** Gets the boundary element, based on the `boundaryElement` value. */\n    _getBoundaryElement() {\n        const boundary = this.boundaryElement;\n        if (!boundary) {\n            return null;\n        }\n        if (typeof boundary === 'string') {\n            return this.element.nativeElement.closest(boundary);\n        }\n        return coerceElement(boundary);\n    }\n    /** Syncs the inputs of the CdkDrag with the options of the underlying DragRef. */\n    _syncInputs(ref) {\n        ref.beforeStarted.subscribe(() => {\n            if (!ref.isDragging()) {\n                const dir = this._dir;\n                const dragStartDelay = this.dragStartDelay;\n                const placeholder = this._placeholderTemplate\n                    ? {\n                        template: this._placeholderTemplate.templateRef,\n                        context: this._placeholderTemplate.data,\n                        viewContainer: this._viewContainerRef,\n                    }\n                    : null;\n                const preview = this._previewTemplate\n                    ? {\n                        template: this._previewTemplate.templateRef,\n                        context: this._previewTemplate.data,\n                        matchSize: this._previewTemplate.matchSize,\n                        viewContainer: this._viewContainerRef,\n                    }\n                    : null;\n                ref.disabled = this.disabled;\n                ref.lockAxis = this.lockAxis;\n                ref.dragStartDelay =\n                    typeof dragStartDelay === 'object' && dragStartDelay\n                        ? dragStartDelay\n                        : coerceNumberProperty(dragStartDelay);\n                ref.constrainPosition = this.constrainPosition;\n                ref.previewClass = this.previewClass;\n                ref\n                    .withBoundaryElement(this._getBoundaryElement())\n                    .withPlaceholderTemplate(placeholder)\n                    .withPreviewTemplate(preview)\n                    .withPreviewContainer(this.previewContainer || 'global');\n                if (dir) {\n                    ref.withDirection(dir.value);\n                }\n            }\n        });\n        // This only needs to be resolved once.\n        ref.beforeStarted.pipe(take(1)).subscribe(() => {\n            // If we managed to resolve a parent through DI, use it.\n            if (this._parentDrag) {\n                ref.withParent(this._parentDrag._dragRef);\n                return;\n            }\n            // Otherwise fall back to resolving the parent by looking up the DOM. This can happen if\n            // the item was projected into another item by something like `ngTemplateOutlet`.\n            let parent = this.element.nativeElement.parentElement;\n            while (parent) {\n                if (parent.classList.contains(DRAG_HOST_CLASS)) {\n                    ref.withParent(CdkDrag._dragInstances.find(drag => {\n                        return drag.element.nativeElement === parent;\n                    })?._dragRef || null);\n                    break;\n                }\n                parent = parent.parentElement;\n            }\n        });\n    }\n    /** Handles the events from the underlying `DragRef`. */\n    _handleEvents(ref) {\n        ref.started.subscribe(startEvent => {\n            this.started.emit({ source: this, event: startEvent.event });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.released.subscribe(releaseEvent => {\n            this.released.emit({ source: this, event: releaseEvent.event });\n        });\n        ref.ended.subscribe(endEvent => {\n            this.ended.emit({\n                source: this,\n                distance: endEvent.distance,\n                dropPoint: endEvent.dropPoint,\n                event: endEvent.event,\n            });\n            // Since all of these events run outside of change detection,\n            // we need to ensure that everything is marked correctly.\n            this._changeDetectorRef.markForCheck();\n        });\n        ref.entered.subscribe(enterEvent => {\n            this.entered.emit({\n                container: enterEvent.container.data,\n                item: this,\n                currentIndex: enterEvent.currentIndex,\n            });\n        });\n        ref.exited.subscribe(exitEvent => {\n            this.exited.emit({\n                container: exitEvent.container.data,\n                item: this,\n            });\n        });\n        ref.dropped.subscribe(dropEvent => {\n            this.dropped.emit({\n                previousIndex: dropEvent.previousIndex,\n                currentIndex: dropEvent.currentIndex,\n                previousContainer: dropEvent.previousContainer.data,\n                container: dropEvent.container.data,\n                isPointerOverContainer: dropEvent.isPointerOverContainer,\n                item: this,\n                distance: dropEvent.distance,\n                dropPoint: dropEvent.dropPoint,\n                event: dropEvent.event,\n            });\n        });\n    }\n    /** Assigns the default input values based on a provided config object. */\n    _assignDefaults(config) {\n        const { lockAxis, dragStartDelay, constrainPosition, previewClass, boundaryElement, draggingDisabled, rootElementSelector, previewContainer, } = config;\n        this.disabled = draggingDisabled == null ? false : draggingDisabled;\n        this.dragStartDelay = dragStartDelay || 0;\n        if (lockAxis) {\n            this.lockAxis = lockAxis;\n        }\n        if (constrainPosition) {\n            this.constrainPosition = constrainPosition;\n        }\n        if (previewClass) {\n            this.previewClass = previewClass;\n        }\n        if (boundaryElement) {\n            this.boundaryElement = boundaryElement;\n        }\n        if (rootElementSelector) {\n            this.rootElementSelector = rootElementSelector;\n        }\n        if (previewContainer) {\n            this.previewContainer = previewContainer;\n        }\n    }\n    /** Sets up the listener that syncs the handles with the drag ref. */\n    _setupHandlesListener() {\n        // Listen for any newly-added handles.\n        this._handles.changes\n            .pipe(startWith(this._handles), \n        // Sync the new handles with the DragRef.\n        tap((handles) => {\n            const childHandleElements = handles\n                .filter(handle => handle._parentDrag === this)\n                .map(handle => handle.element);\n            // Usually handles are only allowed to be a descendant of the drag element, but if\n            // the consumer defined a different drag root, we should allow the drag element\n            // itself to be a handle too.\n            if (this._selfHandle && this.rootElementSelector) {\n                childHandleElements.push(this.element);\n            }\n            this._dragRef.withHandles(childHandleElements);\n        }), \n        // Listen if the state of any of the handles changes.\n        switchMap((handles) => {\n            return merge(...handles.map(item => {\n                return item._stateChanges.pipe(startWith(item));\n            }));\n        }), takeUntil(this._destroyed))\n            .subscribe(handleInstance => {\n            // Enabled/disable the handle that changed in the DragRef.\n            const dragRef = this._dragRef;\n            const handle = handleInstance.element.nativeElement;\n            handleInstance.disabled ? dragRef.disableHandle(handle) : dragRef.enableHandle(handle);\n        });\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkDrag, deps: [{ token: i0.ElementRef }, { token: CDK_DROP_LIST, optional: true, skipSelf: true }, { token: DOCUMENT }, { token: i0.NgZone }, { token: i0.ViewContainerRef }, { token: CDK_DRAG_CONFIG, optional: true }, { token: i3.Directionality, optional: true }, { token: DragDrop }, { token: i0.ChangeDetectorRef }, { token: CDK_DRAG_HANDLE, optional: true, self: true }, { token: CDK_DRAG_PARENT, optional: true, skipSelf: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"16.0.0\", type: CdkDrag, isStandalone: true, selector: \"[cdkDrag]\", inputs: { data: [\"cdkDragData\", \"data\"], lockAxis: [\"cdkDragLockAxis\", \"lockAxis\"], rootElementSelector: [\"cdkDragRootElement\", \"rootElementSelector\"], boundaryElement: [\"cdkDragBoundary\", \"boundaryElement\"], dragStartDelay: [\"cdkDragStartDelay\", \"dragStartDelay\"], freeDragPosition: [\"cdkDragFreeDragPosition\", \"freeDragPosition\"], disabled: [\"cdkDragDisabled\", \"disabled\"], constrainPosition: [\"cdkDragConstrainPosition\", \"constrainPosition\"], previewClass: [\"cdkDragPreviewClass\", \"previewClass\"], previewContainer: [\"cdkDragPreviewContainer\", \"previewContainer\"] }, outputs: { started: \"cdkDragStarted\", released: \"cdkDragReleased\", ended: \"cdkDragEnded\", entered: \"cdkDragEntered\", exited: \"cdkDragExited\", dropped: \"cdkDragDropped\", moved: \"cdkDragMoved\" }, host: { properties: { \"class.cdk-drag-disabled\": \"disabled\", \"class.cdk-drag-dragging\": \"_dragRef.isDragging()\" }, classAttribute: \"cdk-drag\" }, providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }], queries: [{ propertyName: \"_previewTemplate\", first: true, predicate: CDK_DRAG_PREVIEW, descendants: true }, { propertyName: \"_placeholderTemplate\", first: true, predicate: CDK_DRAG_PLACEHOLDER, descendants: true }, { propertyName: \"_handles\", predicate: CDK_DRAG_HANDLE, descendants: true }], exportAs: [\"cdkDrag\"], usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: CdkDrag, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkDrag]',\n                    exportAs: 'cdkDrag',\n                    standalone: true,\n                    host: {\n                        'class': DRAG_HOST_CLASS,\n                        '[class.cdk-drag-disabled]': 'disabled',\n                        '[class.cdk-drag-dragging]': '_dragRef.isDragging()',\n                    },\n                    providers: [{ provide: CDK_DRAG_PARENT, useExisting: CdkDrag }],\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_DROP_LIST]\n                }, {\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.NgZone }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [CDK_DRAG_CONFIG]\n                }] }, { type: i3.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: DragDrop }, { type: i0.ChangeDetectorRef }, { type: CdkDragHandle, decorators: [{\n                    type: Optional\n                }, {\n                    type: Self\n                }, {\n                    type: Inject,\n                    args: [CDK_DRAG_HANDLE]\n                }] }, { type: CdkDrag, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }, {\n                    type: Inject,\n                    args: [CDK_DRAG_PARENT]\n                }] }]; }, propDecorators: { _handles: [{\n                type: ContentChildren,\n                args: [CDK_DRAG_HANDLE, { descendants: true }]\n            }], _previewTemplate: [{\n                type: ContentChild,\n                args: [CDK_DRAG_PREVIEW]\n            }], _placeholderTemplate: [{\n                type: ContentChild,\n                args: [CDK_DRAG_PLACEHOLDER]\n            }], data: [{\n                type: Input,\n                args: ['cdkDragData']\n            }], lockAxis: [{\n                type: Input,\n                args: ['cdkDragLockAxis']\n            }], rootElementSelector: [{\n                type: Input,\n                args: ['cdkDragRootElement']\n            }], boundaryElement: [{\n                type: Input,\n                args: ['cdkDragBoundary']\n            }], dragStartDelay: [{\n                type: Input,\n                args: ['cdkDragStartDelay']\n            }], freeDragPosition: [{\n                type: Input,\n                args: ['cdkDragFreeDragPosition']\n            }], disabled: [{\n                type: Input,\n                args: ['cdkDragDisabled']\n            }], constrainPosition: [{\n                type: Input,\n                args: ['cdkDragConstrainPosition']\n            }], previewClass: [{\n                type: Input,\n                args: ['cdkDragPreviewClass']\n            }], previewContainer: [{\n                type: Input,\n                args: ['cdkDragPreviewContainer']\n            }], started: [{\n                type: Output,\n                args: ['cdkDragStarted']\n            }], released: [{\n                type: Output,\n                args: ['cdkDragReleased']\n            }], ended: [{\n                type: Output,\n                args: ['cdkDragEnded']\n            }], entered: [{\n                type: Output,\n                args: ['cdkDragEntered']\n            }], exited: [{\n                type: Output,\n                args: ['cdkDragExited']\n            }], dropped: [{\n                type: Output,\n                args: ['cdkDragDropped']\n            }], moved: [{\n                type: Output,\n                args: ['cdkDragMoved']\n            }] } });\n\nconst DRAG_DROP_DIRECTIVES = [\n    CdkDropList,\n    CdkDropListGroup,\n    CdkDrag,\n    CdkDragHandle,\n    CdkDragPreview,\n    CdkDragPlaceholder,\n];\nclass DragDropModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: DragDropModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: DragDropModule, imports: [CdkDropList,\n            CdkDropListGroup,\n            CdkDrag,\n            CdkDragHandle,\n            CdkDragPreview,\n            CdkDragPlaceholder], exports: [CdkScrollableModule, CdkDropList,\n            CdkDropListGroup,\n            CdkDrag,\n            CdkDragHandle,\n            CdkDragPreview,\n            CdkDragPlaceholder] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: DragDropModule, providers: [DragDrop], imports: [CdkScrollableModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: DragDropModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: DRAG_DROP_DIRECTIVES,\n                    exports: [CdkScrollableModule, ...DRAG_DROP_DIRECTIVES],\n                    providers: [DragDrop],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_DRAG_CONFIG, CDK_DRAG_HANDLE, CDK_DRAG_PARENT, CDK_DRAG_PLACEHOLDER, CDK_DRAG_PREVIEW, CDK_DROP_LIST, CDK_DROP_LIST_GROUP, CdkDrag, CdkDragHandle, CdkDragPlaceholder, CdkDragPreview, CdkDropList, CdkDropListGroup, DragDrop, DragDropModule, DragDropRegistry, DragRef, DropListRef, copyArrayItem, moveItemInArray, transferArrayItem };\n"],"names":["animate","style","transition","trigger","fadeInUpAnimation","duration","transform","opacity","fadeInUp400ms","animateChild","query","stagger","staggerAnimation","timing","optional","stagger80ms","stagger60ms","stagger40ms","stagger20ms","BreadcrumbComponent","constructor","ngOnInit","selectors","hostAttrs","ngContentSelectors","_c0","decls","vars","template","BreadcrumbComponent_Template","rf","ctx","i0","ɵɵprojection","trackByValue","ɵɵelementContainerStart","ɵɵelement","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelementContainerEnd","ɵɵadvance","ɵɵproperty","ɵɵpureFunction0","ɵɵtextInterpolate","crumb_r1","BreadcrumbsComponent","crumbs","inputs","consts","BreadcrumbsComponent_Template","ɵɵtemplate","BreadcrumbsComponent_ng_container_4_Template","_c1","CommonModule","RouterModule","MatIconModule","BreadcrumbsModule","declarations","imports","exports","map","ctx_r0","current","SecondaryToolbarComponent","configService","fixed$","config$","pipe","config","toolbar","fixed","isVerticalLayout$","select","layout","ɵɵdirectiveInject","i1","ConfigService","SecondaryToolbarComponent_Template","SecondaryToolbarComponent_h1_7_Template","ɵɵpureFunction2","ɵɵpipeBind1","ɵɵclassProp","MatButtonModule","SecondaryToolbarModule","DateTokensPipe","DateTokensModule","value","args","Error","toFormat","pure","MAT_DIALOG_DATA","UntypedFormControl","scrumboardLabels","scrumboardUsers","DateTime","user_r10","name","imageSrc","ɵɵsanitizeUrl","user_r11","label_r12","bgClass","textClass","ɵɵtextInterpolate1","label","label_r13","attachment_r15","path","extension","ScrumboardDialogComponent_div_53_div_1_div_1_Template","ScrumboardDialogComponent_div_53_div_1_div_2_Template","ScrumboardDialogComponent_div_53_div_1_mat_icon_7_Template","ctx_r14","isImageExtension","isCover","size","ɵɵpureFunction1","_r8","ScrumboardDialogComponent_div_53_div_1_Template","ctx_r6","form","get","comment_r21","from","date","message","ɵɵlistener","ScrumboardDialogComponent_ng_template_69_Template_button_click_0_listener","restoredCtx","ɵɵrestoreView","_r24","attachment_r22","attachment","ctx_r23","ɵɵnextContext","ɵɵresetView","makeCover","ScrumboardDialogComponent_ng_template_69_Template_button_click_4_listener","ctx_r25","remove","ScrumboardDialogComponent","dialogRef","data","fb","group","title","description","dueDate","cover","attachments","array","comments","users","labels","commentCtrl","list","board","card","patchValue","setControl","save","close","setValue","id","filter","a","addComment","push","local","minus","seconds","MatDialogRef","i2","UntypedFormBuilder","ScrumboardDialogComponent_Template","ScrumboardDialogComponent_Template_form_ngSubmit_0_listener","ScrumboardDialogComponent_img_18_Template","ScrumboardDialogComponent_Template_div_click_19_listener","_r26","_r1","ɵɵreference","open","ScrumboardDialogComponent_mat_option_23_Template","ScrumboardDialogComponent_div_30_Template","ScrumboardDialogComponent_Template_div_click_31_listener","_r4","ScrumboardDialogComponent_mat_option_35_Template","ScrumboardDialogComponent_div_53_Template","ScrumboardDialogComponent_div_60_Template","ScrumboardDialogComponent_Template_button_click_65_listener","ScrumboardDialogComponent_ng_template_69_Template","length","MatDialogModule","ReactiveFormsModule","MatTooltipModule","MatSelectModule","MatInputModule","MatMenuModule","MatDividerModule","RelativeDateTimeModule","ScrumboardDialogModule","QuicklinkModule","ScrumboardComponent","routes","redirectTo","pathMatch","component","scrollDisabled","containerEnabled","ScrumboardRoutingModule","forChild","moveItemInArray","transferArrayItem","trackById","scrumboards","ScrumboardComponent_div_0_div_5_img_1_Template","ctx_r4","card_r16","label_r22","ScrumboardComponent_div_0_div_8_div_6_div_3_div_1_Template","done","ɵɵpipeBind2","user_r32","ScrumboardComponent_div_0_div_8_div_6_div_6_div_4_img_1_Template","ScrumboardComponent_div_0_div_8_div_6_div_6_div_1_Template","ScrumboardComponent_div_0_div_8_div_6_div_6_div_2_Template","ScrumboardComponent_div_0_div_8_div_6_div_6_div_3_Template","ScrumboardComponent_div_0_div_8_div_6_div_6_div_4_Template","ScrumboardComponent_div_0_div_8_div_6_Template_div_click_0_listener","_r37","$implicit","list_r11","board_r1","ngIf","ctx_r35","ScrumboardComponent_div_0_div_8_div_6_div_1_Template","ScrumboardComponent_div_0_div_8_div_6_div_3_Template","ScrumboardComponent_div_0_div_8_div_6_div_6_Template","ScrumboardComponent_div_0_div_8_ng_template_9_Template_button_click_5_listener","_r42","close_r39","ctx_r40","createCard","ctx_r15","addCardCtrl","ScrumboardComponent_div_0_div_8_Template_div_cdkDropListDropped_5_listener","$event","_r44","ctx_r43","drop","ScrumboardComponent_div_0_div_8_div_6_Template","ScrumboardComponent_div_0_div_8_ng_template_9_Template","ɵɵtemplateRefExtractor","ScrumboardComponent_div_0_div_8_Template_button_click_11_listener","_r14","_r13","ctx_r45","openAddCard","undefined","ɵɵpropertyInterpolate","ctx_r5","getConnectedList","children","ScrumboardComponent_div_0_ng_template_11_Template_button_click_6_listener","_r49","close_r47","ScrumboardComponent_div_0_ng_template_11_Template_button_click_8_listener","ctx_r50","createList","ctx_r8","addListCtrl","ScrumboardComponent_div_0_Template_button_click_2_listener","_r53","ctx_r52","toggleStar","ScrumboardComponent_div_0_mat_icon_3_Template","ScrumboardComponent_div_0_mat_icon_4_Template","ScrumboardComponent_div_0_div_5_Template","ScrumboardComponent_div_0_Template_div_cdkDropListDropped_6_listener","ctx_r54","dropList","ScrumboardComponent_div_0_div_8_Template","ScrumboardComponent_div_0_ng_template_11_Template","ScrumboardComponent_div_0_Template_button_click_13_listener","_r7","_r6","ctx_r55","openAddList","starred","dialog","route","popover","board$","paramMap","scrumboardId","find","width","maxWidth","disableClose","beforeClosed","Boolean","subscribe","index","findIndex","child","event","previousContainer","container","previousIndex","currentIndex","x","content","origin","position","originX","originY","overlayX","overlayY","nextId","MatDialog","ActivatedRoute","i3","PopoverService","i4","ScrumboardComponent_Template","ScrumboardComponent_div_0_Template","ScrollbarModule","DragDropModule","PopoverModule","ScrumboardModule","scrumboardAttachments","scrumboardComments","days","minutes","hour","plus","Injectable","Inject","InjectionToken","Directive","Input","EventEmitter","Optional","SkipSelf","Output","Self","ContentChildren","ContentChild","NgModule","DOCUMENT","CdkScrollableModule","_getEventTarget","normalizePassiveListenerOptions","_getShadowRoot","coerceBooleanProperty","coerceElement","coerceArray","coerceNumberProperty","isFakeTouchstartFromScreenReader","isFakeMousedownFromScreenReader","Subject","Subscription","interval","animationFrameScheduler","Observable","merge","takeUntil","startWith","take","tap","switchMap","extendStyles","dest","source","importantProperties","key","hasOwnProperty","setProperty","has","removeProperty","toggleNativeDragInteractions","element","enable","userSelect","toggleVisibility","top","left","combineTransforms","initialTransform","parseCssTimeUnitsToMs","multiplier","toLowerCase","indexOf","parseFloat","getTransformTransitionDurationInMs","computedStyle","getComputedStyle","transitionedProperties","parseCssPropertyValue","property","prop","propertyIndex","rawDurations","rawDelays","getPropertyValue","split","part","trim","getMutableClientRect","clientRect","getBoundingClientRect","right","bottom","height","y","isInsideClientRect","adjustClientRect","isPointerNearClientRect","rect","threshold","pointerX","pointerY","xThreshold","yThreshold","ParentPositionTracker","_document","positions","Map","clear","cache","elements","set","scrollPosition","getViewportScrollPosition","forEach","scrollTop","scrollLeft","handleScroll","target","cachedPosition","newTop","newLeft","viewportScrollPosition","topDifference","leftDifference","node","contains","window","scrollY","scrollX","deepCloneNode","clone","cloneNode","descendantsWithId","querySelectorAll","nodeName","removeAttribute","i","transferCanvasData","transferInputData","transferData","selector","callback","descendantElements","cloneElements","cloneUniqueId","type","context","getContext","drawImage","passiveEventListenerOptions","passive","activeEventListenerOptions","MOUSE_EVENT_IGNORE_TIME","dragImportantProperties","Set","DragRef","disabled","_disabled","_dropContainer","newValue","_toggleNativeDragInteractions","_handles","handle","_config","_ngZone","_viewportRuler","_dragDropRegistry","_passiveTransform","_activeTransform","_hasStartedDragging","_moveEvents","_pointerMoveSubscription","EMPTY","_pointerUpSubscription","_scrollSubscription","_resizeSubscription","_boundaryElement","_nativeInteractionsEnabled","_disabledHandles","_direction","dragStartDelay","beforeStarted","started","released","ended","entered","exited","dropped","moved","_pointerDown","next","targetHandle","_getTargetHandle","_initializeDragSequence","_rootElement","_pointerMove","pointerPosition","_getPointerPositionOnPage","distanceX","Math","abs","_pickupPositionOnPage","distanceY","isOverThreshold","dragStartThreshold","isDelayElapsed","Date","now","_dragStartTime","_getDragStartDelay","_endDragSequence","isDragging","isReceiving","preventDefault","run","_startDragSequence","constrainedPointerPosition","_getConstrainedPointerPosition","_hasMoved","_lastKnownPointerPosition","_updatePointerDirectionDelta","_updateActiveDropContainer","offset","constrainPosition","_initialClientRect","activeTransform","_applyRootElementTransform","observers","distance","_getDragDistance","delta","_pointerDirectionDelta","_pointerUp","_nativeDragStart","withRootElement","withParent","parentDragRef","_parentPositions","registerDragItem","getPlaceholderElement","_placeholder","getRootElement","getVisibleElement","withHandles","handles","disabledHandles","add","withPreviewTemplate","_previewTemplate","withPlaceholderTemplate","_placeholderTemplate","rootElement","_removeRootElementListeners","runOutsideAngular","addEventListener","_initialTransform","SVGElement","_ownerSVGElement","ownerSVGElement","withBoundaryElement","boundaryElement","unsubscribe","change","_containInsideBoundaryOnResize","parent","_parentDragRef","dispose","_anchor","_destroyPreview","_destroyPlaceholder","removeDragItem","_removeSubscriptions","complete","reset","disableHandle","enableHandle","delete","withDirection","direction","_withDropContainer","getFreeDragPosition","setFreeDragPosition","withPreviewContainer","_previewContainer","_sortFromLastPointerPosition","_preview","_previewRef","destroy","_placeholderRef","stopDragging","webkitTapHighlightColor","_rootElementTapHighlight","_stopScrolling","_animatePreviewToPlaceholder","then","_cleanupDragArtifacts","_cleanupCachedDimensions","dropPoint","isTouchEvent","_lastTouchEventTime","dropContainer","parentNode","placeholder","_createPlaceholderElement","anchor","createComment","shadowRoot","insertBefore","_createPreviewElement","body","appendChild","replaceChild","_getPreviewInsertionPoint","start","_initialContainer","_initialIndex","getItemIndex","getScrollableParents","referenceElement","stopPropagation","isTouchSequence","isAuxiliaryMouseButton","button","isSyntheticEvent","isFakeEvent","draggable","rootStyles","pointerMove","pointerUp","scrolled","scrollEvent","_updateOnScroll","_boundaryRect","previewTemplate","_pickupPositionInElement","matchSize","_getPointerPositionInElement","_pointerPositionAtLastDirectionChange","startDragging","_previewRect","isPointerOverContainer","_isOverContainer","item","rawX","rawY","newContainer","_getSiblingContainerFromPosition","exit","enter","sortingDisabled","_startScrollingIfNecessary","_sortItem","_applyPreviewTransform","previewConfig","previewClass","preview","rootRect","viewRef","viewContainer","createEmbeddedView","detectChanges","getRootNode","matchElementSize","getTransform","zIndex","classList","setAttribute","Array","isArray","className","Promise","resolve","placeholderRect","handler","propertyName","removeEventListener","clearTimeout","timeout","setTimeout","placeholderConfig","placeholderTemplate","pointerEvents","elementRect","handleElement","referenceRect","point","targetTouches","_getViewportScrollPosition","pageX","pageY","touches","changedTouches","svgMatrix","getScreenCTM","svgPoint","createSVGPoint","matrixTransform","inverse","dropContainerLock","lockAxis","pickupX","pickupY","boundaryRect","previewWidth","previewHeight","_getPreviewRect","minY","maxY","minX","maxX","clamp$1","pointerPositionOnPage","positionSinceLastChange","changeX","changeY","pointerDirectionChangeThreshold","shouldEnable","styles","currentPosition","pickupPosition","leftOverflow","rightOverflow","topOverflow","bottomOverflow","touch","mouse","scrollDifference","_cachedShadowRoot","initialParent","previewContainer","documentRef","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","round","min","max","rootNodes","nodeType","ELEMENT_NODE","wrapper","createElement","sourceRect","fromIndex","toIndex","clamp","to","currentArray","targetArray","targetIndex","splice","copyArrayItem","SingleAxisSortStrategy","_element","_itemPositions","orientation","_previousSwap","drag","overlaps","items","withItems","sort","pointerDelta","siblings","newIndex","_getItemIndexFromPointerPosition","isHorizontal","currentItem","siblingAtNewPosition","newPosition","itemOffset","_getItemOffsetPx","siblingOffset","_getSiblingOffsetPx","oldOrder","slice","sibling","isDraggedItem","elementToOffset","activeDraggables","_activeDraggables","newPositionReference","_shouldEnterAsFirstChild","parentElement","_cacheItemPositions","withSortPredicate","predicate","_sortPredicate","p","getActiveItemsSnapshot","reverse","updateOnScroll","elementToMeasure","b","immediateSibling","end","itemPositions","reversed","lastItemRect","firstItemRect","floor","DROP_PROXIMITY_THRESHOLD","SCROLL_PROXIMITY_THRESHOLD","DropListRef","autoScrollDisabled","autoScrollStep","enterPredicate","sortPredicate","sorted","receivingStarted","receivingStopped","_isDragging","_draggables","_siblings","_activeSiblings","_viewportScrollSubscription","_verticalScrollDirection","_horizontalScrollDirection","_stopScrollTimers","_startScrollInterval","_scrollNode","scrollStep","scrollBy","withScrollableParents","registerDropContainer","_sortStrategy","removeDropContainer","_draggingStarted","_notifyReceivingSiblings","_cacheParentPositions","_reset","previousItems","draggedItems","every","connectedTo","withOrientation","_scrollableElements","_clientRect","result","scrollNode","verticalScrollDirection","horizontalScrollDirection","getElementScrollDirections","getViewportSize","getVerticalScrollDirection","getHorizontalScrollDirection","_initialScrollSnap","msScrollSnapType","scrollSnapType","_listenToScrollEvents","_stopReceiving","_canReceive","elementFromPoint","nativeElement","_startReceiving","activeSiblings","initiator","receiver","computedVertical","computedHorizontal","scrollHeight","clientHeight","scrollWidth","clientWidth","activeCapturingEventOptions","capture","DragDropRegistry","_dropInstances","_dragInstances","_activeDragInstances","_globalListeners","_draggingPredicate","scroll","_preventDefaultWhileDragging","_persistentTouchmoveListener","some","startsWith","e","options","_clearGlobalListeners","streams","observer","eventOptions","ngOnDestroy","instance","ɵfac","DragDropRegistry_Factory","t","ɵɵinject","NgZone","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","decorators","DEFAULT_CONFIG","DragDrop","createDrag","createDropList","DragDrop_Factory","ViewportRuler","CDK_DRAG_PARENT","CDK_DROP_LIST_GROUP","CdkDropListGroup","_items","CdkDropListGroup_Factory","ɵdir","ɵɵdefineDirective","exportAs","standalone","features","ɵɵProvidersFeature","provide","useExisting","providers","CDK_DRAG_CONFIG","assertElementNode","_uniqueIdCounter","CDK_DROP_LIST","CdkDropList","_group","_dropListRef","dragDrop","_changeDetectorRef","_scrollDispatcher","_dir","_destroyed","_unsortedItems","_assignDefaults","_setupInputSyncSubscription","_handleEvents","_dropLists","addItem","_syncItemsWithRef","removeItem","getSortedItems","documentPosition","_dragRef","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","ref","correspondingDropList","console","warn","_scrollableParentsResolved","scrollableParents","getAncestorScrollContainers","scrollable","getElementRef","markForCheck","emit","dropEvent","draggingDisabled","listAutoScrollDisabled","listOrientation","CdkDropList_Factory","ElementRef","ChangeDetectorRef","ScrollDispatcher","Directionality","hostVars","hostBindings","CdkDropList_HostBindings","ɵɵattribute","outputs","useValue","host","CDK_DRAG_HANDLE","CdkDragHandle","_stateChanges","parentDrag","_parentDrag","CdkDragHandle_Factory","CDK_DRAG_PLACEHOLDER","CdkDragPlaceholder","templateRef","CdkDragPlaceholder_Factory","TemplateRef","CDK_DRAG_PREVIEW","CdkDragPreview","_matchSize","CdkDragPreview_Factory","DRAG_HOST_CLASS","CdkDrag","_viewContainerRef","_selfHandle","subscription","movedEvent","_syncInputs","ngAfterViewInit","onStable","_updateRootElement","_setupHandlesListener","freeDragPosition","ngOnChanges","changes","rootSelectorChange","positionChange","firstChange","rootElementSelector","closest","_getBoundaryElement","boundary","dir","startEvent","releaseEvent","endEvent","enterEvent","exitEvent","childHandleElements","handleInstance","dragRef","CdkDrag_Factory","ViewContainerRef","contentQueries","CdkDrag_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","CdkDrag_HostBindings","ɵɵNgOnChangesFeature","descendants","DRAG_DROP_DIRECTIVES","DragDropModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector"],"sourceRoot":"webpack:///","x_google_ignoreList":[17]}