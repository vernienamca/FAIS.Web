{"version":3,"file":"src_app_pages_pages_auth_reset-password_reset-password_module_ts.js","mappings":"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","sources":["./src/app/pages/pages/auth/reset-password/reset-password-routing.module.ts","./src/app/pages/pages/auth/reset-password/reset-password.component.ts","./src/app/pages/pages/auth/reset-password/reset-password.component.html","./src/app/pages/pages/auth/reset-password/reset-password.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { VexRoutes } from '../../../../../@vex/interfaces/vex-route.interface';\r\nimport { ResetPasswordComponent } from './reset-password.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { QuicklinkModule } from 'ngx-quicklink';\r\n\r\nconst routes: VexRoutes = [\r\n  {\r\n    path: '',\r\n    component: ResetPasswordComponent\r\n  }\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule, QuicklinkModule]\r\n})\r\nexport class ResetPasswordRoutingModule { }\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'vex-reset-password',\r\n  templateUrl: './reset-password.component.html',\r\n  styleUrls: ['./reset-password.component.scss']\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n\r\n  //icon on the textbox showing\r\n  icon = faCheck;\r\n  // icon for the lists of green check validation\r\n  greencheck = faCheck;\r\n  \r\n  imageUrl = 'assets/img/icons/forgot-password-icons/password.png';\r\n  form: FormGroup; \r\n  \r\n\r\n  inputType = 'password';\r\n  visible = false;\r\n\r\n  success = false; \r\n  constructor(\r\n    private router: Router,\r\n    private fb: FormBuilder,\r\n    private cd: ChangeDetectorRef,\r\n    private snackbar: MatSnackBar\r\n  ) {}\r\n\r\n\r\n\r\n  send() {\r\n    if (this.passwordRequirements && this.passwordsMatch()) {\r\n      this.success = true;\r\n    } else {\r\n      // Show an error message to the user\r\n      this.snackbar.open('Password requirements are not satisfied. Please check and try again.', 'Close', {\r\n        duration: 5000,\r\n      });\r\n    }\r\n  }\r\n  \r\n  \r\n\r\n ngOnInit() {\r\n  this.form = this.fb.group({\r\n    email: ['', Validators.required],\r\n    password: [\r\n      '',\r\n      [Validators.required, Validators.minLength(8)],\r\n    ],\r\n    confirmPassword: [\r\n      '',\r\n      [Validators.required, Validators.minLength(8)],\r\n    ]\r\n\r\n  });\r\n\r\n  // Listen for changes in the password field\r\n  this.form.get('password').valueChanges.subscribe(() => {\r\n    this.cd.markForCheck(); // Trigger change detection\r\n  });\r\n}\r\n  \r\n\r\npasswordsMatch(): boolean {\r\n  const password = this.form.get('password').value;\r\n  const confirmPassword = this.form.get('confirmPassword').value;\r\n\r\n  return password === confirmPassword;\r\n}\r\n\r\n\r\n// password requirements logic call the returned values on the html\r\npasswordRequirements(): { minLength: boolean, hasNumber: boolean, hasLowercase: boolean, hasSpecialCharacter: boolean } {\r\n  const password = this.form.get('password').value;\r\n\r\n  // Count the number of special characters in the password\r\n  const specialCharacterCount = (password.match(/[!@#$%^&*(),.?\":{}|<>]/g) || []).length;\r\n\r\n  return {\r\n    minLength: password.length >= 8,\r\n    hasNumber: /\\d/.test(password),\r\n    hasLowercase: /[a-z]/.test(password),\r\n    hasSpecialCharacter: specialCharacterCount >= 2\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n  toggleVisibility() {\r\n    if (this.visible) {\r\n      this.inputType = 'password';\r\n      this.visible = false;\r\n      this.cd.markForCheck();\r\n    } else {\r\n      this.inputType = 'text';\r\n      this.visible = true;\r\n      this.cd.markForCheck();\r\n    }\r\n  }\r\n}\r\n","<!-- Logo -->\r\n<div class=\"logo-container\">\r\n  <img src=\"assets/img/demo/logo.svg\" alt=\"Logo\">\r\n</div>\r\n\r\n<!-- Blue rectangle -->\r\n<div class=\"rectangle\"></div>\r\n\r\n<div class=\"Image-container\">\r\n  <img [src]=\"imageUrl\" alt=\"Reset Password\" class=\"centered-image custom-image\">\r\n\r\n\r\n\r\n  <div class=\"text-container\" style=\"max-width: 400px; margin: 0 auto;\">\r\n    <!-- Adjusted max-width and centered the text container -->\r\n\r\n    <h2>Reset your Password</h2>\r\n\r\n    <!-- Password Requirements List -->\r\n    <p style=\"text-align: left; padding-top: 20px; color: #555555; font-weight: 500; font-size: 18px;\">New password must be:</p>\r\n\r\n\r\n    <div style=\"display: flex; align-items: center;\">\r\n\r\n            <!-- List with Green Check Icons -->\r\n      <ul class=\"greencheck-list\" style=\"list-style-type: none; margin-right: 10px;\">\r\n        <li *ngIf=\"passwordRequirements().minLength\"><fa-icon [icon]=\"greencheck\" class=\"greencheck fa-2x\" style=\"color:green\"></fa-icon></li>\r\n        <li *ngIf=\"passwordRequirements().hasNumber\"><fa-icon [icon]=\"greencheck\" class=\"greencheck fa-2x\" style=\"color:green\"></fa-icon></li>\r\n        <li *ngIf=\"passwordRequirements().hasLowercase\"><fa-icon [icon]=\"greencheck\" class=\"greencheck fa-2x\" style=\"color:green\"></fa-icon></li>\r\n        <li *ngIf=\"passwordRequirements().hasSpecialCharacter\"><fa-icon [icon]=\"greencheck\" class=\"greencheck fa-2x\" style=\"color:green\"></fa-icon></li>\r\n      </ul>\r\n    \r\n    <ul class=\"password-requirements\" style=\"text-align: left;\">\r\n      <li>At least 8 characters long</li>\r\n      <li>At least 1 number</li>\r\n      <li>At least 1 lowercase character</li>\r\n      <li>Minimum of 2 special characters</li>\r\n    </ul>\r\n  </div>\r\n\r\n  <div class=\"forms-container\" style=\"max-width: 400px; margin: 0 auto;\">\r\n  \r\n\r\n        <!-- Validation confirmation -->\r\n        <div class=\"blue-box\" *ngIf=\"success && passwordRequirements().minLength && passwordRequirements().hasNumber && passwordRequirements().hasLowercase && passwordRequirements().hasSpecialCharacter\">\r\n          <!-- <fa-icon [icon]=\"icon\" class=\"check fa-2x\"></fa-icon> -->\r\n          <p>Your password has been reset successfully. You will be redirected to the login page after 5 seconds.</p>\r\n        </div>\r\n        \r\n    \r\n\r\n        <!-- Reset Password field -->\r\n        <form [formGroup]=\"form\"> \r\n        <mat-form-field class=\"flex-1\" style=\"width: 100%; font-size: 16px;\">\r\n          <mat-label> Password </mat-label>\r\n          <input [type]=\"inputType\" formControlName=\"password\" matInput required style=\"font-size: 16px;\">\r\n          <button (click)=\"toggleVisibility()\" mat-icon-button matSuffix matTooltip=\"Toggle Visibility\" type=\"button\">\r\n            <mat-icon *ngIf=\"visible\" svgIcon=\"mat:visibility\"></mat-icon>\r\n            <mat-icon *ngIf=\"!visible\" svgIcon=\"mat:visibility_off\"></mat-icon>\r\n          </button>\r\n     \r\n          <mat-error *ngIf=\"form.get('password').hasError('required')\">\r\n            Password is required\r\n          </mat-error>\r\n        </mat-form-field>\r\n        \r\n<!-- Confirm Password field -->\r\n<mat-form-field class=\"flex-1\" style=\"width: 100%; font-size: 16px;\">\r\n  <mat-label> Confirm Password </mat-label>\r\n  <input [type]=\"inputType\" formControlName=\"confirmPassword\" matInput required style=\"font-size: 16px;\">\r\n  <button (click)=\"toggleVisibility()\" mat-icon-button matSuffix matTooltip=\"Toggle Visibility\" type=\"button\">\r\n    <mat-icon *ngIf=\"visible\" svgIcon=\"mat:visibility\"></mat-icon>\r\n    <mat-icon *ngIf=\"!visible\" svgIcon=\"mat:visibility_off\"></mat-icon>\r\n  </button>\r\n\r\n  <mat-error *ngIf=\"form.get('confirmPassword').hasError('required')\">\r\n    Confirm Password is required\r\n  </mat-error>\r\n  <mat-error *ngIf=\"form.get('confirmPassword').hasError('passwordMismatch')\">\r\n    Passwords do not match\r\n  </mat-error>\r\n</mat-form-field>\r\n\r\n      </form>\r\n        <button (click)=\"send()\" mat-raised-button type=\"button\" color=\"primary\" style=\"background-color: #043C79; height: 60px;border-radius:8px; font-size: 18px; width: 100%; height: 30px;\"\r\n        [matTooltip]=\"success ? 'Password reset successful!' : ''\">\r\n        Submit\r\n      </button>\r\n</div>\r\n    \r\n\r\n  \r\n</div>\r\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ResetPasswordRoutingModule } from './reset-password-routing.module';\r\nimport { ResetPasswordComponent } from './reset-password.component';\r\n\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\n\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ResetPasswordComponent,\r\n  \r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ResetPasswordRoutingModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatTooltipModule,\r\n    MatCheckboxModule,\r\n    FlexLayoutModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    MatButtonModule,\r\n    FontAwesomeModule\r\n\r\n  ],\r\n})\r\nexport class ResetPasswordModule { }"],"names":["ResetPasswordComponent","RouterModule","QuicklinkModule","routes","path","component","ResetPasswordRoutingModule","forChild","imports","i1","exports","Validators","faCheck","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r0","greencheck","ctx_r1","ctx_r2","ctx_r3","ɵɵtext","constructor","router","fb","cd","snackbar","icon","imageUrl","inputType","visible","success","send","passwordRequirements","passwordsMatch","open","duration","ngOnInit","form","group","email","required","password","minLength","confirmPassword","get","valueChanges","subscribe","markForCheck","value","specialCharacterCount","match","length","hasNumber","test","hasLowercase","hasSpecialCharacter","toggleVisibility","ɵɵdirectiveInject","Router","i2","FormBuilder","ChangeDetectorRef","i3","MatSnackBar","selectors","decls","vars","consts","template","ResetPasswordComponent_Template","rf","ctx","ɵɵtemplate","ResetPasswordComponent_li_12_Template","ResetPasswordComponent_li_13_Template","ResetPasswordComponent_li_14_Template","ResetPasswordComponent_li_15_Template","ResetPasswordComponent_div_26_Template","ɵɵlistener","ResetPasswordComponent_Template_button_click_32_listener","ResetPasswordComponent_mat_icon_33_Template","ResetPasswordComponent_mat_icon_34_Template","ResetPasswordComponent_mat_error_35_Template","ResetPasswordComponent_Template_button_click_40_listener","ResetPasswordComponent_mat_icon_41_Template","ResetPasswordComponent_mat_icon_42_Template","ResetPasswordComponent_mat_error_43_Template","ResetPasswordComponent_mat_error_44_Template","ResetPasswordComponent_Template_button_click_45_listener","ɵɵsanitizeUrl","hasError","CommonModule","MatFormFieldModule","ReactiveFormsModule","MatInputModule","MatIconModule","MatSnackBarModule","MatTooltipModule","MatButtonModule","MatCheckboxModule","FlexLayoutModule","FontAwesomeModule","ResetPasswordModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}