{"version":3,"file":"default-src_app_pages_ui_components_components-overview_components_components-overview-progre-fcaa68.js","mappings":"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","sources":["./src/app/pages/ui/components/components-overview/components/components-overview-progress-spinner/components-overview-progress-spinner.component.ts","./src/app/pages/ui/components/components-overview/components/components-overview-progress-spinner/components-overview-progress-spinner.component.html","./src/app/pages/ui/components/components-overview/components/components-overview-progress-spinner/components-overview-progress-spinner.module.ts","./node_modules/@angular/material/fesm2022/progress-spinner.mjs"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n\r\n@Component({\r\n  selector: 'vex-components-overview-progress-spinner',\r\n  templateUrl: './components-overview-progress-spinner.component.html',\r\n  styleUrls: ['./components-overview-progress-spinner.component.scss']\r\n})\r\nexport class ComponentsOverviewProgressSpinnerComponent implements OnInit {\r\n\r\n  progressSpinnerHTML = `<mat-progress-spinner mode=\"determinate\" [value]=\"40\"></mat-progress-spinner>\r\n<mat-progress-spinner mode=\"indeterminate\" color=\"accent\"></mat-progress-spinner>`;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"card flex flex-col sm:flex-row\">\r\n  <div class=\"p-6\">\r\n    <h2 class=\"title mt-0 mb-4\">Preview</h2>\r\n    <div class=\"flex flex-col items-center gap-6\">\r\n      <mat-progress-spinner [value]=\"80\" mode=\"determinate\"></mat-progress-spinner>\r\n      <mat-progress-spinner color=\"accent\" mode=\"indeterminate\"></mat-progress-spinner>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"border-l flex-1\">\r\n    <div class=\"p-6\">\r\n      <h2 class=\"title mt-0 mb-4\">Progress Spinner</h2>\r\n      <h4 class=\"body-2 text-secondary m-0\">&lt;mat-progress-spinner&gt;</h4>\r\n    </div>\r\n\r\n    <mat-tab-group>\r\n      <mat-tab label=\"DESCRIPTION\">\r\n        <p class=\"p-6\">\r\n          A single visual indicator should be used to represent each type of operation. For example, a refresh operation\r\n          should display either a refresh bar or an activity circle, but not both.\r\n          <br>\r\n          <br>Determinate indicators display how long an operation will take.\r\n          <br>Indeterminate indicators visualize an unspecified wait time.\r\n        </p>\r\n      </mat-tab>\r\n      <mat-tab label=\"SOURCE CODE\">\r\n        <pre><code [vexHighlight]=\"progressSpinnerHTML\"></code></pre>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </div>\r\n</div>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ComponentsOverviewProgressSpinnerComponent } from './components-overview-progress-spinner.component';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { HighlightModule } from '../../../../../../../@vex/components/highlight/highlight.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ComponentsOverviewProgressSpinnerComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatTabsModule,\r\n    MatProgressSpinnerModule,\r\n    HighlightModule\r\n  ],\r\n  exports: [\r\n    ComponentsOverviewProgressSpinnerComponent\r\n  ]\r\n})\r\nexport class ComponentsOverviewProgressSpinnerModule {\r\n}\r\n","import * as i0 from '@angular/core';\nimport { InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, Optional, Inject, ViewChild, Input, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\n// Boilerplate for applying mixins to MatProgressBar.\nconst _MatProgressSpinnerBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}, 'primary');\n/** Injection token to be used to override the default options for `mat-progress-spinner`. */\nconst MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS = new InjectionToken('mat-progress-spinner-default-options', {\n    providedIn: 'root',\n    factory: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY() {\n    return { diameter: BASE_SIZE };\n}\n/**\n * Base reference size of the spinner.\n */\nconst BASE_SIZE = 100;\n/**\n * Base reference stroke width of the spinner.\n */\nconst BASE_STROKE_WIDTH = 10;\nclass MatProgressSpinner extends _MatProgressSpinnerBase {\n    constructor(elementRef, animationMode, defaults) {\n        super(elementRef);\n        /**\n         * Mode of the progress bar.\n         *\n         * Input must be one of these values: determinate, indeterminate, buffer, query, defaults to\n         * 'determinate'.\n         * Mirrored to mode attribute.\n         */\n        this.mode = this._elementRef.nativeElement.nodeName.toLowerCase() === 'mat-spinner'\n            ? 'indeterminate'\n            : 'determinate';\n        this._value = 0;\n        this._diameter = BASE_SIZE;\n        this._noopAnimations =\n            animationMode === 'NoopAnimations' && !!defaults && !defaults._forceAnimations;\n        if (defaults) {\n            if (defaults.color) {\n                this.color = this.defaultColor = defaults.color;\n            }\n            if (defaults.diameter) {\n                this.diameter = defaults.diameter;\n            }\n            if (defaults.strokeWidth) {\n                this.strokeWidth = defaults.strokeWidth;\n            }\n        }\n    }\n    /** Value of the progress bar. Defaults to zero. Mirrored to aria-valuenow. */\n    get value() {\n        return this.mode === 'determinate' ? this._value : 0;\n    }\n    set value(v) {\n        this._value = Math.max(0, Math.min(100, coerceNumberProperty(v)));\n    }\n    /** The diameter of the progress spinner (will set width and height of svg). */\n    get diameter() {\n        return this._diameter;\n    }\n    set diameter(size) {\n        this._diameter = coerceNumberProperty(size);\n    }\n    /** Stroke width of the progress spinner. */\n    get strokeWidth() {\n        return this._strokeWidth ?? this.diameter / 10;\n    }\n    set strokeWidth(value) {\n        this._strokeWidth = coerceNumberProperty(value);\n    }\n    /** The radius of the spinner, adjusted for stroke width. */\n    _circleRadius() {\n        return (this.diameter - BASE_STROKE_WIDTH) / 2;\n    }\n    /** The view box of the spinner's svg element. */\n    _viewBox() {\n        const viewBox = this._circleRadius() * 2 + this.strokeWidth;\n        return `0 0 ${viewBox} ${viewBox}`;\n    }\n    /** The stroke circumference of the svg circle. */\n    _strokeCircumference() {\n        return 2 * Math.PI * this._circleRadius();\n    }\n    /** The dash offset of the svg circle. */\n    _strokeDashOffset() {\n        if (this.mode === 'determinate') {\n            return (this._strokeCircumference() * (100 - this._value)) / 100;\n        }\n        return null;\n    }\n    /** Stroke width of the circle in percent. */\n    _circleStrokeWidth() {\n        return (this.strokeWidth / this.diameter) * 100;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatProgressSpinner, deps: [{ token: i0.ElementRef }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.0.0\", type: MatProgressSpinner, selector: \"mat-progress-spinner, mat-spinner\", inputs: { color: \"color\", mode: \"mode\", value: \"value\", diameter: \"diameter\", strokeWidth: \"strokeWidth\" }, host: { attributes: { \"role\": \"progressbar\", \"tabindex\": \"-1\" }, properties: { \"class._mat-animation-noopable\": \"_noopAnimations\", \"class.mdc-circular-progress--indeterminate\": \"mode === \\\"indeterminate\\\"\", \"style.width.px\": \"diameter\", \"style.height.px\": \"diameter\", \"style.--mdc-circular-progress-size\": \"diameter + \\\"px\\\"\", \"style.--mdc-circular-progress-active-indicator-width\": \"diameter + \\\"px\\\"\", \"attr.aria-valuemin\": \"0\", \"attr.aria-valuemax\": \"100\", \"attr.aria-valuenow\": \"mode === \\\"determinate\\\" ? value : null\", \"attr.mode\": \"mode\" }, classAttribute: \"mat-mdc-progress-spinner mdc-circular-progress\" }, viewQueries: [{ propertyName: \"_determinateCircle\", first: true, predicate: [\"determinateSpinner\"], descendants: true }], exportAs: [\"matProgressSpinner\"], usesInheritance: true, ngImport: i0, template: \"<ng-template #circle>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__indeterminate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeCircumference() / 2\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</ng-template>\\n\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<div class=\\\"mdc-circular-progress__determinate-container\\\" aria-hidden=\\\"true\\\" #determinateSpinner>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__determinate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeDashOffset()\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            class=\\\"mdc-circular-progress__determinate-circle\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</div>\\n<!--TODO: figure out why there are 3 separate svgs-->\\n<div class=\\\"mdc-circular-progress__indeterminate-container\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"mdc-circular-progress__spinner-layer\\\">\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-left\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__gap-patch\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-right\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\"@keyframes mdc-circular-progress-container-rotate{to{transform:rotate(360deg)}}@keyframes mdc-circular-progress-spinner-layer-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}}@keyframes mdc-circular-progress-color-1-fade-in-out{from{opacity:.99}25%{opacity:.99}26%{opacity:0}89%{opacity:0}90%{opacity:.99}to{opacity:.99}}@keyframes mdc-circular-progress-color-2-fade-in-out{from{opacity:0}15%{opacity:0}25%{opacity:.99}50%{opacity:.99}51%{opacity:0}to{opacity:0}}@keyframes mdc-circular-progress-color-3-fade-in-out{from{opacity:0}40%{opacity:0}50%{opacity:.99}75%{opacity:.99}76%{opacity:0}to{opacity:0}}@keyframes mdc-circular-progress-color-4-fade-in-out{from{opacity:0}65%{opacity:0}75%{opacity:.99}90%{opacity:.99}to{opacity:0}}@keyframes mdc-circular-progress-left-spin{from{transform:rotate(265deg)}50%{transform:rotate(130deg)}to{transform:rotate(265deg)}}@keyframes mdc-circular-progress-right-spin{from{transform:rotate(-265deg)}50%{transform:rotate(-130deg)}to{transform:rotate(-265deg)}}.mdc-circular-progress{display:inline-flex;position:relative;direction:ltr;line-height:0;transition:opacity 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-circular-progress__determinate-container,.mdc-circular-progress__indeterminate-circle-graphic,.mdc-circular-progress__indeterminate-container,.mdc-circular-progress__spinner-layer{position:absolute;width:100%;height:100%}.mdc-circular-progress__determinate-container{transform:rotate(-90deg)}.mdc-circular-progress__indeterminate-container{font-size:0;letter-spacing:0;white-space:nowrap;opacity:0}.mdc-circular-progress__determinate-circle-graphic,.mdc-circular-progress__indeterminate-circle-graphic{fill:rgba(0,0,0,0)}.mdc-circular-progress__determinate-circle{transition:stroke-dashoffset 500ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-circular-progress__gap-patch{position:absolute;top:0;left:47.5%;box-sizing:border-box;width:5%;height:100%;overflow:hidden}.mdc-circular-progress__gap-patch .mdc-circular-progress__indeterminate-circle-graphic{left:-900%;width:2000%;transform:rotate(180deg)}.mdc-circular-progress__circle-clipper{display:inline-flex;position:relative;width:50%;height:100%;overflow:hidden}.mdc-circular-progress__circle-clipper .mdc-circular-progress__indeterminate-circle-graphic{width:200%}.mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{left:-100%}.mdc-circular-progress--indeterminate .mdc-circular-progress__determinate-container{opacity:0}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{opacity:1}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{animation:mdc-circular-progress-container-rotate 1568.2352941176ms linear infinite}.mdc-circular-progress--indeterminate .mdc-circular-progress__spinner-layer{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-1{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-1-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-2{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-2-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-3{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-3-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-4{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-4-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-left .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-left-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-right-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--closed{opacity:0}.mat-mdc-progress-spinner{--mdc-circular-progress-active-indicator-width:4px;--mdc-circular-progress-size:48px}.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:var(--mdc-circular-progress-active-indicator-color)}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mat-mdc-progress-spinner circle{stroke-width:var(--mdc-circular-progress-active-indicator-width)}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-1 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-2 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-3 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-4 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mat-mdc-progress-spinner .mdc-circular-progress{width:var(--mdc-circular-progress-size) !important;height:var(--mdc-circular-progress-size) !important}.mat-mdc-progress-spinner{display:block;overflow:hidden;line-height:0}.mat-mdc-progress-spinner._mat-animation-noopable,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__determinate-circle{transition:none}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__spinner-layer,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container{animation:none}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container circle{stroke-dasharray:0 !important}.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic,.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle{stroke:currentColor;stroke:CanvasText}\"], dependencies: [{ kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatProgressSpinner, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-progress-spinner, mat-spinner', exportAs: 'matProgressSpinner', host: {\n                        'role': 'progressbar',\n                        'class': 'mat-mdc-progress-spinner mdc-circular-progress',\n                        // set tab index to -1 so screen readers will read the aria-label\n                        // Note: there is a known issue with JAWS that does not read progressbar aria labels on FireFox\n                        'tabindex': '-1',\n                        '[class._mat-animation-noopable]': `_noopAnimations`,\n                        '[class.mdc-circular-progress--indeterminate]': 'mode === \"indeterminate\"',\n                        '[style.width.px]': 'diameter',\n                        '[style.height.px]': 'diameter',\n                        '[style.--mdc-circular-progress-size]': 'diameter + \"px\"',\n                        '[style.--mdc-circular-progress-active-indicator-width]': 'diameter + \"px\"',\n                        '[attr.aria-valuemin]': '0',\n                        '[attr.aria-valuemax]': '100',\n                        '[attr.aria-valuenow]': 'mode === \"determinate\" ? value : null',\n                        '[attr.mode]': 'mode',\n                    }, inputs: ['color'], changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<ng-template #circle>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__indeterminate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeCircumference() / 2\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</ng-template>\\n\\n<!--\\n  All children need to be hidden for screen readers in order to support ChromeVox.\\n  More context in the issue: https://github.com/angular/components/issues/22165.\\n-->\\n<div class=\\\"mdc-circular-progress__determinate-container\\\" aria-hidden=\\\"true\\\" #determinateSpinner>\\n  <svg [attr.viewBox]=\\\"_viewBox()\\\" class=\\\"mdc-circular-progress__determinate-circle-graphic\\\"\\n       xmlns=\\\"http://www.w3.org/2000/svg\\\" focusable=\\\"false\\\">\\n    <circle [attr.r]=\\\"_circleRadius()\\\"\\n            [style.stroke-dasharray.px]=\\\"_strokeCircumference()\\\"\\n            [style.stroke-dashoffset.px]=\\\"_strokeDashOffset()\\\"\\n            [style.stroke-width.%]=\\\"_circleStrokeWidth()\\\"\\n            class=\\\"mdc-circular-progress__determinate-circle\\\"\\n            cx=\\\"50%\\\" cy=\\\"50%\\\"/>\\n  </svg>\\n</div>\\n<!--TODO: figure out why there are 3 separate svgs-->\\n<div class=\\\"mdc-circular-progress__indeterminate-container\\\" aria-hidden=\\\"true\\\">\\n  <div class=\\\"mdc-circular-progress__spinner-layer\\\">\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-left\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__gap-patch\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n    <div class=\\\"mdc-circular-progress__circle-clipper mdc-circular-progress__circle-right\\\">\\n      <ng-container [ngTemplateOutlet]=\\\"circle\\\"></ng-container>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\"@keyframes mdc-circular-progress-container-rotate{to{transform:rotate(360deg)}}@keyframes mdc-circular-progress-spinner-layer-rotate{12.5%{transform:rotate(135deg)}25%{transform:rotate(270deg)}37.5%{transform:rotate(405deg)}50%{transform:rotate(540deg)}62.5%{transform:rotate(675deg)}75%{transform:rotate(810deg)}87.5%{transform:rotate(945deg)}100%{transform:rotate(1080deg)}}@keyframes mdc-circular-progress-color-1-fade-in-out{from{opacity:.99}25%{opacity:.99}26%{opacity:0}89%{opacity:0}90%{opacity:.99}to{opacity:.99}}@keyframes mdc-circular-progress-color-2-fade-in-out{from{opacity:0}15%{opacity:0}25%{opacity:.99}50%{opacity:.99}51%{opacity:0}to{opacity:0}}@keyframes mdc-circular-progress-color-3-fade-in-out{from{opacity:0}40%{opacity:0}50%{opacity:.99}75%{opacity:.99}76%{opacity:0}to{opacity:0}}@keyframes mdc-circular-progress-color-4-fade-in-out{from{opacity:0}65%{opacity:0}75%{opacity:.99}90%{opacity:.99}to{opacity:0}}@keyframes mdc-circular-progress-left-spin{from{transform:rotate(265deg)}50%{transform:rotate(130deg)}to{transform:rotate(265deg)}}@keyframes mdc-circular-progress-right-spin{from{transform:rotate(-265deg)}50%{transform:rotate(-130deg)}to{transform:rotate(-265deg)}}.mdc-circular-progress{display:inline-flex;position:relative;direction:ltr;line-height:0;transition:opacity 250ms 0ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-circular-progress__determinate-container,.mdc-circular-progress__indeterminate-circle-graphic,.mdc-circular-progress__indeterminate-container,.mdc-circular-progress__spinner-layer{position:absolute;width:100%;height:100%}.mdc-circular-progress__determinate-container{transform:rotate(-90deg)}.mdc-circular-progress__indeterminate-container{font-size:0;letter-spacing:0;white-space:nowrap;opacity:0}.mdc-circular-progress__determinate-circle-graphic,.mdc-circular-progress__indeterminate-circle-graphic{fill:rgba(0,0,0,0)}.mdc-circular-progress__determinate-circle{transition:stroke-dashoffset 500ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mdc-circular-progress__gap-patch{position:absolute;top:0;left:47.5%;box-sizing:border-box;width:5%;height:100%;overflow:hidden}.mdc-circular-progress__gap-patch .mdc-circular-progress__indeterminate-circle-graphic{left:-900%;width:2000%;transform:rotate(180deg)}.mdc-circular-progress__circle-clipper{display:inline-flex;position:relative;width:50%;height:100%;overflow:hidden}.mdc-circular-progress__circle-clipper .mdc-circular-progress__indeterminate-circle-graphic{width:200%}.mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{left:-100%}.mdc-circular-progress--indeterminate .mdc-circular-progress__determinate-container{opacity:0}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{opacity:1}.mdc-circular-progress--indeterminate .mdc-circular-progress__indeterminate-container{animation:mdc-circular-progress-container-rotate 1568.2352941176ms linear infinite}.mdc-circular-progress--indeterminate .mdc-circular-progress__spinner-layer{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-1{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-1-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-2{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-2-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-3{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-3-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__color-4{animation:mdc-circular-progress-spinner-layer-rotate 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both,mdc-circular-progress-color-4-fade-in-out 5332ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-left .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-left-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--indeterminate .mdc-circular-progress__circle-right .mdc-circular-progress__indeterminate-circle-graphic{animation:mdc-circular-progress-right-spin 1333ms cubic-bezier(0.4, 0, 0.2, 1) infinite both}.mdc-circular-progress--closed{opacity:0}.mat-mdc-progress-spinner{--mdc-circular-progress-active-indicator-width:4px;--mdc-circular-progress-size:48px}.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:var(--mdc-circular-progress-active-indicator-color)}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle,.mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mat-mdc-progress-spinner circle{stroke-width:var(--mdc-circular-progress-active-indicator-width)}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-1 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-2 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-3 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}@media screen and (forced-colors: active),(-ms-high-contrast: active){.mat-mdc-progress-spinner .mdc-circular-progress--four-color .mdc-circular-progress__color-4 .mdc-circular-progress__indeterminate-circle-graphic{stroke:CanvasText}}.mat-mdc-progress-spinner .mdc-circular-progress{width:var(--mdc-circular-progress-size) !important;height:var(--mdc-circular-progress-size) !important}.mat-mdc-progress-spinner{display:block;overflow:hidden;line-height:0}.mat-mdc-progress-spinner._mat-animation-noopable,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__determinate-circle{transition:none}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-circle-graphic,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__spinner-layer,.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container{animation:none}.mat-mdc-progress-spinner._mat-animation-noopable .mdc-circular-progress__indeterminate-container circle{stroke-dasharray:0 !important}.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__indeterminate-circle-graphic,.cdk-high-contrast-active .mat-mdc-progress-spinner .mdc-circular-progress__determinate-circle{stroke:currentColor;stroke:CanvasText}\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [ANIMATION_MODULE_TYPE]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS]\n                }] }]; }, propDecorators: { _determinateCircle: [{\n                type: ViewChild,\n                args: ['determinateSpinner']\n            }], mode: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], diameter: [{\n                type: Input\n            }], strokeWidth: [{\n                type: Input\n            }] } });\n/**\n * @deprecated Import Progress Spinner instead. Note that the\n *    `mat-spinner` selector isn't deprecated.\n * @breaking-change 16.0.0\n */\n// tslint:disable-next-line:variable-name\nconst MatSpinner = MatProgressSpinner;\n\nclass MatProgressSpinnerModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatProgressSpinnerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.0.0\", ngImport: i0, type: MatProgressSpinnerModule, declarations: [MatProgressSpinner, MatSpinner], imports: [CommonModule], exports: [MatProgressSpinner, MatSpinner, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatProgressSpinnerModule, imports: [CommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.0.0\", ngImport: i0, type: MatProgressSpinnerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    exports: [MatProgressSpinner, MatSpinner, MatCommonModule],\n                    declarations: [MatProgressSpinner, MatSpinner],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS, MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY, MatProgressSpinner, MatProgressSpinnerModule, MatSpinner };\n"],"names":["ComponentsOverviewProgressSpinnerComponent","constructor","progressSpinnerHTML","ngOnInit","selectors","decls","vars","consts","template","ComponentsOverviewProgressSpinnerComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","CommonModule","MatTabsModule","MatProgressSpinnerModule","HighlightModule","ComponentsOverviewProgressSpinnerModule","declarations","imports","exports","InjectionToken","Component","ChangeDetectionStrategy","ViewEncapsulation","Optional","Inject","ViewChild","Input","NgModule","mixinColor","MatCommonModule","ANIMATION_MODULE_TYPE","coerceNumberProperty","i1","_c0","MatProgressSpinner_ng_template_0_Template","ɵɵnamespaceSVG","ctx_r1","ɵɵnextContext","ɵɵattribute","_viewBox","ɵɵstyleProp","_strokeCircumference","_circleStrokeWidth","_circleRadius","_MatProgressSpinnerBase","_elementRef","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS","providedIn","factory","MAT_PROGRESS_SPINNER_DEFAULT_OPTIONS_FACTORY","diameter","BASE_SIZE","BASE_STROKE_WIDTH","MatProgressSpinner","elementRef","animationMode","defaults","mode","nativeElement","nodeName","toLowerCase","_value","_diameter","_noopAnimations","_forceAnimations","color","defaultColor","strokeWidth","value","v","Math","max","min","size","_strokeWidth","viewBox","PI","_strokeDashOffset","ɵfac","MatProgressSpinner_Factory","t","ɵɵdirectiveInject","ElementRef","ɵcmp","ɵɵdefineComponent","type","viewQuery","MatProgressSpinner_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","_determinateCircle","first","hostAttrs","hostVars","hostBindings","MatProgressSpinner_HostBindings","ɵɵclassProp","inputs","exportAs","features","ɵɵInheritDefinitionFeature","MatProgressSpinner_Template","ɵɵtemplate","ɵɵtemplateRefExtractor","ɵɵnamespaceHTML","ɵɵelementContainer","_r0","ɵɵreference","dependencies","NgTemplateOutlet","styles","encapsulation","changeDetection","ngDevMode","ɵsetClassMetadata","args","selector","host","OnPush","None","undefined","decorators","MatSpinner","MatProgressSpinnerModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector"],"sourceRoot":"webpack:///","x_google_ignoreList":[3]}