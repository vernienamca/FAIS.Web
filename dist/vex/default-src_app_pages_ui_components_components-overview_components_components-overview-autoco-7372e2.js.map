{"version":3,"file":"default-src_app_pages_ui_components_components-overview_components_components-overview-autoco-7372e2.js","mappings":"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","sources":["./src/app/pages/ui/components/components-overview/components/components-overview-autocomplete/components-overview-autocomplete.component.ts","./src/app/pages/ui/components/components-overview/components/components-overview-autocomplete/components-overview-autocomplete.component.html","./src/app/pages/ui/components/components-overview/components/components-overview-autocomplete/components-overview-autocomplete.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormControl } from '@angular/forms';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { CountryState } from '../../../../forms/form-elements/form-elements.component';\r\n\r\n@Component({\r\n  selector: 'vex-components-overview-autocomplete',\r\n  templateUrl: './components-overview-autocomplete.component.html',\r\n  styleUrls: ['./components-overview-autocomplete.component.scss']\r\n})\r\nexport class ComponentsOverviewAutocompleteComponent implements OnInit {\r\n\r\n  autocompleteHTML =\r\n    `<mat-input-container>\r\n  <mat-label>State</mat-label>\r\n  <input type=\"text\" matInput [matAutocomplete]=\"auto\" [formControl]=\"stateCtrl\">\r\n  <mat-autocomplete #auto=\"matAutocomplete\">\r\n    <mat-option *ngFor=\"let option of options\" [value]=\"option\">\r\n      {{ option }}\r\n    </mat-option>\r\n  </mat-autocomplete>\r\n</mat-input-container>\r\n`;\r\n\r\n  stateCtrl: UntypedFormControl;\r\n  filteredStates$: Observable<CountryState[]>;\r\n\r\n  states: CountryState[] = [\r\n    {\r\n      name: 'Arkansas',\r\n      population: '2.978M',\r\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Arkansas.svg\r\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/9/9d/Flag_of_Arkansas.svg'\r\n    },\r\n    {\r\n      name: 'California',\r\n      population: '39.14M',\r\n      // https://commons.wikimedia.org/wiki/File:Flag_of_California.svg\r\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/0/01/Flag_of_California.svg'\r\n    },\r\n    {\r\n      name: 'Florida',\r\n      population: '20.27M',\r\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Florida.svg\r\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Florida.svg'\r\n    },\r\n    {\r\n      name: 'Texas',\r\n      population: '27.47M',\r\n      // https://commons.wikimedia.org/wiki/File:Flag_of_Texas.svg\r\n      flag: 'https://upload.wikimedia.org/wikipedia/commons/f/f7/Flag_of_Texas.svg'\r\n    }\r\n  ];\r\n\r\n  ngOnInit() {\r\n    this.stateCtrl = new UntypedFormControl();\r\n    this.filteredStates$ = this.stateCtrl.valueChanges.pipe(\r\n      startWith(''),\r\n      map(state => state ? this.filterStates(state) : this.states.slice())\r\n    );\r\n  }\r\n\r\n  filterStates(name: string) {\r\n    return this.states.filter(state =>\r\n      state.name.toLowerCase().indexOf(name.toLowerCase()) === 0);\r\n  }\r\n}\r\n","<div class=\"card flex flex-col sm:flex-row\">\r\n  <div class=\"p-6 flex-none\">\r\n    <h2 class=\"title mt-0 mb-4\">Preview</h2>\r\n\r\n    <mat-form-field class=\"w-300 max-w-full\">\r\n      <mat-label>Select a State</mat-label>\r\n      <input [formControl]=\"stateCtrl\" [matAutocomplete]=\"auto\" matInput>\r\n      <mat-autocomplete #auto=\"matAutocomplete\">\r\n        <mat-option *ngFor=\"let state of filteredStates$ | async\" [value]=\"state.name\">\r\n          <img [src]=\"state.flag\" class=\"align-middle mr-4 shadow-lg h-6 inline-block\">\r\n          <span class=\"body-1\">{{ state.name }}</span>\r\n          <span class=\"text-hint\"> | </span>\r\n          <span class=\"caption text-secondary\">Population: {{ state.population }}</span>\r\n        </mat-option>\r\n      </mat-autocomplete>\r\n      <button (click)=\"stateCtrl.reset()\" *ngIf=\"stateCtrl.value\" mat-icon-button matSuffix type=\"button\">\r\n        <mat-icon svgIcon=\"mat:close\"></mat-icon>\r\n      </button>\r\n      <button *ngIf=\"!stateCtrl.value\" mat-icon-button matSuffix type=\"button\">\r\n        <mat-icon svgIcon=\"mat:arrow_drop_down\"></mat-icon>\r\n      </button>\r\n      <mat-hint>Add this hint for a better UX!</mat-hint>\r\n    </mat-form-field>\r\n  </div>\r\n\r\n  <div class=\"border-l flex-auto\">\r\n    <div class=\"p-6\">\r\n      <h2 class=\"title mt-0 mb-4\">Autocomplete</h2>\r\n      <h4 class=\"body-2 text-secondary m-0\">&lt;mat-autocomplete&gt;</h4>\r\n    </div>\r\n\r\n    <mat-tab-group>\r\n      <mat-tab label=\"DESCRIPTION\">\r\n        <div class=\"p-6\">\r\n          <p class=\"m-0\">\r\n            Input text can be used with autocomplete to help users who have limited literacy or who write in a foreign\r\n            language.\r\n            <br>\r\n            <br><span class=\"font-medium\">For example, autocomplete can:</span>\r\n          </p>\r\n          <ul>\r\n            <li>Suggest input as itâ€™s typed (refreshing suggestions with each keystroke)</li>\r\n            <li>Fill a field with default input text</li>\r\n            <li>Pressing the return button accepts the current autocomplete suggestion.</li>\r\n          </ul>\r\n        </div>\r\n      </mat-tab>\r\n      <mat-tab label=\"SOURCE CODE\">\r\n        <pre><code [vexHighlight]=\"autocompleteHTML\"></code></pre>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ComponentsOverviewAutocompleteComponent } from './components-overview-autocomplete.component';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { HighlightModule } from '../../../../../../../@vex/components/highlight/highlight.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ComponentsOverviewAutocompleteComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatInputModule,\r\n    MatAutocompleteModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatTabsModule,\r\n    ReactiveFormsModule,\r\n    HighlightModule,\r\n  ],\r\n  exports: [ComponentsOverviewAutocompleteComponent]\r\n})\r\nexport class ComponentsOverviewAutocompleteModule {\r\n}\r\n"],"names":["UntypedFormControl","map","startWith","i0","ÉµÉµelementStart","ÉµÉµelement","ÉµÉµtext","ÉµÉµelementEnd","ÉµÉµproperty","state_r4","name","ÉµÉµadvance","flag","ÉµÉµsanitizeUrl","ÉµÉµtextInterpolate","ÉµÉµtextInterpolate1","population","ÉµÉµlistener","ComponentsOverviewAutocompleteComponent_button_12_Template_button_click_0_listener","ÉµÉµrestoreView","_r6","ctx_r5","ÉµÉµnextContext","ÉµÉµresetView","stateCtrl","reset","ComponentsOverviewAutocompleteComponent","constructor","autocompleteHTML","states","ngOnInit","filteredStates$","valueChanges","pipe","state","filterStates","slice","filter","toLowerCase","indexOf","selectors","decls","vars","consts","template","ComponentsOverviewAutocompleteComponent_Template","rf","ctx","ÉµÉµtemplate","ComponentsOverviewAutocompleteComponent_mat_option_10_Template","ComponentsOverviewAutocompleteComponent_button_12_Template","ComponentsOverviewAutocompleteComponent_button_13_Template","_r0","ÉµÉµpipeBind1","value","CommonModule","MatInputModule","MatAutocompleteModule","MatIconModule","MatButtonModule","MatTabsModule","ReactiveFormsModule","HighlightModule","ComponentsOverviewAutocompleteModule","declarations","imports","exports"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}